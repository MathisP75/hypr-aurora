/**
 * @license
 * Copyright (c) 2014, 2021, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojcore-base","jquery","knockout","ojs/ojarraytreedataprovider","ojs/ojarraydataprovider","ojs/ojdataprovider","ojs/ojeventtarget","ojs/ojtreedataprovider","ojs/ojmap"],function(e,t,s,r,i,n,a,o,h){"use strict";e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e,t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t,r=r&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r,i=i&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i,h=h&&Object.prototype.hasOwnProperty.call(h,"default")?h.default:h;
/**
     * @license
     * Copyright (c) 2014, 2021, Oracle and/or its affiliates.
     * The Universal Permissive License (UPL), Version 1.0
     * as shown at https://oss.oracle.com/licenses/upl/
     * @ignore
     */
class l{constructor(e,t,s,r){this.dataProvider=e,this.sortComparator=t,this.sectionRenderer=s,this.options=r,this._getKeyAttribute=function(){var e=null!=this.options?this.options.keyAttributes:null;return e||(e="id"),e},this.GroupAsyncIterator=class{constructor(e,t,s,r){this._parent=e,this._baseIterable=t,this._dataprovider=s,this._params=r}next(){let e=this,t=0;e._parent._currentRootSection&&(t=Object.keys(e._parent._sections).indexOf(e._parent._currentRootSection));let s=e._parent._currentBaseOffset<t||e._parent._dataFetchComplete;return this._parent._getDataFromDataProvider(this._params,"root",s).then(function(){e._parent._updateSectionIndex();let t=new e._parent.FetchByOffsetParameters(e._parent,e._parent._currentBaseOffset,e._params.size,e._params.sortCriteria,e._params.filterCriterion);return e._dataprovider.fetchByOffset(t).then(function(t){let s=t.results,r=s.map(function(e){return e.data}),i=s.map(function(e){return e.metadata});for(let t=0;t<i.length;t++)i[t]=e._parent._getNodeMetadata(s[t].data),r[t]=e._parent.sectionRenderer(i[t].key);return e._parent._currentBaseOffset=e._parent._currentBaseOffset+r.length,t.done&&e._parent._dataFetchComplete&&0==r.length?Promise.resolve(new e._parent.AsyncIteratorReturnResult(e._parent,new e._parent.FetchListResult(e._parent,e._params,r,i))):Promise.resolve(new e._parent.AsyncIteratorYieldResult(e._parent,new e._parent.FetchListResult(e._parent,e._params,r,i)))})})}},this.TreeAsyncIterator=class{constructor(e,t,s,r,i){this._parent=e,this._isParentSection=t,this._parentKey=s,this._dataprovider=r,this._params=i,this._parent._registerIteratorOffset(this,this._parentKey,0)}next(){let e=this,t=e._parent._getIteratorOffset(e),s=new e._parent.FetchByOffsetParameters(e._parent,t.offset,e._params.size,e._params.sortCriteria,e._params.filterCriterion),r=e._parent._sections[e._parentKey].children().length-t.offset>0,i=r||e._parent._dataFetchComplete;return this._parent._getDataFromDataProvider(this._params,this._parentKey,i).then(function(i){return void 0===i&&e._parent._updateSectionIndex(),e._dataprovider.fetchByOffset(s).then(function(s){let i=s.results,n=s.done,a=i.map(function(e){return e.data}),o=i.map(function(t){return e._parent._getNodeMetadata(t.data)});if(e._isParentSection)for(let t=0;t<o.length;t++)a[t]=e._parent.sectionRenderer(o[t].key);if(e._parent._updateIteratorOffset(e,t.offset+a.length),r&&n){e._parent._sections[e._parentKey].next||(n=!1)}return n&&0==a.length?Promise.resolve(new e._parent.AsyncIteratorReturnResult(e._parent,new e._parent.FetchListResult(e._parent,e._params,a,o))):Promise.resolve(new e._parent.AsyncIteratorYieldResult(e._parent,new e._parent.FetchListResult(e._parent,e._params,a,o)))})})}},this.TreeAsyncIterable=class{constructor(e,t){this._parent=e,this._asyncIterator=t,this[Symbol.asyncIterator]=function(){return this._asyncIterator}}},this.FetchListParameters=class{constructor(e,t,s,r){this._parent=e,this.size=t,this.sortCriteria=s,this.attributes=r,this.size=t,this.sortCriteria=s,this.attributes=r}},this.FetchByOffsetParameters=class{constructor(e,t,s,r,i){this._parent=e,this.offset=t,this.size=s,this.sortCriteria=r,this.filterCriterion=i,this.size=s,this.sortCriteria=r,this.offset=t,this.filterCriterion=i}},this.FetchListResult=class{constructor(e,t,s,r){this._parent=e,this.fetchParameters=t,this.data=s,this.metadata=r,this.fetchParameters=t,this.data=s,this.metadata=r}},this.AsyncIteratorYieldResult=class{constructor(e,t){this._parent=e,this.value=t,this.value=t,this.done=!1}},this.AsyncIteratorReturnResult=class{constructor(e,t){this._parent=e,this.value=t,this.value=t,this.done=!0}},this._dataProvider=e,this._addEventListeners(this._dataProvider),this._initialize()}containsKeys(e){return this.fetchByKeys(e).then(function(t){let s=new Set;return e.keys.forEach(function(e){null!=t.results.get(e)&&s.add(e)}),Promise.resolve({containsParameters:e,results:s})})}getCapability(e){return"filter"===e?null:this._baseDataProvider.getCapability(e)}getTotalSize(){return this._baseDataProvider.getTotalSize()}isEmpty(){return this._baseDataProvider.isEmpty()}getChildDataProvider(e){let s=this,n=this._getChildren(e),a=this._isParentSection(e);function o(e,t){this._parentKey=t.parentKey,this._isParentSection=t.isParentSection,this._isParentSection?(this._baseDataProvider=new i(e.childData,{}),this._baseTreeDataProvider=new r(e.childData,{keyAttributes:t.keyAttributes})):(this._baseDataProvider=new i(e.children,{keyAttributes:t.keyAttributes}),this._baseTreeDataProvider=new r(e.children,{keyAttributes:t.keyAttributes}))}return o.prototype.containsKeys=function(e){return this._baseTreeDataProvider.containsKeys(e)},o.prototype.getCapability=function(e){return this._baseTreeDataProvider.getCapability(e)},o.prototype.getTotalSize=function(){return this._baseTreeDataProvider.getTotalSize()},o.prototype.isEmpty=function(){return this._baseTreeDataProvider.isEmpty()},o.prototype.fetchByOffset=function(e){return this._baseTreeDataProvider.fetchByOffset(e)},o.prototype.fetchByKeys=function(e){return this._baseTreeDataProvider.fetchByKeys(e)},o.prototype.getChildDataProvider=function(e){return s.getChildDataProvider(e)},o.prototype.fetchFirst=function(e){e&&e.filterCriterion&&((e=t.extend({},e)).filterCriterion=null);let r=this._baseDataProvider,i=this._isParentSection,n=this._parentKey;return new s.TreeAsyncIterable(s,new s.TreeAsyncIterator(s,i,n,r,e))},o.prototype._getId=function(e){return s._getId(e)},n?new o(this._sections[e],{keyAttributes:this._getKeyAttribute(),parentKey:e,isParentSection:a}):null}fetchFirst(e){e&&e.filterCriterion&&((e=t.extend({},e)).filterCriterion=null);let s=this._baseDataProvider.fetchFirst(e);return this._initializeTreeCache(),new this.TreeAsyncIterable(this,new this.GroupAsyncIterator(this,s,this._baseDataProvider,e))}fetchByOffset(e){let t=this._baseDataProvider.fetchByOffset(e),s=this;return t.then(function(e){let t=e.results,r=[];for(let e=0;e<t.length;e++){let i=t[e].metadata,n=t[e].data;i=s._getNodeMetadata(n),r.push({data:n,metadata:i})}return{done:e.done,fetchParameters:e.fetchParameters,results:r}})}fetchByKeys(e){let t=this,s=new Map;return e.keys.forEach(function(e){let r=t._getNodeForKey(e);r&&s.set(e,{metadata:{key:e},data:r})}),Promise.resolve({fetchParameters:e,results:s})}_getChildren(e){return this._sections[e]?this._sections[e].children:null}_isParentSection(e){if(e in this._sections){let t=this._sections[e];if(t&&t.children().length>0&&this._sections[t.children()[0]])return!0}return!1}_initialize(){this._mapKeyToNode=new Map,this._mapNodeToKey=new h,this._mapArrayToSequenceNum=new Map,this._sections={},this._sectionRoots=s.observableArray(),this._sectionRootData=s.observableArray(),this._dataFetchComplete=!1,this._internalIterator=null,this.treeData=s.observableArray([]),this._initializeTreeCache(),this._createSections(),this._storedAddSection=[],this._storedAddSectionKeys=[],this._storedRemoveSection=[],this._baseDataProvider=null,this._processSectionsArray([])}_initializeTreeCache(){this._treeKeyMap=[],this._treeMetadata=[],this._treeData=[],this._currentFirstSection=null,this._currentSectionKey=null,this._currentRootSection=null,this._currentSectionData=[],this._currentOffset=0,this._currentBaseOffset=0,this._iteratorOffsets=new Map,this._dataFetchComplete=!1,this._internalIterator=null}_registerIteratorOffset(e,t,s){this._iteratorOffsets.set(e,{parentKey:t,offset:s})}_getIteratorOffset(e){return this._iteratorOffsets.get(e)}_updateIteratorOffset(e,t){let s=this._iteratorOffsets.get(e);s.offset=t,this._iteratorOffsets.set(e,s)}_getRootDataProvider(){return this}_getDataFromDataProvider(e,t,s){let r=this;if(!this._inCurrentFetchingSection(t)||s)return Promise.resolve(!0);r._internalIterator||(r._internalIterator=this._dataProvider.fetchFirst(e)[Symbol.asyncIterator](),r._previousTotalSize=0,r._internalIteratorCacheLength=0),r._previousTotalSize!=r._treeData.length&&(r._internalIteratorCacheLength=0);let i=e=>r._internalIterator.next().then(t=>{if(r._treeData=r._treeData.concat(t.value.data),r._treeMetadata=r._treeMetadata.concat(t.value.metadata),t.value.metadata.forEach(function(e){r._treeKeyMap.push(e.key)}),e+=t.value.data.length,t.done?r._dataFetchComplete=!0:r._dataFetchComplete=!1,t.done||e>=t.value.fetchParameters.size){let s=e-t.value.fetchParameters.size;return r._internalIteratorCacheLength=Math.max(0,s),void(r._previousTotalSize=r._treeData.length)}return i(e)});return i(r._internalIteratorCacheLength)}_inCurrentFetchingSection(e){return"root"===e||this._currentSectionKey==e}_processSectionsArray(t){let s=this;this.treeData().forEach(function(e,r){s._processNode(e,t)}),this._baseDataProvider||(this._baseDataProvider=new e.ArrayDataProvider(this.treeData,null))}_processTreeArray(e,t){let s,r=this;s=e instanceof Array?e:e(),s.forEach(function(e,s){r._processNode(e,t)})}_processNode(e,t,s){let r=this,i={key:null,keyPath:null};null!=s?(i.key=s,i.keyPath=t,i.keyPath.push(s)):i=r._createKeyObj(e,t,r._treeData),r._setMapEntry(i.key,e);let n=r._getChildren(e);return n&&r._processTreeArray(n,i.keyPath),i}_createSections(){let e=this;if(this.options&&this.options.groupByStrategy)"function"==typeof this.options.groupByStrategy?this._groupingFunction=this.options.groupByStrategy:"string"==typeof this.options.groupByStrategy&&(this._groupingFunction=function(t){return e._getVal(t,e.options.groupByStrategy)});else{let e=[],t=new Date(Date.now());e.push(t);let s=new Date(Date.now()),r=s.setDate(t.getDate()-1),i=s.setDate(t.getDate()-7);e.push(r),e.push(i),s=new Date(Date.now());let n=s.setMonth(t.getMonth()-1);e.push(n),s=new Date(Date.now());let a=s.setFullYear(t.getFullYear()-1);e.push(a),this._groupingFunction=function(t){let s=["In the past day","In the past week","In the past month","In the past year","Earlier"];if(t&&t.date){let r=new Date(t.date),i=1;for(;r<e[i]&&5!=i;)i++;return[s[i-1]]}return["Section 1"]}}this.treeData&&this.treeData.valueHasMutated()}_getSectionKeyFromArray(e){if(e){if(Array.isArray(e)&&e.length>0)return e[e.length-1];if("string"==typeof e)return e}return null}_createNewSection(e,t,r,i,a){let o,h,l=this,c=r.indexOf(e),_=null;0!=c&&(_=r[c-1]);let d=null,u=null,p=c==this._getDepth(r),f=!1;p&&(d=i,u=a),null!=_?(_ in this._sections&&this._sections[_].active||(this._createNewSection(_,t,r,i,a),t&&(t=!1)),o=this._sections[_].children,h=this._sections[_].childData):(o=this._sectionRoots,h=this._sectionRootData,f=!0);let y=null;if(null==a)if(null==i)o().length>0&&(i=o()[o().length-1],p&&(d=i)),o.push(e),h.push(l.sectionRenderer(e));else{for(y=this._sections[i];y.depth>c;)y=this._sections[this._sections[i].parent];if(y.depth==c){i=y.key;let t=o.indexOf(i);t>=0?(o.splice(t+1,0,e),h.splice(t+1,0,l.sectionRenderer(e))):(o.push(e),h.push(l.sectionRenderer(e))),a=y.next}else i=null,a=null,o.push(e),h.push(l.sectionRenderer(e))}else{let t=this._sections[a];for(;t.depth>c;)t=this._sections[this._sections[a].parent];if(t.depth==c){a=t.key;let s=o.indexOf(a);s>=0?(o.splice(s,0,e),h.splice(s,0,l.sectionRenderer(e))):(o.push(e),h.push(l.sectionRenderer(e))),i=t.previous}else i=null,a=null,o.push(e),h.push(l.sectionRenderer(e))}e in this._sections?(this._sections[e].active=!0,this._sections[e].previous=i,this._sections[e].next=a,this._sections[e].previousLeaf=d,this._sections[e].nextLeaf=u,this._sections[e].parent=_):this._sections[e]={parent:_,key:e,children:s.observableArray([]),childData:s.observableArray([]),previous:i,next:a,previousLeaf:d,nextLeaf:u,depth:c,active:!0,index:function(){return null!=this.parent?l._sections[this.parent].children.indexOf(this.key):l._sectionRoots.indexOf(this.key)},cutoffIndex:function(){return l._getCutoffIndex(l._sections[this.key].previousLeaf)+l._sections[this.key].children().length}},null!=i&&(this._sections[i].next=e),null!=a&&(this._sections[a].previous=e),c==this._getDepth(r)&&(null!=d&&(this._sections[d].nextLeaf=e),null!=u&&(this._sections[u].previousLeaf=e)),c!=this._getDepth(r)||a!=this._currentFirstSection&&null!=this._currentFirstSection||(this._currentFirstSection=e);let g=null;null!=a&&(g=[a]);let v=l.sectionRenderer(e);if(this._processNode(v,[],e),t&&-1==this._storedAddSectionKeys.indexOf(this._sections[e].parent)){let t=e,s={key:e},r=this._sections[e].index(),i={data:[v],indexes:[r],keys:new Set([t]),metadata:[s],addBeforeKeys:g,parentKeys:[_]},a=new n.DataProviderMutationEvent({add:i,remove:null,update:null});if(this._storedAddSection.push(a),this._storedAddSectionKeys.push(e),!this._dataFetchComplete&&f&&this._currentBaseOffset>r&&this._currentBaseOffset++,!this._dataFetchComplete)for(let[e,t]of this._iteratorOffsets)t.parentKey===_&&t.offset>r&&t.offset++,this._updateIteratorOffset(e,t.offset)}this.treeData.valueHasMutated()}_removeSection(e){let t=this._sections[e],s=t.parent,r=t.previous,i=t.next,a=t.previousLeaf,o=t.nextLeaf,h=!0;if(this._sections[i]&&this._sections[i].previous==e&&(this._sections[i].previous=t.previous),this._sections[r]&&this._sections[r].next==e&&(this._sections[r].next=t.next),this._sections[o]&&this._sections[o].previousLeaf==e&&(this._sections[o].previousLeaf=t.previousLeaf),this._sections[a]&&this._sections[a].nextLeaf==e&&(this._sections[a].nextLeaf=t.nextLeaf),this._sections[s]&&-1!=this._sections[s].children.indexOf(e)){let t=this._sections[s].children.indexOf(e);if(!this._dataFetchComplete)for(let[e,r]of this._iteratorOffsets)r.parentKey===s&&r.offset>t&&r.offset--,this._updateIteratorOffset(e,r.offset);this._sections[s].children.splice(t,1),this._sections[s].childData.splice(t,1),0===this._sections[s].children().length&&(this._removeSection(s),h&&(h=!1))}if(this._sections[e].active=!1,this._sections[e].children([]),this._sections[e].childData([]),null==this._sections[e].parent){let t=this._sectionRoots.indexOf(e);this._sectionRoots.splice(t,1),this._sectionRootData.splice(t,1),!this._dataFetchComplete&&this._currentBaseOffset>t&&this._currentBaseOffset--}if(e==this._currentFirstSection&&(this._currentFirstSection=i),h){let t={key:e},s={data:[this.sectionRenderer(e)],indexes:null,keys:new Set([e]),metadata:[t]},r=new n.DataProviderMutationEvent({add:null,remove:s,update:null});this._storedRemoveSection.push(r)}this.treeData.valueHasMutated()}_updateSectionIndex(){let e=this;for(let t=this._currentOffset;t<this._treeData.length;t++){let s=this._treeData[t],r=this._treeKeyMap[t];e._processNode(s,[],r);let i=e._groupingFunction(s),n=e._getSectionKeyFromArray(i);null==this._currentSectionKey&&(n in this._sections||e._createNewSection(n,!1,i,this._currentSectionKey,null),this._currentSectionKey=n,this._currentRootSection=this._getSectionArray(i)[0]),n===this._currentSectionKey?this._currentSectionData.push(s):(n in this._sections&&this._sections[n].active||e._createNewSection(n,!1,i,this._currentSectionKey,null),this._sections[this._currentSectionKey].children(this._currentSectionData),this._sections[this._currentSectionKey].childData(this._getChildDataFromChildren(this._currentSectionKey)),this._currentSectionKey=n,this._currentRootSection=this._getSectionArray(i)[0],this._currentSectionData=[s]),this._currentOffset++}this._currentSectionData.length>0&&(this._sections[this._currentSectionKey].children(this._currentSectionData),this._sections[this._currentSectionKey].childData(this._getChildDataFromChildren(this._currentSectionKey)));let t=[];for(let e in this._sections)null==this._sections[e].parent&&t.push(this.sectionRenderer(e));this.treeData(t),this.treeData.valueHasMutated()}_getSectionArray(e){return Array.isArray(e)?e:[e]}_getChildDataFromChildren(e){let t=this,s=[];return this._sections[e].children().forEach(function(e){s.push(t.sectionRenderer(e))}),s}_createKeyObj(e,t,s){let r=this._getId(e),i=t?t.slice():[];return null==r?(i.push(this._incrementSequenceNum(s)),r=i):(i.push(r),this.options&&"siblings"==this.options.keyAttributesScope&&(r=i)),{key:r,keyPath:i}}_getId(e){let t,s=null!=this.options?this.options.keyAttributes:null;if(s||(s="id"),null!=s){if(Array.isArray(s)){let r;for(t=[],r=0;r<s.length;r++)t[r]=this._getVal(e,s[r])}else t="@value"==s?this._getAllVals(e):this._getVal(e,s);return t}return null}_getDepth(e){return Array.isArray(e)?e.length-1:0}_getVal(e,t,s){if("string"==typeof t){let s=t.indexOf(".");if(s>0){let r=t.substring(0,s),i=t.substring(s+1),n=e[r];if(n)return this._getVal(n,i)}}return!0!==s&&"function"==typeof e[t]?e[t]():e[t]}_getAllVals(e){let t=this;return Object.keys(e).map(function(s){return t._getVal(e,s)})}_getNodeMetadata(e){let t=this._getKeyForNode(e);return null==t&&(t=this._getId(e)),{key:t}}_getNodeForKey(e){return this._getRootDataProvider()._mapKeyToNode.get(JSON.stringify(e))}_getKeyForNode(e){return this._getRootDataProvider()._mapNodeToKey.get(e)}_setMapEntry(e,t){let s=this._getRootDataProvider();s._mapKeyToNode.set(JSON.stringify(e),t),s._mapNodeToKey.set(t,e)}_incrementSequenceNum(e){let t=this._getRootDataProvider(),s=t._mapArrayToSequenceNum.get(e)||0;return t._mapArrayToSequenceNum.set(e,s+1),s}_addData(e){let t=this,s=e.data,r=e.metadata,i=e.addBeforeKeys,n=e.indexes,a=[];if(e.keys.forEach(function(e){a.push(e)}),null!=n&&n.length>0){let e=n.slice(0).sort();for(let i=0;i<e.length;i++){let o=e[i],h=n.indexOf(o);t._treeData.splice(o,0,s[h]),t._treeMetadata.splice(o,0,r[h]),t._treeKeyMap.splice(o,0,a[h])}if(null==i||0==i.length){i=[];for(let e=0;e<n.length;e++){let s=n[e]+1<t._treeKeyMap.length?t._treeKeyMap[n[e]+1]:null;i.push(s)}}}else if(null!=i&&i.length>0){let e=a.slice(0),n=r.slice(0),o=s.slice(0),h=i.slice(0);for(;h.length>0;){let s=h[0],r=e[0],i=n[0],a=o[0],l=t._treeKeyMap.indexOf(s);-1!=l?(t._treeData.splice(l,0,a),t._treeMetadata.splice(l,0,i),t._treeKeyMap.splice(l,0,r)):(e.push(r),n.push(i),o.push(a),h.push(s)),e.splice(0,1),h.splice(0,1),n.splice(0,1),o.splice(0,1)}}else{let e=[],n=[],o=[],h=0,l=!1;s.forEach(function(s,i){if(l=!1,0!=e.length)for(;h<e.length&&!l;)t.sortComparator(s,e[h])?(e.splice(h,0,s),n.splice(h,0,r[i]),o.splice(h,0,a[i]),l=!0):h++;l||(e.push(s),n.push(r[i]),o.push(a[i]))}),h=t._treeData.length-1;let c={};e.forEach(function(e,s){let r=e,i=n[s],a=o[s];for(l=!1;h>=0&&!l;)t.sortComparator(r,t._treeData[h])?(h+1!=t._treeData.length?(t._treeData.splice(h+1,0,r),t._treeMetadata.splice(h+1,0,i),c[t._getId(r)]=t._treeKeyMap[h+1],t._treeKeyMap.splice(h+1,0,a)):(t._treeData.push(r),t._treeMetadata.push(i),c[t._getId(r)]=null,t._treeKeyMap.push(a)),l=!0):h--;l||(t._treeData.splice(0,0,r),t._treeMetadata.splice(0,0,i),c[t._getId(r)]=t._treeKeyMap[0],t._treeKeyMap.splice(0,0,a),h=0)}),i=[],s.forEach(function(e){i.push(c[t._getId(e)])})}return i}_handleAdd(e){let t=this,s=[],r=t._addData(e);e.addBeforeKeys&&0!=e.addBeforeKeys.length||(e.addBeforeKeys=r),e.keys.forEach(function(t){let i=s.length,n=e.data[i],a=r[i];s.push({addBeforeKey:a,key:t,data:n})});let i=[],n=[],a=[],o=this._getIndexFromKeys(e.keys);if(e.indexes&&0!=e.indexes.length||(e.indexes=[]),e.data.forEach(function(r,h){t._processNode(r,[],s[h].key);let l,c,_=t._groupingFunction(r),d=t._getSectionKeyFromArray(_);d in t._sections&&t._sections[d].active?-1===n.indexOf(d)&&a.push(h):(0!=o[h]?(l=t._getSectionKeyFromArray(t._groupingFunction(t._treeData[o[h]-1])),c=t._sections[l].nextLeaf):l=null,o[h]+1<t._treeData.length&&null==l&&(c=t._currentFirstSection),t._createNewSection(d,!0,_,l,c),d=t._getSectionKeyFromArray(_),n.push(d));let u=t._sections[d].children,p=t._sections[d].childData;l=t._sections[d].previousLeaf;let f=0;if(null!=l&&(f=t._sections[l].cutoffIndex()),u.splice(o[h]-f,0,r),p.splice(o[h]-f,0,t.sectionRenderer(r)),i.push(d),e.indexes[h]=o[h]-f,null!=e.addBeforeKeys[h]&&h==e.data.length-1){t._getSectionKeyFromArray(t._groupingFunction(t._treeData[t._treeKeyMap.indexOf(e.addBeforeKeys[h])]))!=d&&(e.addBeforeKeys[h]=null)}}),e.parentKeys=i,n.length>0){let t=0,s=[],r=[],i=[],n=[],o=[],h=[];e.keys.forEach(function(l){-1!=a.indexOf(t)&&(r.push(l),s.push(e.data[t]),i.push(e.metadata[t]),n.push(e.parentKeys[t]),o.push(e.indexes[t]),h.push(e.addBeforeKeys[t])),t++}),e=r.length>0?{data:s,keys:new Set(r),metadata:i,parentKeys:n,indexes:o,addBeforeKeys:h}:null}return e}_handleRemove(e){let t=this,s=this._getIndexFromKeys(e.keys);this._removeKeys(e.keys);let r=[],i=[];for(var n=0;n<s.length;n++){let e=s[n],a=t._treeData[e],o=t._treeKeyMap[e],h=t._mapKeyToNode.get(JSON.stringify(o));t._mapKeyToNode.delete(JSON.stringify(o)),t._mapNodeToKey.delete(h);let l=t._getSectionKeyFromArray(t._groupingFunction(a)),c=t._sections[l].previousLeaf,_=0;null!=c&&(_=t._sections[c].cutoffIndex()),r.push({ind:e-_,sectionId:l}),i.push(e)}r.sort(function(e,t){return t.ind-e.ind}),i.sort(function(e,t){return t-e});for(let e=0;e<r.length;e++){let s=r[e].sectionId,n=t._sections[s].children;n.splice(r[e].ind,1),0===n().length&&this._removeSection(s),t._treeData.splice(i[e],1),t._treeMetadata.splice(i[e],1)}}_handleUpdate(e){let t=this,s=this._getIndexFromKeys(e.keys);e.data.forEach(function(e,r){let i=s[r],n=t._treeData[i],a=t._treeKeyMap[i],o=t._mapKeyToNode.get(JSON.stringify(a));t._mapNodeToKey.delete(o),t._setMapEntry(a,n);let h=t._getSectionKeyFromArray(t._groupingFunction(n)),l=t._sections[h].children,c=t._sections[h].previousLeaf,_=0;null!=c&&(_=t._sections[c].cutoffIndex()),l.splice(i-_,1,e),t._treeData[i]=e})}_getCutoffIndex(e){return null!=e?this._sections[e].cutoffIndex():0}_getIndexFromKeys(e){let t=this,s=[];return e.forEach(function(e){s.push(t._treeKeyMap.indexOf(e))}),s}_removeKeys(e){let t=this;e.forEach(function(e){t._treeKeyMap.splice(t._treeKeyMap.indexOf(e),1)})}_cleanEvent(e){let t=this._getIndexFromKeys(e.keys),s=0;e.keys.forEach(function(r){-1==t[s]&&e.keys.delete(r),s++});for(var r=t.length-1;r>=0;r--)-1==t[r]&&(e.data&&e.data.splice(r,1),e.indexes&&e.indexes.splice(r,1),e.metadata&&e.metadata.splice(r,1));return e}_cleanAddEvent(e){let t=this,s=e.addBeforeKeys,r=e.indexes,i=[],n=[];if(e.keys.forEach(function(e){i.push(e)}),null!=r){let e=r.slice(0).sort();for(let s=0;s<e.length;s++){let i=e[s],a=r.indexOf(i);t._treeData.length+s-n.length<i&&n.push(a)}}else if(null!=s){let e=s.slice(0).sort();for(let r=0;r<e.length;r++){let a=e[r],o=s.indexOf(a);(-1==t._treeKeyMap.indexOf(a)&&-1==i.indexOf(a)||-1==t._treeKeyMap.indexOf(a)&&-1!=i.indexOf(a)&&-1==n.indexOf(i.indexOf(a)))&&n.push(o)}}let a=0;e.keys.forEach(function(t){-1!=n.indexOf(a)&&e.keys.delete(t),a++});let o=n.splice(0).sort();for(var h=o.length-1;h>=0;h--)e.data&&e.data.splice(o[h],1),e.indexes&&e.indexes.splice(o[h],1),e.metadata&&e.metadata.splice(o[h],1),e.parentKeys&&e.parentKeys.splice(o[h],1),e.addBeforeKeys&&e.addBeforeKeys.splice(o[h],1);return e}_addEventListeners(e){let t=this;e.addEventListener("refresh",function(e){t._initialize(),t.dispatchEvent(new n.DataProviderRefreshEvent)}),e.addEventListener("mutate",function(e){e.detail.add&&(e.detail.add=t._cleanAddEvent(e.detail.add),0!=e.detail.add.keys.size&&(e.detail.add=t._handleAdd(e.detail.add),t._storedAddSection.forEach(function(e){t.dispatchEvent(e)}),e.detail.add&&t.dispatchEvent(e),t._storedAddSection=[],t._storedAddSectionKeys=[])),(e.detail.remove||e.detail.update)&&(e.detail.remove&&(e.detail.remove=t._cleanEvent(e.detail.remove),0!=e.detail.remove.keys.size&&(t._handleRemove(e.detail.remove),t.dispatchEvent(e))),e.detail.update&&(e.detail.update=t._cleanEvent(e.detail.update),0!=e.detail.update.keys.size&&(t._handleUpdate(e.detail.update),t.dispatchEvent(e)))),t._storedRemoveSection.forEach(function(e){t.dispatchEvent(e)}),t._storedRemoveSection=[]})}}return a.EventTargetMixin.applyMixin(l),e._registerLegacyNamespaceProp("GroupingDataProvider",l),l});
//# sourceMappingURL=ojgroupingdataprovider.js.map