/**
 * @license
 * Copyright (c) 2014, 2021, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["exports","ojs/ojeventtarget","ojs/ojcachediteratorresultsdataprovider","ojs/ojdedupdataprovider","ojs/ojmutateeventfilteringdataprovider"],function(e,t,i,a,r){"use strict";function n(e,t){var n,d,l;let s=null===(n=null==t?void 0:t.capabilities)||void 0===n?void 0:n.fetchCapability,c=null===(d=null==t?void 0:t.capabilities)||void 0===d?void 0:d.dedupCapability,p=null===(l=null==t?void 0:t.capabilities)||void 0===l?void 0:l.eventFilteringCapability,h=e.getCapability("fetchCapability"),v=e.getCapability("dedup"),u=e.getCapability("eventFiltering"),y=!0,f=!0,g=!0;const b=null==h?void 0:h.caching;"none"!=(null==s?void 0:s.caching)&&"all"!=b&&"visitedByCurrentIterator"!=b||(y=!1);const P=null==v?void 0:v.type;"none"!=(null==c?void 0:c.type)&&"global"!=P&&"iterator"!=P||(f=!1);const O=null==u?void 0:u.type;"none"!=(null==p?void 0:p.type)&&"global"!=O&&"iterator"!=O||(g=!1);let D=e;return y&&(D=new i(D)),f&&(D=new a(D)),g&&(D=new r(D)),e.getChildDataProvider&&(D=new o(e,D,t)),D}i=i&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i,a=a&&Object.prototype.hasOwnProperty.call(a,"default")?a.default:a,r=r&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r;class o{constructor(e,t,i){this.treeDataProvider=e,this.enhancedDataProvider=t,this.options=i,t.addEventListener(o._MUTATE,e=>{this.dispatchEvent(e)}),t.addEventListener(o._REFRESH,e=>{this.dispatchEvent(e)}),t.createOptimizedKeyMap&&(this.createOptimizedKeyMap=e=>t.createOptimizedKeyMap(e)),t.createOptimizedKeySet&&(this.createOptimizedKeySet=e=>t.createOptimizedKeySet(e))}getChildDataProvider(e){const t=this.treeDataProvider.getChildDataProvider(e);return t?n(t,this.options):null}containsKeys(e){return this.enhancedDataProvider.containsKeys(e)}fetchByKeys(e){return this.enhancedDataProvider.fetchByKeys(e)}fetchByOffset(e){return this.enhancedDataProvider.fetchByOffset(e)}fetchFirst(e){return this.enhancedDataProvider.fetchFirst(e)}getCapability(e){return this.enhancedDataProvider.getCapability(e)}getTotalSize(){return this.enhancedDataProvider.getTotalSize()}isEmpty(){return this.enhancedDataProvider.isEmpty()}}o._REFRESH="refresh",o._MUTATE="mutate",t.EventTargetMixin.applyMixin(o),e.getEnhancedDataProvider=n,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ojdataproviderfactory.js.map