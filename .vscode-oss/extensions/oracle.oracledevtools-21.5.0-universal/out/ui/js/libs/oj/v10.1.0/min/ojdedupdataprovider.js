/**
 * @license
 * Copyright (c) 2014, 2021, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojcore-base","ojs/ojdataprovider","ojs/ojeventtarget","ojs/ojcachediteratorresultsdataprovider","ojs/ojcomponentcore"],function(t,e,a,s,i){"use strict";t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t,s=s&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s;
/**
     * @license
     * Copyright (c) 2014, 2021, Oracle and/or its affiliates.
     * The Universal Permissive License (UPL), Version 1.0
     * @ignore
     */
/**
     * @preserve Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
class r{constructor(a){this.dataProvider=a,this.DedupAsyncIterable=class{constructor(t,e,a,s){this._parent=t,this.params=e,this.dataProviderAsyncIterator=a,this.cache=s,this[Symbol.asyncIterator]=()=>new this._parent.DedupAsyncIterator(this._parent,this.params,this.dataProviderAsyncIterator,this.cache)}},this.DedupAsyncIterator=class{constructor(t,e,a,s){this._parent=t,this.params=e,this.asyncIterator=a,this.cache=s,this._cachedOffset=0}next(){let t=this,a=new Set;if(this.params.size>0){this._parent.cache.getDataByOffset({offset:0,size:this._cachedOffset}).results.forEach(function(t){a.add(t.metadata.key)})}return this.asyncIterator.next().then(i=>{let n=i[r._VALUE],d=n.metadata.map(function(t){return t[r._KEY]});this._cachedOffset=this._cachedOffset+d.length;let h=new Set;d.forEach(function(t){h.add(t)});let c=[],o=[],p=[];if(h.forEach(function(t,e){a.has(t)&&(c.push(t),o.push(n.data[e]),p.push(n.metadata[e]))}),c.length>0){let a=new Set;c.map(function(t){a.add(t)});let s=new t._parent.DataProviderOperationEventDetail(t._parent,a,p,o,[]),i=new t._parent.DataProviderMutationEventDetail(t._parent,null,s,null);t._parent.dispatchEvent(new e.DataProviderMutationEvent(i))}return t._parent.dataProvider instanceof s||t._parent.cache.addListResult(i),i})}},this.DataProviderMutationEventDetail=class{constructor(t,e,a,s){this._parent=t,this.add=e,this.remove=a,this.update=s,this[r._ADD]=e,this[r._REMOVE]=a,this[r._UPDATE]=s}},this.DataProviderOperationEventDetail=class{constructor(t,e,a,s,i){this._parent=t,this.keys=e,this.metadata=a,this.data=s,this.indexes=i,this[r._KEYS]=e,this[r._METADATA]=a,this[r._DATA]=s,this[r._INDEXES]=i}};let i=this;this.cache=a instanceof s?a.cache:new t.DataCache,a.createOptimizedKeyMap&&(this.createOptimizedKeyMap=t=>a.createOptimizedKeyMap(t)),a.createOptimizedKeySet&&(this.createOptimizedKeySet=t=>a.createOptimizedKeySet(t)),a.addEventListener(r._MUTATE,t=>{t.detail&&t.detail.add&&this._processAddMutations(t.detail.add),i.dispatchEvent(t)}),a.addEventListener(r._REFRESH,t=>{i.cache.reset(),i.dispatchEvent(t)})}containsKeys(t){return this.dataProvider.containsKeys(t)}fetchByKeys(t){return this.dataProvider.fetchByKeys(t)}fetchByOffset(t){return this.dataProvider.fetchByOffset(t)}fetchFirst(t){const e=this.dataProvider.fetchFirst(t);return new this.DedupAsyncIterable(this,t,e[Symbol.asyncIterator](),this.cache)}getCapability(t){let e=this.dataProvider.getCapability(t);return"dedup"===t?{type:"iterator"}:e}getTotalSize(){return this.dataProvider.getTotalSize()}isEmpty(){return this.dataProvider.isEmpty()}_processAddMutations(t){let a=this,s=t[r._KEYS];if(s&&s.size>0){let t=new Set,i=[],r=[];if(this.cache.getDataByKeys({keys:s}).results.forEach(function(e,a){t.add(a),i.push(e.data),r.push(e.metadata)}),t.size>0){let s=new a.DataProviderOperationEventDetail(a,t,r,i,[]),n=new a.DataProviderMutationEventDetail(a,null,s,null);a.dispatchEvent(new e.DataProviderMutationEvent(n))}}}}return r._KEY="key",r._KEYS="keys",r._DATA="data",r._METADATA="metadata",r._ITEMS="items",r._FROM="from",r._OFFSET="offset",r._REFRESH="refresh",r._MUTATE="mutate",r._SIZE="size",r._FETCHPARAMETERS="fetchParameters",r._VALUE="value",r._DONE="done",r._RESULTS="results",r._ADD="add",r._UPDATE="update",r._REMOVE="remove",r._INDEXES="indexes",a.EventTargetMixin.applyMixin(r),t._registerLegacyNamespaceProp("DedupDataProvider",r),r});
//# sourceMappingURL=ojdedupdataprovider.js.map