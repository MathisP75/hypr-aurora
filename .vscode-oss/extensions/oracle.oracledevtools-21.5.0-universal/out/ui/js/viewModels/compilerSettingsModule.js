define(["require","exports","knockout","../common/scriptExecutionModels","../common/dataAccessService","../utilities","../common/localizedConstants","../common/messageService","ojs/ojbutton","ojs/ojcheckboxset","ojs/ojknockout","ojs/ojinputtext","ojs/ojformlayout","ojs/ojlabel","ojs/ojselectcombobox","ojs/ojmessage","ojs/ojmessages","ojs/ojcollapsible","ojs/ojlistview","ojs/ojprogress","ojs/ojprogress-circle"],(function(require,e,s,i,n,t,a,l){"use strict";class o{}return o.NONE="NONE",o.ALL="ALL",o.PUBLIC="PUBLIC",o.SQL="SQL",o.PLSQL="PLSQL",o.DISABLE="DISABLE",o.ENABLE="ENABLE",o.ERROR="ERROR",o.AllConfigBlank=" ",o.NoValue="",o.plscopeIdentifiers="plscopeIdentifiers",o.plscopeStatements="plscopeStatements",o.allConfigParams=["plscopeIdentifiers","plscopeStatements","allWarnings","informationalWarnings","performanceWarnings","severeWarnings"],class{constructor(e){this.configType=s.observable(i.CompileConfig.Compile),this.enableFlags=s.observableArray([]),this.optimizeLevel=s.observable(2),this.plscopeIdentifier=s.observable(o.NONE),this.plscopeStatement=s.observable(""),this.allWarnings=s.observable(o.DISABLE),this.severeWarnings=s.observable(""),this.informationalWarnings=s.observable(""),this.performanceWarnings=s.observable(""),this.saveButtonDisable=s.observable(!0),this.compileConfig=new i.CompileFlags,this.debugConfig=new i.CompileFlags,this.allConfig=new i.CompileFlags,this.isActiveAllConfig=s.observable(!1),this.isSaving=s.observable(!1),this.enableConfigLabel=s.observable(a.LocalizedConstants.Instance.useCompileSettings),this.configTypes=s.observableArray([{value:i.CompileConfig.Compile,label:a.LocalizedConstants.Instance.compile},{value:i.CompileConfig.CompileDebug,label:a.LocalizedConstants.Instance.compileDebug},{value:i.CompileConfig.AllConfigurations,label:a.LocalizedConstants.Instance.allConfigurations}]),this.compileOptLevels=[{value:2,label:"2"},{value:3,label:"3"}],this.debugOptLevels=[{value:0,label:"0"},{value:1,label:"1"}],this.optLevels=s.observableArray(this.compileOptLevels),this.identifiers=s.observable([{value:o.NONE,label:a.LocalizedConstants.Instance.none},{value:o.ALL,label:a.LocalizedConstants.Instance.all},{value:o.PLSQL,label:a.LocalizedConstants.Instance.plsql},{value:o.PUBLIC,label:a.LocalizedConstants.Instance.public},{value:o.SQL,label:a.LocalizedConstants.Instance.sql},{value:o.NoValue,label:a.LocalizedConstants.Instance.noValue}]),this.statements=s.observable([{value:o.NONE,label:a.LocalizedConstants.Instance.none},{value:o.ALL,label:a.LocalizedConstants.Instance.all},{value:o.NoValue,label:a.LocalizedConstants.Instance.noValue}]),this.warningOptions=s.observable([{value:o.ENABLE,label:a.LocalizedConstants.Instance.enable},{value:o.DISABLE,label:a.LocalizedConstants.Instance.disable},{value:o.ERROR,label:a.LocalizedConstants.Instance.error},{value:o.NoValue,label:a.LocalizedConstants.Instance.noValue}]),this.messageHandlersField=new Map,this.onCompileConfigChanged=()=>{this.updateUIConfig()},this.onParameterChanged=(e,s)=>{if(e&&e.detail){if(e.detail.previousValue==e.detail.value)return;let n=e.detail.value;void 0!==n&&(this.configType()==i.CompileConfig.AllConfigurations?this.updateAllConfig(s,n):this.updateSingleConfig(s,n))}this.updateSaveButton()},this.onOptLevelChanged=()=>{this.configType()==i.CompileConfig.Compile?this.compileConfig.optimizeLevel=this.optimizeLevel():this.debugConfig.optimizeLevel=this.optimizeLevel(),this.updateSaveButton()},this.onEnableFlagsChanged=()=>{this.configType()==i.CompileConfig.AllConfigurations?this.compileConfig.enableFlags=this.debugConfig.enableFlags=this.allConfig.enableFlags=this.getEnableFlagValue():(this.configType()==i.CompileConfig.Compile?this.compileConfig.enableFlags=this.getEnableFlagValue():this.debugConfig.enableFlags=this.getEnableFlagValue(),this.allConfig.enableFlags=this.compileConfig.enableFlags&&this.debugConfig.enableFlags),this.updateSaveButton()},this.onReset=()=>{if(this.plscopeIdentifier(o.NONE),this.compileConfig.plscopeIdentifiers=this.debugConfig.plscopeIdentifiers=this.allConfig.plscopeIdentifiers=o.NONE,this.plscopeStatement(o.NoValue),this.compileConfig.plscopeStatements=this.debugConfig.plscopeStatements=this.allConfig.plscopeStatements=o.NoValue,this.allWarnings(o.DISABLE),this.compileConfig.allWarnings=this.debugConfig.allWarnings=this.allConfig.allWarnings=o.DISABLE,this.informationalWarnings(o.NoValue),this.compileConfig.informationalWarnings=this.debugConfig.informationalWarnings=this.allConfig.informationalWarnings=o.NoValue,this.performanceWarnings(o.NoValue),this.compileConfig.performanceWarnings=this.debugConfig.performanceWarnings=this.allConfig.performanceWarnings=o.NoValue,this.severeWarnings(o.NoValue),this.compileConfig.severeWarnings=this.debugConfig.severeWarnings=this.allConfig.severeWarnings=o.NoValue,this.setEnableFlagValue(!1),this.compileConfig.enableFlags=this.debugConfig.enableFlags=this.allConfig.enableFlags=!1,this.compileConfig.optimizeLevel=2,this.debugConfig.optimizeLevel=1,this.configType()!=i.CompileConfig.AllConfigurations){let e=this.configType()==i.CompileConfig.Compile?2:1;this.optimizeLevel(e)}this.updateSaveButton()},this.onSaveSettings=()=>{n.DataAccessService.instance.logInfo("Saving compiler settings ..."),this.isSaving(!0),this.saveButtonDisable(!0);const e=new i.SaveCompilerSettingsRequest,s=new i.MessageBase;s.type=i.MessageName.saveCompilerSettingsRequest,e.executionId=n.DataAccessService.instance.currentExecutionId,e.ownerUri=n.DataAccessService.instance.URI,e.windowUri=n.DataAccessService.instance.windowUri,e.compileConfig=this.compileConfig,e.compileDebugConfig=this.debugConfig,e.configType=this.configType(),s.data=e;try{n.DataAccessService.instance.send(s),n.DataAccessService.instance.logInfo("Successfully placed save compiler settings request ")}catch(e){n.DataAccessService.instance.logError(e)}},this.preventListAnimation=e=>{let s=e.detail;e.preventDefault(),s.endCallback()},this.onThemeChanged=()=>{n.DataAccessService.instance.logInfo("Theme Changed"),t.setContrast()},this.moduleName=e.moduleName,this.messageHandlers.set(i.MessageName.themeChanged,this.onThemeChanged),this.messageHandlers.set(i.MessageName.odtConfigChanged,this.onConfigChanged),this.messageHandlers.set(i.MessageName.getCompilerSettingsResponse,e=>{this.handleGetCompilerSettingsResponse(e)}),this.messageHandlers.set(i.MessageName.saveCompilerSettingsResponse,e=>{this.handleSaveCompilerSettingsResponse(e)}),n.DataAccessService.instance.subscribe(e=>{if(e&&this.messageHandlers.get(e.type)){const s=this.messageHandlers.get(e.type);s&&s(e)}else n.DataAccessService.instance.logError("Could not find handler for message "+e.type)}),n.DataAccessService.instance.logInfo("Fetching Localized resources "),n.DataAccessService.instance.getLocalizedData().done(e=>{n.DataAccessService.instance.logInfo("Fetched localized resources."),a.LocalizedConstants.Instance.Configure(e)}).fail(e=>{n.DataAccessService.instance.logError("Localized resources "+JSON.stringify(e))}),this.initialize(),t.setContrast()}get compilerSettingsTitle(){return a.LocalizedConstants.Instance.compilerSettingsTitle}get compilerSettingsSubTitle(){return a.LocalizedConstants.Instance.compilerDebuggerSettingsSubTitle}get configurationLabel(){return a.LocalizedConstants.Instance.configurationLabel}get optLevelLabel(){return a.LocalizedConstants.Instance.optLevelLabel}get plscopeIdsLabel(){return a.LocalizedConstants.Instance.plscopeIdentifiers}get plscopeStmtsLabel(){return a.LocalizedConstants.Instance.plscopeStatements}get allLabel(){return a.LocalizedConstants.Instance.all}get informationalLabel(){return a.LocalizedConstants.Instance.informational}get performanceLabel(){return a.LocalizedConstants.Instance.performance}get severeLabel(){return a.LocalizedConstants.Instance.severe}get saveLabel(){return a.LocalizedConstants.Instance.saveBtnLabel}get resetToDefaults(){return a.LocalizedConstants.Instance.resetToDefaults}get messageHandlers(){return this.messageHandlersField}set messageHandlers(e){this.messageHandlersField=e}initialize(){n.DataAccessService.instance.logInfo("Start initializing compilerSettingsModule"),l.MessagesService.getinstance().ClearAll();const e=new i.MessageBase;e.type=i.MessageName.getCompilerSettingsRequest;const s=new i.GetCompilerSettingsRequest;s.executionId=n.DataAccessService.instance.currentExecutionId,s.ownerUri=n.DataAccessService.instance.URI,s.windowUri=n.DataAccessService.instance.windowUri,e.data=s;try{n.DataAccessService.instance.send(e),n.DataAccessService.instance.logInfo("Successfully placed get compiler settings request ")}catch(e){n.DataAccessService.instance.logError(e)}n.DataAccessService.instance.logInfo("End initializing")}updateUIConfig(){let e;switch(this.configType()){case i.CompileConfig.Compile:e=this.compileConfig,this.isActiveAllConfig(!1),this.enableConfigLabel(a.LocalizedConstants.Instance.useCompileSettings),this.optLevels(this.compileOptLevels);break;case i.CompileConfig.CompileDebug:e=this.debugConfig,this.isActiveAllConfig(!1),this.enableConfigLabel(a.LocalizedConstants.Instance.useCompileDebugSettings),this.optLevels(this.debugOptLevels);break;case i.CompileConfig.AllConfigurations:e=this.allConfig,this.isActiveAllConfig(!0),this.enableConfigLabel(a.LocalizedConstants.Instance.useAllConfigSettings)}this.setEnableFlagValue(e.enableFlags),this.plscopeIdentifier(e.plscopeIdentifiers),this.plscopeStatement(e.plscopeStatements),this.optimizeLevel(e.optimizeLevel),this.allWarnings(e.allWarnings),this.informationalWarnings(e.informationalWarnings),this.performanceWarnings(e.performanceWarnings),this.severeWarnings(e.severeWarnings)}setEnableFlagValue(e){e?this.enableFlags(["Yes"]):this.enableFlags([])}getEnableFlagValue(){return 1==this.enableFlags().length}initConfigValues(){this.allConfig.enableFlags=this.compileConfig.enableFlags&&this.debugConfig.enableFlags;let e=this.compileConfig,s=this.debugConfig;o.allConfigParams.forEach(i=>{void 0===e[i]&&(e[i]=o.NoValue),void 0===s[i]&&(s[i]=o.NoValue),e[i]===s[i]?this.allConfig[i]=e[i]:this.allConfig[i]=o.AllConfigBlank})}updateSingleConfig(e,s){let n,t;this.configType()==i.CompileConfig.Compile?(n=this.compileConfig,t=this.debugConfig):(n=this.debugConfig,t=this.compileConfig),n[e]=s,this.allConfig[e]=s==t[e]?s:o.AllConfigBlank,e==o.plscopeIdentifiers&&s!==o.NoValue&&s!==o.NONE&&this.plscopeStatement()==o.NoValue&&(this.plscopeStatement(o.ALL),n[o.plscopeStatements]=o.ALL,t[o.plscopeStatements]==o.ALL&&(this.allConfig.plscopeStatements=o.ALL))}updateAllConfig(e,s){this.compileConfig[e]=this.debugConfig[e]=this.allConfig[e]=s,e==o.plscopeIdentifiers&&s!==o.NONE&&this.plscopeStatement()==o.NoValue&&(this.plscopeStatement(o.ALL),this.debugConfig.plscopeStatements=this.compileConfig.plscopeStatements=this.allConfig.plscopeStatements=o.ALL)}handleSaveCompilerSettingsResponse(e){n.DataAccessService.instance.logInfo("Received SaveCompilerSettingsResponse");try{const s=e.data;s&&(l.MessagesService.getinstance().ClearAll(),l.MessagesService.getinstance().ShowMessage(s.message),s.success?(this.savedSettings.compileConfig=new i.CompileFlags(this.compileConfig),this.savedSettings.compileDebugConfig=new i.CompileFlags(this.debugConfig)):this.saveButtonDisable(!1))}catch(e){n.DataAccessService.instance.logError(e),this.saveButtonDisable(!1)}finally{this.isSaving(!1)}}handleGetCompilerSettingsResponse(e){n.DataAccessService.instance.logInfo("Received GetCompilerSettingsResponse");try{const s=e.data;this.compileConfig=new i.CompileFlags(s.compileConfig),this.debugConfig=new i.CompileFlags(s.compileDebugConfig),this.savedSettings=s,this.configType(s.configType),this.initConfigValues(),this.updateUIConfig()}catch(e){n.DataAccessService.instance.logError(e)}}onConfigChanged(e){const s=e.data;n.DataAccessService.instance.updatedConfig(s)}hasConfigChanged(e,s){try{return e.enableFlags!=s.enableFlags||e.plscopeIdentifiers!=s.plscopeIdentifiers||e.plscopeStatements!=s.plscopeStatements||e.optimizeLevel!=s.optimizeLevel||e.allWarnings!=s.allWarnings||e.informationalWarnings!=s.informationalWarnings||e.performanceWarnings!=s.performanceWarnings||e.severeWarnings!=s.severeWarnings}catch(e){n.DataAccessService.instance.logError(e)}return!0}updateSaveButton(){try{let e=this.hasConfigChanged(this.savedSettings.compileDebugConfig,this.debugConfig)||this.hasConfigChanged(this.savedSettings.compileConfig,this.compileConfig);this.saveButtonDisable(!e)}catch(e){n.DataAccessService.instance.logInfo("Error in saveButtonDisabled processing"),n.DataAccessService.instance.logError(e)}}}}));