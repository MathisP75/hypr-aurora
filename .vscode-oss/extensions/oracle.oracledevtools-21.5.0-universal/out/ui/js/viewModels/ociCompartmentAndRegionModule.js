define(["require","exports","knockout","../common/dataAccessService","../common/localizedConstants","../common/scriptExecutionModels","../utilities","../utilities","ojs/ojcore","ojs/ojcheckboxset","jquery","ojs/ojtreeview","ojs/ojarraytreedataprovider","ojs/ojbutton","ojs/ojknockout","ojs/ojinputtext","ojs/ojlabel","ojs/ojprogress","ojs/ojformlayout","ojs/ojselectcombobox","ojs/ojmessage","ojs/ojmessages","ojs/ojnavigationlist","ojs/ojcollapsible","ojs/ojlabelvalue","ojs/ojradioset","ojs/ojpopup","ojs/ojdialog","ojs/ojinputnumber","ojs/ojswitcher"],(function(require,e,s,o,t,a,n,i){"use strict";let c;class r{constructor(){this.updateProfile=t.LocalizedConstants.Instance.updateProfile}}return class{constructor(){this.compartmentAndRegionUILabelText=new r,this.onThemeChanged=e=>{o.DataAccessService.instance.logInfo("Theme Changed"),n.setContrast()},this.updateProfile=s.observable(""),this.handlersField=new Map,c=this,c.handlers=new Map,c.handlers.set(a.MessageName.themeChanged,c.onThemeChanged),c.handlers.set(a.MessageName.odtConfigChanged,c.onConfigChanged),o.DataAccessService.instance.subscribe(e=>{if(e&&this.handlers.get(e.type)){const s=this.handlers.get(e.type);s&&s(e)}else o.DataAccessService.instance.logError("Could not find handler for message "+e.type)}),o.DataAccessService.instance.logInfo("Fetching Localized resources "),o.DataAccessService.instance.getLocalizedData().done(e=>{o.DataAccessService.instance.logInfo("Fetched localized resources."),t.LocalizedConstants.Instance.Configure(e)}).fail(e=>{o.DataAccessService.instance.logError("Localized resources "+JSON.stringify(e))}),this.updateProfile(i.stringFormatterCsharpStyle(this.compartmentAndRegionUILabelText.updateProfile,o.DataAccessService.instance.profileName))}onConfigChanged(e){const s=e.data;o.DataAccessService.instance.updatedConfig(s)}get handlers(){return this.handlersField}set handlers(e){this.handlersField=e}}}));