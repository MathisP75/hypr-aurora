define(["require","exports","knockout","signals","../common/dataAccessService","../common/localizedConstants","../common/messageService","../common/models","../common/scriptExecutionModels","../utilities","../common/odtUtils","../common/viewService","ojs/ojdialog","ojs/ojmessage","ojs/ojmessages","ojs/ojtable"],(function(require,e,t,s,a,n,r,o,i,c,l,d){"use strict";let u;return class{constructor(){this.msgPos={my:{vertical:"top",horizontal:"end"},at:{vertical:"top",horizontal:"end"},of:"window"},this.onBatchMessageEvent=e=>{const t=e.data;for(let e=0;e<t.messageList.length;e++){const s=t.messageList[e];if(s.requestMessageType==i.OracleEventNames.scriptExecutionMessage){let e=s;u.processMessage(e)}else{let e=s;u.processDataEvent(e)}}},this.okButtonLabelField=t.observable(),this.cancelButtonField=t.observable(),this.inputDialogLabel=t.observable(),this.pendingGridIndex=-1,this.themeFileId="ThemeCss",this.themeColorFileId="ThemeColor",this.customThemeTag="customTheme",this.runInputArgDialogParameters=t.observable(new o.ParametersUIParams),this.currentDialogNameField=t.observable("runInputDialog"),this.uiDisplayMode=i.UIDisplayMode.ExceuteScript,this.inputMessage=t.observable(),this.cancelHandler=t.observable(),this.moduleRenderingCompleted=new s.Signal,this.handlersField=new Map,this.handleClearEvent=()=>{try{this.CloseInputDialog(),r.MessagesService.getinstance().ClearAll();const e=new i.MessageBase;e.type=i.MessageName.clearRequest;const t=new i.ScriptExecutionClearEventParams;t.ownerUri=a.DataAccessService.instance.URI,t.executionId=a.DataAccessService.instance.currentExecutionId,t.previousExecutionList=u.previousExecutionList,t.resourceList=this.prepareQueryListForCleanUp(),e.data=t,u.masterDataSourceList.removeAll(),u.codeObjectRunResults.removeAll(),u.dataSource.removeAll(),document.querySelector("#customResultContainer").innerHTML="",a.DataAccessService.instance.send(e)}catch(e){a.DataAccessService.instance.logError(e),r.MessagesService.getinstance().ShowMessage(n.LocalizedConstants.Instance.unableToClear)}},this.onThemeChanged=e=>{a.DataAccessService.instance.logInfo("Theme Changed"),c.setContrast()},this.onToolbarEvent=e=>{try{a.DataAccessService.instance.logInfo("OnToolbarEvent:"+JSON.stringify(e));const t=e.data;t.commandName==i.MessageName.toolbarClearClicked?this.handleClearEvent():t.commandName==i.MessageName.toolbarCancelClicked?this.handleCancelEvent():t.commandName==i.MessageName.toolbarUpdateEvent&&this.handleToolbarUpdateEvent()}catch(e){a.DataAccessService.instance.logError(e),r.MessagesService.getinstance().ShowMessage(n.LocalizedConstants.Instance.unableToClear)}},this.onCodeObjectOutputEvent=e=>{let t=e.data;if(a.DataAccessService.instance.logInfo("onCodeObjectOutputEvent"+i.UserInputParams.displayString(t)),this.codeObjectRunResults().length>0)for(let e=0;e<this.codeObjectRunResults().length;e++){let s=this.codeObjectRunResults()[e];if(s.queryId===t.queryId){let e=new o.ParametersUIParams;e.parameters=t,e.mode=o.ParametersUIMode.DisplayOutput,s.outputArgs=e}}else{let e=new o.CodeObjectOutPutUIParams,s=new o.ParametersUIParams;s.parameters=t,s.mode=o.ParametersUIMode.DisplayOutput,e.outputArgs=s,this.masterDataSourceList.push(e);let a=u.masterDataSourceList().length-1;u.addModule(a,u.masterDataSourceList()[a],u.uiDisplayMode)}},this.currentInputDialog="#inputParamDialog",this.onUserInputRequest=e=>{u.scroll=!1;const t=e.data;this.setPopupParams(t),a.DataAccessService.instance.logInfo(i.UserInputParams.displayString(t));const s=new o.ParametersUIParams;s.mode=o.ParametersUIMode.TakeParameters,s.parameters=t,this.onOkOfDialogImpl=()=>s.onOk()?s:void 0,this.onCancelOfDialogImpl=()=>{let e=s.onCancel();return u.scroll=!0,e},this.setPopupParams(t),this.inputMessage(`${n.LocalizedConstants.Instance.runplsql}  ${s.parameters.queryString}@${s.parameters.ownerUri}`),this.runInputArgDialogParameters(s),this.currentInputDialog="#inputParamDialog";document.querySelector(this.currentInputDialog).open()},this.onOkButtonClick=()=>{let e=this.onOkOfDialogImpl();if(e){const t=new o.CodeObjectOutPutUIParams;if(t.queryId=e.parameters.queryId,t.inputArgs=e,e.parameters.operationName==i.OperationName.RunCodeObject){this.codeObjectRunResults.push(t),this.masterDataSourceList.push(t);let e=u.masterDataSourceList().length-1;u.addModule(e,u.masterDataSourceList()[e],u.uiDisplayMode)}document.querySelector(this.currentInputDialog).close(),u.scroll=!0}},this.onDialogClose=e=>{e&&e.detail&&e.detail.originalEvent&&"Escape"===e.detail.originalEvent.key&&this.onCancelButtonClick()},this.onCancelButtonClick=()=>{this.onCancelOfDialogImpl();const e=this.cancelHandler();e&&e();document.querySelector(this.currentInputDialog).close()},this.onOkOfDialogImpl=()=>{},this.onCancelOfDialogImpl=()=>!0,this.refreshRateInMiliSec=1e3,this.scroll=!0,this.previousExecutionList=[],this.processMessage=e=>{if(!e.logInHistory){const t=new o.QueryMessage(e.messageType,e.message,e.queryType,e.sqlQuery,e.statement);u.masterDataSourceList.push(t);let s=u.masterDataSourceList().length-1;u.addModule(s,u.masterDataSourceList()[s],u.uiDisplayMode)}},this.processStartMessage=e=>{u.previousExecutionList.push(e.executionId),a.DataAccessService.instance.currentExecutionId=e.executionId,a.DataAccessService.instance.currentExecutionStatus=i.ExecutionStatus.Started,l.ODTUtils.sendUpdateToolbarEvent(i.ExecutionStatus.Started),l.ODTUtils.getUserPreferences(),u.executing(!0),u.uiDisplayMode!=i.UIDisplayMode.ExceuteScript&&u.uiDisplayMode!=i.UIDisplayMode.ExceuteSQLStatement||(u.scrollIntervalId=setInterval(()=>{u.scroll&&c.scrollToBottom()},u.refreshRateInMiliSec),c.scrollToBottom())},u=this,u.executing=t.observable(!0),u.pendingMsgModules=new Map,u.moduleRenderingCompleted.add(e=>{u.handlePendingModuleLoads(+e)}),u.dataSource=t.observableArray([]),u.codeObjectRunResults=t.observableArray([]),u.masterDataSourceList=t.observableArray([]),u.uiDisplayMode=a.DataAccessService.instance.displayMode,u.handlers=new Map,u.handlers.set(i.OracleEventNames.scriptExecutionMessage,u.onMessageReceived),u.handlers.set(i.OracleEventNames.scriptExecutionData,u.onDataReceived),u.handlers.set(i.OracleEventNames.scriptExecutionStarted,u.onScriptExecutionStarted),u.handlers.set(i.OracleEventNames.scriptExecutionFinished,u.onScriptExecutionFinished),u.handlers.set(i.OracleEventNames.scriptExecutionCancelled,u.onScriptExecutionCancelled),u.handlers.set(i.MessageName.themeChanged,u.onThemeChanged),u.handlers.set(i.MessageName.odtConfigChanged,u.onConfigChanged),u.handlers.set(i.OracleEventNames.scriptUserInputRequired,u.onUserInputRequest),u.handlers.set(i.OracleEventNames.scriptCodeObjectOutput,u.onCodeObjectOutputEvent),u.handlers.set(i.MessageName.toolbarEvent,u.onToolbarEvent),u.handlers.set(i.OracleEventNames.scriptExecutionBatchedMessage,e=>u.onBatchMessageEvent(e)),u.handlers.set(i.MessageName.getUserPreferencesRequest,e=>{this.handleGetUserPreferencesResponse(e)}),a.DataAccessService.instance.subscribe(e=>{l.ODTUtils.acknowledgeMessage(e),this.DispatchMessage(e)}),a.DataAccessService.instance.logInfo("Fetching Localized resources "),a.DataAccessService.instance.getLocalizedData().done(e=>{a.DataAccessService.instance.logInfo("Fetched localized resources."),n.LocalizedConstants.Instance.Configure(e)}).fail(e=>{a.DataAccessService.instance.logError("Localized resources "+JSON.stringify(e))}),c.setContrast()}getQueryId(e){const t=e.data;e.data;return t&&t.messageList.length>0?t.messageList[0].queryId:void 0}addModule(e,t,s){try{let a=new o.CustomModuleConfig;a.ds=new o.ResultArguments,a.ds.data=t,a.ds.moduleRenderingCompleted=u.moduleRenderingCompleted,a.ds.observableIndexProp=e,a.uiDisplayMode=s,a.visibility=u.getModuleVisibility(a),d.ViewFactory.instance.createAndBindView(this.getModuleName(a),a)}catch(e){a.DataAccessService.instance.logError("Failed to Add module for type "+t.dataSourceType),a.DataAccessService.instance.logError(e)}}getModuleVisibility(e){if(e.ds.data.dataSourceType==i.DataSourceType.Message){if(-1==u.pendingGridIndex)return!0;{let t=e.ds.observableIndexProp;return u.pendingMsgModules.has(u.pendingGridIndex)?u.pendingMsgModules.get(u.pendingGridIndex).push(t):u.pendingMsgModules.set(u.pendingGridIndex,[t]),!1}}return u.pendingGridIndex=e.ds.observableIndexProp,!0}getModuleName(e){return e.ds.data.dataSourceType==i.DataSourceType.Message?"messageModule":"template"}CloseInputDialog(){if(this.IsInputDialogOpen){const e=document.querySelector("#inputParamDialog");e&&e.close()}}prepareQueryListForCleanUp(){let e=[];for(let t=0;t<this.masterDataSourceList().length;t++){const s=this.masterDataSourceList()[t];if(s.dataSourceType==i.DataSourceType.QueryResult){let t=s,n=new i.ResourceIdentifier;n.executionId=t.executionId,n.queryId=t.queryId,n.queryResultId=t.queryResultId,n.ownerUri=a.DataAccessService.instance.URI,e.push(n)}}return e}handleCancelEvent(){try{this.CloseInputDialog();const e=new i.CancelScriptExecutionParams;e.ownerUri=a.DataAccessService.instance.URI,e.executionId=a.DataAccessService.instance.currentExecutionId,a.DataAccessService.instance.cancelQuery(e),r.MessagesService.getinstance().ShowMessageDetailed(n.LocalizedConstants.Instance.cancelRequestSent,o.Severity.info,l.ApplicationData.instance.TransientMessageTimeout)}catch(e){a.DataAccessService.instance.logError(e),r.MessagesService.getinstance().ShowMessage(n.LocalizedConstants.Instance.failedToSendCancelRequest)}}handleToolbarUpdateEvent(){try{l.ODTUtils.sendUpdateToolbarEvent(a.DataAccessService.instance.currentExecutionStatus)}catch(e){a.DataAccessService.instance.logError(e)}}setPopupParams(e){let t=o.PopUpDialogParams.getPopulInfo(e.operationName);this.inputDialogLabel(t.dialogHeader),this.okButtonLabel=t.okLabel,this.cancelButtonLabel=t.cancelLabel,this.currentDialogName=t.name}get messagesDataprovider(){return r.MessagesService.getinstance().messagesDataproviderField}get handlers(){return this.handlersField}set handlers(e){this.handlersField=e}get resultsPanelLabel(){return n.LocalizedConstants.Instance.resultsPanelLabel}get codeObjectResultsLabel(){return n.LocalizedConstants.Instance.codeObjectResultsLabel}get currentDialogName(){return this.currentDialogNameField()}set currentDialogName(e){this.currentDialogNameField(e)}get okButtonLabel(){return this.okButtonLabelField()}set okButtonLabel(e){this.okButtonLabelField(e)}get cancelButtonLabel(){return this.cancelButtonField()}set cancelButtonLabel(e){this.cancelButtonField(e)}handlePendingModuleLoads(e){let t=u.pendingMsgModules.get(e);t&&(t.forEach(e=>{let t=$("#moduleMessage"+e);t&&t.removeClass("hideElement")}),u.pendingMsgModules.delete(e)),u.pendingGridIndex==e&&(u.pendingGridIndex=-1)}DispatchMessage(e){if(e&&u.handlers.get(e.type)){const t=u.handlers.get(e.type);t&&t(e)}else a.DataAccessService.instance.logError("Could not find handler for message "+e.type)}get IsInputDialogOpen(){const e=document.querySelector("#inputParamDialog");return!!e&&e.isOpen()}onConfigChanged(e){const t=e.data;a.DataAccessService.instance.updatedConfig(t)}updateDataSource(e){const t=e.data;u.processDataEvent(t)}processDataEvent(e){const t=u.getGridDataModel(e.queryId,e.queryResultId);if(t)t.update(e);else{let t=new o.DataGridModel(e);u.dataSource.push(t),u.masterDataSourceList.push(t);let s=u.masterDataSourceList().length-1;u.addModule(s,u.masterDataSourceList()[s],u.uiDisplayMode)}}getGridDataModel(e,t){let s;if(e){for(let a=0;a<u.dataSource().length;a++){const n=u.dataSource()[a];if(n.queryId===e&&n.queryResultId===t){s=n;break}}return s}}onMessageReceivedLog(e){a.DataAccessService.instance.logInfo("Received "+e.type)}connected(){}disconnected(){}transitionCompleted(){}onDataReceived(e){u.updateDataSource(e)}onMessageReceived(e){const t=e.data;u.processMessage(t)}onScriptExecutionStarted(e){const t=e.data;u.processStartMessage(t)}onScriptExecutionCancelled(e){}onScriptExecutionFinished(e){u.executing(!1),a.DataAccessService.instance.currentExecutionStatus=i.ExecutionStatus.Finished,l.ODTUtils.sendUpdateToolbarEvent(i.ExecutionStatus.Finished),clearInterval(u.scrollIntervalId),u.CloseInputDialog(),r.MessagesService.getinstance().ClearAll(),setTimeout((function(){c.scrollToBottom()}),0)}handleGetUserPreferencesResponse(e){a.DataAccessService.instance.logInfo("Received GetUserPreferencesResponse");try{const t=e.data;if(t.result){let e=t.userPreferences;l.ApplicationData.instance.userPreferences=e}}catch(e){a.DataAccessService.instance.logError(e)}}}}));