define(["require","exports","knockout","../common/autonomousDBModels","../common/scriptExecutionModels","../common/dataAccessService","../common/localizedConstants","../utilities","ojs/ojknockout-keyset","../common/adbUtils","ojs/ojcontext","ojs/ojarraydataprovider","ojs/ojradioset","ojs/ojlabelvalue","ojs/ojlabel","ojs/ojselectcombobox","ojs/ojbutton","ojs/ojtable","ojs/ojknockout","ojs/ojgauge","ojs/ojinputtext","ojs/ojformlayout","ojs/ojdialog","ojs/ojarraytreedataprovider","ojs/ojlistview"],(function(require,e,t,s,a,i,o,n,r,d,l,c){"use strict";let u;class h{constructor(){this.ipAddress=o.LocalizedConstants.Instance.ipAddress,this.cidrBlock=o.LocalizedConstants.Instance.cidrBlock,this.virtualCloudNetwork=o.LocalizedConstants.Instance.virtualCloudNetwork,this.virtualCloudNetworkOCID=o.LocalizedConstants.Instance.virtualCloudNetworkOCID,this.addACLRule=o.LocalizedConstants.Instance.addACLRule,this.updateACLRule=o.LocalizedConstants.Instance.updateACLRule,this.networkAccessTypeText=o.LocalizedConstants.Instance.networkAccessTypeText,this.requiredText=" *",this.ipAddresses=o.LocalizedConstants.Instance.ipAddresses,this.update=o.LocalizedConstants.Instance.update,this.mTLSConnection=o.LocalizedConstants.Instance.mTLSConnection,this.secureAccessFromEveryWhere=o.LocalizedConstants.Instance.secureAccessFromEveryWhere,this.secureAccessFromAllowedIPs=o.LocalizedConstants.Instance.secureAccessFromAllowedIPs,this.yes=o.LocalizedConstants.Instance.yes,this.no=o.LocalizedConstants.Instance.no,this.invalidValueError=o.LocalizedConstants.Instance.invalidValue,this.publicIPaddressError=o.LocalizedConstants.Instance.publicIPaddressError,this.invalidCIDRValueError=o.LocalizedConstants.Instance.invalidCIDRValue,this.updateIPAddress=o.LocalizedConstants.Instance.updateIPAddress,this.add=o.LocalizedConstants.Instance.add,this.remove=o.LocalizedConstants.Instance.remove,this.addMyIPAddress=o.LocalizedConstants.Instance.addMyIPAddress,this.OK=o.LocalizedConstants.Instance.OK,this.cancel=o.LocalizedConstants.Instance.cancel,this.applyChanges=o.LocalizedConstants.Instance.applyChanges,this.removeACL="X",this.ipAddressHint=o.LocalizedConstants.Instance.ipAddressHint,this.cidrHint=o.LocalizedConstants.Instance.cidrHint,this.vcnOCIDHint=o.LocalizedConstants.Instance.vcnOCIDHint,this.changeCompartment=o.LocalizedConstants.Instance.changeCompartment,this.vcnIN=o.LocalizedConstants.Instance.vcnIN,this.ipAddressOrCIDRs=o.LocalizedConstants.Instance.ipAddressOrCIDRs,this.vcnInCompartment=o.LocalizedConstants.Instance.vcnInCompartment,this.compartmentName=o.LocalizedConstants.Instance.compartmentName,this.selectCompartmentForVCN=o.LocalizedConstants.Instance.selectCompartmentForVCN,this.displayName=o.LocalizedConstants.Instance.displayName,this.adminCredentials=o.LocalizedConstants.Instance.adminCredentials,this.userName=o.LocalizedConstants.Instance.userName,this.password=o.LocalizedConstants.Instance.pswdStr,this.compartmentSelected=o.LocalizedConstants.Instance.compartmentSelected,this.profileName=o.LocalizedConstants.Instance.profile,this.compartmentFullPath=o.LocalizedConstants.Instance.compartment,this.selectCompartmentForContainerdb=o.LocalizedConstants.Instance.selectCompartmentForContainerdb,this.currentSelection=o.LocalizedConstants.Instance.currentSelection,this.compartmentNameForContainerDB=o.LocalizedConstants.Instance.compartmentNameForContainerDB,this.updateCompartment=o.LocalizedConstants.Instance.updateCompartment,this.selectNewCompartment=o.LocalizedConstants.Instance.selectNewCompartment}}return class{constructor(e){if(this.disableNetworkAccessControls=t.observable(!1),this.ipNotationType=t.observable(s.IPNotationTypes.IPAddress),this.accessControlRuleUILabels=new h,this.ipNotationTypes=t.observableArray(),this.networkAccessLaunchSource=t.observable(s.updateNetworkAccessLaunchSource.UpdateNetworkAccessContextmenuForSharedDB),this.populateIPNotationTypes=()=>{this.networkAccessLaunchSource()==s.updateNetworkAccessLaunchSource.DedicatedInfrastructureDB||this.networkAccessLaunchSource()==s.updateNetworkAccessLaunchSource.UpdateNetworkAccessContextmenuForDedicatedDB?this.ipNotationTypes.push({value:s.IPNotationTypes.IPAddress,label:this.accessControlRuleUILabels.ipAddress},{value:s.IPNotationTypes.CIDRBlock,label:this.accessControlRuleUILabels.cidrBlock}):this.ipNotationTypes.push({value:s.IPNotationTypes.IPAddress,label:this.accessControlRuleUILabels.ipAddress},{value:s.IPNotationTypes.CIDRBlock,label:this.accessControlRuleUILabels.cidrBlock},{value:s.IPNotationTypes.virtualCloudNetwork,label:this.accessControlRuleUILabels.virtualCloudNetwork},{value:s.IPNotationTypes.virtualCloudNetworkOCID,label:this.accessControlRuleUILabels.virtualCloudNetworkOCID})},this.vcnOptValuesArray=t.observableArray(),this.vcnOptionValue=t.observable(),this.vcnCompartmentName=t.observable(),this.vcnOCIDOptionValues=t.observableArray(),this.vcnOCIDOptionValue=t.observable(),this.handlersField=new Map,this.showInValidValueError=t.pureComputed(()=>this.inValidValueError().length>0),this.inValidValueError=t.observable(""),this.inValidIPAddressValueErrorInDialog=t.observable(""),this.inValidCIDRAddressValueErrorInDialog=t.observable(""),this.updateACLValueErrorHandler=(e,t)=>{e==s.IPNotationTypes.IPAddress?t&&t.length>0&&(this.showIPaddressError(!0),this.inValidIPAddressValueErrorInDialog(t),this.showPublicIPaddressError(!1)):e==s.IPNotationTypes.CIDRBlock&&(t&&t.length>0?(this.showCIDRaddressError(!0),this.inValidCIDRAddressValueErrorInDialog(t)):this.cidrPreviousValue=this.cidrInputipAddress())},this.handleIPAddressNotationValueChange=(e,t,a)=>{let i=new d.aclModuleData;i.publicIPAddressHandler=this.publicIPAddressHandler,i.displayPublicIPAddressButtonHandler=this.showPublicIPAddressButtonHandler,i.uniqueIpAddressErrorValueHandler=this.updateUniqueIpAddressErrorValue,n.valueExistInCommaSepartedString(e,this.currentPublicIPAddress)||this.showPublicIPaddressError(!1),i.ipNotationType=s.IPNotationTypes.IPAddress,i.moduleId=this.moduleId,i.moduleIndex=this.index,i.ipAddressList=e,n.validIPAddress(e)||((e||void 0!==t)&&(this.showIPaddressError(!0),this.inValidIPAddressValueErrorInDialog(this.accessControlRuleUILabels.invalidValueError),this.showPublicIPaddressError(!1)),i.errorInModule=!0),a&&!this.isIPAddressUnique(i)&&(this.loadedModuleElement&&(this.showIPaddressError(!0),this.inValidIPAddressValueErrorInDialog(o.LocalizedConstants.Instance.uniqueIPAddress),this.showPublicIPaddressError(!1)),i.errorInModule=!0),i.errorInModule||(this.showIPaddressError(!1),this.inValidIPAddressValueErrorInDialog("")),this.updateACLRuleHandler(i,this.updateACLValueErrorHandler),this.showIPaddressError()&&e&&e.length>0?this.disableAddMyIpAddress(!0):this.disableAddMyIpAddress(!1)},this.onIPAddressRawValueChanged=e=>{this.handleIPAddressNotationValueChange(e.detail.value,e.detail.previousValue,!0)},this.oncidrInputipAddressRawValueChange=e=>{const t=e.detail.value;let a=new d.aclModuleData;a.publicIPAddressHandler=this.publicIPAddressHandler,a.displayPublicIPAddressButtonHandler=this.showPublicIPAddressButtonHandler,a.ipNotationType=s.IPNotationTypes.CIDRBlock,a.moduleId=this.moduleId,a.moduleIndex=this.index,n.validCIDRAddress(t)?(this.showCIDRaddressError(!1),this.inValidCIDRAddressValueErrorInDialog(""),a.cidrList=t,this.updateACLRuleHandler(a,this.updateACLValueErrorHandler)):((t||void 0!==e.detail.previousValue)&&(this.showCIDRaddressError(!0),this.inValidCIDRAddressValueErrorInDialog(this.accessControlRuleUILabels.invalidCIDRValueError)),a.errorInModule=!0,this.updateACLRuleHandler(a,this.updateACLValueErrorHandler))},this.onvcnOCIDInputipAddressOrCIDRRawValueChange=e=>{e&&e.detail&&this.updatevcnOCID(e.detail.value,this.vcnOCIDOptionValue())},this.onVCNOCIDInputRawValueChange=e=>{},this.vcnOCIDOptionsChangedHandler=e=>{e&&e.detail&&this.updatevcnOCID(this.vcnOCIDInputipAddressOrCIDRValue(),e.detail.value)},this.onvcnOCIDInputipAddressOrCIDRValueChange=e=>{},this.onVCNInputipAddressOrCIDRRawValueChange=e=>{e&&e.detail&&this.updateVCNValues(this.vcnOptionValue(),e.detail.value)},this.onVCNCompartmentNameChange=e=>{e&&e.detail&&this.getVCNList(e.detail.value)},this.getVCNDisplayNameFromOCID=e=>{let t;for(let s=0;s<this.vcnOptValuesArray().length;s++){let a=this.vcnOptValuesArray()[s];if(a.value==e){t=a.label;break}}return t},this.vcnOptionsChangedHandler=e=>{e.detail.value&&e.detail.value.length>0&&this.updateVCNValues(e.detail.value)},this.onVCNInputipAddressOrCIDRValueChange=e=>{},this.ipAddress=t.observable(""),this.cidrInputipAddress=t.observable(""),this.vcnInputipAddressOrCIDRValue=t.observable(""),this.vcnOCIDInputipAddressOrCIDRValue=t.observable(""),this.YesNoOption=t.observable("yes"),this.disableAuthenticationControl=t.observable(!0),this.ipNotationTypeChangedHandler=e=>{if(e&&e.detail){let t=new d.aclModuleData;e.detail.value==s.IPNotationTypes.IPAddress?(this.showIPaddressSpecificControls(!0),this.showVCNOCIDSpecificControls(!1),this.showCIDRIPaddressSpecificControls(!1),this.showVCNSpecificControls(!1),this.removeButtonStyle({"margin-top":"0px"}),t.ipAddressList=this.ipAddress()):e.detail.value==s.IPNotationTypes.CIDRBlock?(this.showCIDRIPaddressSpecificControls(!0),this.showVCNOCIDSpecificControls(!1),this.showIPaddressSpecificControls(!1),this.showVCNSpecificControls(!1),this.removeButtonStyle({"margin-top":"0px"}),t.cidrList=this.cidrInputipAddress()):e.detail.value==s.IPNotationTypes.virtualCloudNetwork?(this.showVCNSpecificControls(!0),this.showIPaddressSpecificControls(!1),this.showCIDRIPaddressSpecificControls(!1),this.showVCNOCIDSpecificControls(!1),this.removeButtonStyle({"margin-top":"15px"}),this.vcnCompartmentName(i.DataAccessService.instance.compartmentName),t.vcnDisplayNameInfo=this.getVCNData(s.IPNotationTypes.virtualCloudNetwork)):e.detail.value==s.IPNotationTypes.virtualCloudNetworkOCID?(this.showVCNOCIDSpecificControls(!0),this.showIPaddressSpecificControls(!1),this.showCIDRIPaddressSpecificControls(!1),this.showVCNSpecificControls(!1),t.vcnOCIDInfo=this.getVCNData(s.IPNotationTypes.virtualCloudNetworkOCID),this.getVCNList(this.vcnCompartmentName())):(this.showIPaddressSpecificControls(!0),this.showVCNOCIDSpecificControls(!1),this.showCIDRIPaddressSpecificControls(!1),this.removeButtonStyle({"margin-top":"0px"})),t.ipNotationType=e.detail.value,t.moduleId=this.moduleId,t.moduleIndex=this.index,t.publicIPAddressHandler=this.publicIPAddressHandler,t.displayPublicIPAddressButtonHandler=this.showPublicIPAddressButtonHandler,this.IPNotationChangeHandler(t),this.scrollToBottom()}},this.handleTransitionCompleted=()=>{this.updatePublicIPAddressHandler(this.moduleId,this.publicIPAddressHandler),this.uniqueIpAddressErrorValueHandler(this.moduleId,this.updateUniqueIpAddressErrorValue)},this.getVCNList=(e=null)=>{i.DataAccessService.instance.logInfo("get oci VCN List request received.");var t=new a.MessageBase;t.type=a.MessageName.ociVCNListRequestMessage;var o=new s.ociVCNRequest;o.executionId=i.DataAccessService.instance.currentExecutionId,o.windowUri=i.DataAccessService.instance.windowUri,o.profileName=u.profileName,o.compartmentName=e||this.currentCompartmentName(),o.moduleID=this.moduleId,o.vcnOptionInitValue=this.vcnOptionInitialValue,o.compartmentID=this.ipNotationType()==s.IPNotationTypes.virtualCloudNetwork?this.vcnCompartmentID:this.vcnOCIDCompartmentID,t.data=o;try{i.DataAccessService.instance.send(t),i.DataAccessService.instance.logInfo("Successfully placed get oci VCN List request.")}catch(e){i.DataAccessService.instance.logError(e)}},this.onOCIVCNListResponseDataReceived=e=>{var t=e.data;t.moduleID==this.moduleId&&(this.ipNotationType()==s.IPNotationTypes.virtualCloudNetwork?(this.vcnOptValuesArray().length=0,this.vcnOptionValue(""),t.errorMessage?(this.vcnOptionValue(t.errorMessage),this.vcnOptValuesArray.push({value:t.errorMessage,label:t.errorMessage})):t.vcnData&&(t.vcnData.forEach(e=>{this.vcnOptValuesArray.push({value:e.ocid,label:e.displayName})}),t.vcnData.length>0&&(t.vcnOptionInitValue&&t.vcnOptionInitValue.length>0?this.vcnOptionValue(t.vcnOptionInitValue):this.vcnOptionValue(t.vcnData[0].ocid)))):this.ipNotationType()==s.IPNotationTypes.virtualCloudNetworkOCID&&(this.vcnOCIDOptionValues().length=0,this.vcnOCIDOptionValue(""),t.errorMessage?(this.vcnOCIDOptionValue(t.errorMessage),this.vcnOCIDOptionValues.push({value:t.errorMessage,label:t.errorMessage})):t.vcnData&&(t.vcnData.forEach(e=>{this.vcnOCIDOptionValues.push({value:e.ocid,label:e.ocid})}),t.vcnData.length>0&&this.vcnOCIDOptionValue(this.vcnOCIDOptionInitialValue.length>0?this.vcnOCIDOptionInitialValue:t.vcnData[0].ocid))))},this.vcnOptionInitialValue="",this.vcnOCIDOptionInitialValue="",this.addPublicIPAddress=e=>{let t=!0;return n.valueExistInCommaSepartedString(this.ipAddress(),e)&&(t=!1),t},this.isLastModule=t.observable(!1),this.showPublicIPAddressButtonHandler=e=>{this.isLastModule(e)},this.updateUniqueIpAddressErrorValue=e=>{e&&this.inValidIPAddressValueErrorInDialog()==o.LocalizedConstants.Instance.uniqueIPAddress?(this.showIPaddressError(!1),this.inValidIPAddressValueErrorInDialog(""),this.disableAddMyIpAddress(!1),this.handleIPAddressNotationValueChange(this.ipAddress(),null,!1)):e||(this.showIPaddressError(!0),this.inValidIPAddressValueErrorInDialog(o.LocalizedConstants.Instance.uniqueIPAddress),this.disableAddMyIpAddress(!0),this.showPublicIPaddressError(!1))},this.publicIPAddressHandler=e=>{try{if(this.currentPublicIPAddress=e,this.disableAddMyIpAddress(!1),this.addPublicIPAddress(e)){let t=this.ipAddress();t=t&&t.length>0?`${t},${e}`:e,this.ipAddress(t),e?(this.showPublicIPaddressError(!0),this.showIPaddressError(!1)):this.showPublicIPaddressError(!1)}}catch(e){i.DataAccessService.instance.logError(e)}this.scrollToBottom();const t=document.getElementById("ipAddressID"+this.index);t&&t.focus()},this.onOk=e=>{},this.vcnLabel=t.pureComputed(()=>n.stringFormatterCsharpStyle(this.accessControlRuleUILabels.vcnInCompartment,this.vcnCompartmentName())),this.onRemoveACLModule=()=>{this.removeACLRuleHandler(this.moduleId)},this.showIPaddressError=t.observable(!1),this.showPublicIPaddressError=t.observable(!1),this.showCIDRaddressError=t.observable(!1),this.showVCNOCIDSpecificControls=t.observable(!1),this.showIPaddressSpecificControls=t.observable(!1),this.showCIDRIPaddressSpecificControls=t.observable(!1),this.showVCNSpecificControls=t.observable(!1),this.removeButtonStyle=t.observable({"margin-top":"0px"}),this.currentCompartmentName=t.observable(),this.updateCompartmentName=(e,t)=>{this.ipNotationType()==s.IPNotationTypes.virtualCloudNetwork?(this.vcnCompartmentName(e),this.vcnCompartmentID=t,this.vcnOptionInitialValue=""):this.ipNotationType()==s.IPNotationTypes.virtualCloudNetworkOCID&&(this.vcnOCIDCompartmentID=t,this.vcnOCIDOptionInitialValue="")},this.launchChangeCompartment=()=>{this.selectCompartmentListHandler(this.updateCompartmentName)},this.selectedCompartmentID=t.observable(""),this.selectedCompartmentName="",this.selectedCompartmentFullName="",this.compartmentArrayTree=[],this.selected=new r.ObservableKeySet,this.expanded=new r.ObservableKeySet,this.data=t.observable(null),this.compartmentData=t.observable(),this.rootTenancy=t.observable(),this.currentCompartmentID=t.observable(""),this.loadedModuleElement=null,this.disableAddMyIpAddress=t.observable(!1),this.onAddMyIPAddress=()=>{i.DataAccessService.instance.logInfo("getpublicIPAddress request received.");var e=new a.MessageBase;e.type=a.MessageName.ociGetPublicIPAddressRequesttMessage;var t=new s.GetPublicIPAddressRequest;t.windowUri=i.DataAccessService.instance.windowUri,t.executionId=i.DataAccessService.instance.currentExecutionId,e.data=t;try{i.DataAccessService.instance.logInfo("Sending getpublicIPAddress."),i.DataAccessService.instance.send(e),i.DataAccessService.instance.logInfo("Successfully placed getpublicIPAddress"),this.disableAddMyIpAddress(!0)}catch(e){i.DataAccessService.instance.logError(e)}},u=this,e)if(u.networkAccessLaunchSource(e.networkAccessLaunchSource),u.populateIPNotationTypes(),u.updateACLRuleHandler=e.updateACLRuleHandler,u.removeACLRuleHandler=e.removeACLRuleHandler,u.IPNotationChangeHandler=e.IPNotationChangeHandler,u.selectCompartmentListHandler=e.selectCompartmentListHandler,u.updatePublicIPAddressHandler=e.updatePublicIPAddressHandler,u.uniqueIpAddressErrorValueHandler=e.uniqueIpAddressErrorValueHandler,u.displayPublicIPAddressButtonHandler=e.displayPublicIPAddressButtonHandler,u.isIPAddressUnique=e.isIPAddressUnique,u.moduleId=e.moduleID,u.index=e.index,u.ipNotationType(e.ipNotationType),u.isLastModule(e.clickedAddAccessControlButton),u.vcnOptionValues=new c(this.vcnOptValuesArray,{keyAttributes:"value"}),e.ipNotationType==s.IPNotationTypes.IPAddress)u.hideAndShowControlsBasedUponIPNotationType(s.IPNotationTypes.IPAddress),u.ipAddress(e.ipAddressListOrCIDRList);else if(e.ipNotationType==s.IPNotationTypes.CIDRBlock)u.hideAndShowControlsBasedUponIPNotationType(s.IPNotationTypes.CIDRBlock),u.cidrInputipAddress(e.ipAddressListOrCIDRList),u.cidrPreviousValue=e.ipAddressListOrCIDRList;else if(e.ipNotationType==s.IPNotationTypes.virtualCloudNetworkOCID){u.hideAndShowControlsBasedUponIPNotationType(s.IPNotationTypes.virtualCloudNetworkOCID);let t=e.vcnOCIDInfo;u.vcnOCIDOptionValues.push({value:t.ocid,label:t.ocid}),u.vcnOCIDOptionValue(t.ocid),u.vcnOCIDOptionInitialValue=t.ocid,u.vcnOCIDInputipAddressOrCIDRValue(t.ipAddressorCIDR)}else{u.hideAndShowControlsBasedUponIPNotationType(s.IPNotationTypes.virtualCloudNetwork);let t=e.vcnDisplayNameInfo;this.vcnCompartmentName(t.compartmentName?t.compartmentName:i.DataAccessService.instance.compartmentName),this.vcnCompartmentID=t.compartmentID,u.vcnOptValuesArray.push({value:t.ocid,label:t.vcnForDisplay}),u.vcnOptionValue(t.ocid),this.vcnOptionInitialValue=t.ocid,u.vcnInputipAddressOrCIDRValue(t.ipAddressorCIDR),this.removeButtonStyle({"margin-top":"15px"})}u.handlers=new Map,i.DataAccessService.instance.subscribe(e=>{if(e&&this.handlers.get(e.type)){const t=this.handlers.get(e.type);t&&t(e)}else i.DataAccessService.instance.logError("Could not find handler for message "+e.type)}),i.DataAccessService.instance.logInfo("Fetching Localized resources "),i.DataAccessService.instance.getLocalizedData().done(e=>{i.DataAccessService.instance.logInfo("Fetched localized resources."),o.LocalizedConstants.Instance.Configure(e)}).fail(e=>{i.DataAccessService.instance.logError("Localized resources "+JSON.stringify(e))}),this.currentCompartmentName(i.DataAccessService.instance.compartmentName),this.profileName=i.DataAccessService.instance.profileName,u.handlers.set(a.MessageName.ociVCNListResponseMessage,u.onOCIVCNListResponseDataReceived),l.getPageContext().getBusyContext().whenReady().then(()=>{this.loadedModuleElement=document.getElementById("innerUpdateACLCotrolList"+this.index),this.scrollToBottom();const e=document.getElementById("ipNotationTypeID"+this.index);e&&e.focus()})}get handlers(){return this.handlersField}set handlers(e){this.handlersField=e}updatevcnOCID(e,t){let a=new d.aclModuleData;a.publicIPAddressHandler=this.publicIPAddressHandler,a.displayPublicIPAddressButtonHandler=this.showPublicIPAddressButtonHandler,a.ipNotationType=s.IPNotationTypes.virtualCloudNetworkOCID,a.moduleId=this.moduleId,a.moduleIndex=this.index,a.vcnOCIDInfo=this.getVCNData(s.IPNotationTypes.virtualCloudNetworkOCID,t,e),this.updateACLRuleHandler(a,this.updateACLValueErrorHandler)}replaceCommaWithColon(e){let t;return e&&(t=e.trim().replace(",",";")),t}updateVCNValues(e,t=null){let a=new d.aclModuleData;a.publicIPAddressHandler=this.publicIPAddressHandler,a.displayPublicIPAddressButtonHandler=this.showPublicIPAddressButtonHandler,a.ipNotationType=s.IPNotationTypes.virtualCloudNetwork,a.moduleId=this.moduleId,a.moduleIndex=this.index,a.vcnDisplayNameInfo=this.getVCNData(s.IPNotationTypes.virtualCloudNetwork,e,t),this.updateACLRuleHandler(a,this.updateACLValueErrorHandler)}hideAndShowControlsBasedUponIPNotationType(e){u.showIPaddressSpecificControls(e==s.IPNotationTypes.IPAddress),u.showCIDRIPaddressSpecificControls(e==s.IPNotationTypes.CIDRBlock),u.showVCNOCIDSpecificControls(e==s.IPNotationTypes.virtualCloudNetworkOCID),u.showVCNSpecificControls(e==s.IPNotationTypes.virtualCloudNetwork)}scrollToBottom(){if(this.loadedModuleElement){l.getContext(this.loadedModuleElement).getBusyContext().whenReady().then(()=>{this.loadedModuleElement.scrollIntoView()})}}getVCNData(e,t=null,a=null){if(e===s.IPNotationTypes.virtualCloudNetwork){null==a&&(a=this.vcnInputipAddressOrCIDRValue()),null==t&&(t=this.vcnOptionValue());let e=this.getVCNDisplayNameFromOCID(t);return(a=this.replaceCommaWithColon(a))&&a.length>0&&(e=`${e};${a}`),new s.vcnOCIDOrVCNData(s.IPNotationTypes.virtualCloudNetwork,e,t,this.vcnCompartmentName(),this.vcnCompartmentID)}if(e===s.IPNotationTypes.virtualCloudNetworkOCID){null==a&&(a=this.vcnOCIDInputipAddressOrCIDRValue()),null==t&&(t=this.vcnOCIDOptionValue());let e=t;return(a=this.replaceCommaWithColon(a))&&a.length>0&&(e=`${e};${a}`),new s.vcnOCIDOrVCNData(s.IPNotationTypes.virtualCloudNetworkOCID,e,e)}return null}}}));