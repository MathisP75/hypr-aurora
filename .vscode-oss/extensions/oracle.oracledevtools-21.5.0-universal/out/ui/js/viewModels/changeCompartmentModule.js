define(["require","exports","knockout","ojs/ojknockout-keyset","../common/dataAccessService","../common/localizedConstants","../common/scriptExecutionModels","../common/autonomousDBModels","ojs/ojarraytreedataprovider","../utilities","../common/messageService","../common/adbUtils","ojs/ojcore","ojs/ojcheckboxset","jquery","ojs/ojtreeview","ojs/ojarraytreedataprovider","ojs/ojbutton","ojs/ojknockout","ojs/ojinputtext","ojs/ojlabel","ojs/ojprogress","ojs/ojformlayout","ojs/ojselectcombobox","ojs/ojmessage","ojs/ojmessages","ojs/ojnavigationlist","ojs/ojcollapsible","ojs/ojlabelvalue","ojs/ojradioset","ojs/ojpopup","ojs/ojdialog","ojs/ojinputnumber","ojs/ojlistview","ojs/ojinputtext","ojs/ojknockout","ojs/ojbutton","ojs/ojformlayout"],(function(require,e,t,a,s,n,o,r,i,c,m,l){"use strict";let d;class h{constructor(){this.changeCompartment=n.LocalizedConstants.Instance.changeCompartment,this.compartmentName=n.LocalizedConstants.Instance.compartmentName,this.displayName=n.LocalizedConstants.Instance.displayName,this.adminCredentials=n.LocalizedConstants.Instance.adminCredentials,this.userName=n.LocalizedConstants.Instance.userName,this.password=n.LocalizedConstants.Instance.pswdStr,this.requiredText=" *",this.compartmentSelected=n.LocalizedConstants.Instance.compartmentSelected,this.profileName=n.LocalizedConstants.Instance.profile,this.OK=n.LocalizedConstants.Instance.OK,this.compartmentFullPath=n.LocalizedConstants.Instance.compartment,this.selectCompartmentForContainerdb=n.LocalizedConstants.Instance.selectCompartmentForContainerdb,this.currentSelection=n.LocalizedConstants.Instance.currentSelection,this.compartmentNameForContainerDB=n.LocalizedConstants.Instance.compartmentNameForContainerDB,this.updateCompartment=n.LocalizedConstants.Instance.updateCompartment,this.selectNewCompartment=n.LocalizedConstants.Instance.selectNewCompartment,this.cancel=n.LocalizedConstants.Instance.cancel}}return class{constructor(e){this.changeCompartmentUILabelText=new h,this.compartmentFullNameForDisplay=t.observable(""),this.profileName=t.observable(""),this.compartmentData=t.observable(),this.rootTenancy=t.observable(),this.currentCompartmentID=t.observable(""),this.currentCompartmentName=t.observable(""),this.currentCompartmentFullName=t.observable(),this.selectedCompartmentID=t.observable(""),this.selectedCompartmentName="",this.selectedCompartmentFullName="",this.launchSourceConfigureACL=!1,this.compartmentArrayTree=[],this.selected=new a.ObservableKeySet,this.expanded=new a.ObservableKeySet,this.data=t.observable(null),this.selectedChanged=e=>{if(e&&e.detail&&e.detail.value&&e.detail.value.values().size>0){var t=[];e.detail.value.values().forEach((function(e){t.push(e)}));var a=l.adbUtils.findNode(this.compartmentArrayTree,t[0]);null!=a&&null!=a.fullPath&&(this.selectedCompartmentID(a.id),this.selectedCompartmentName=a.nameForDisplay,this.selectedCompartmentFullName=a.fullNameForDisplay)}},this.okButtonDisabled=t.pureComputed(()=>{let e=!0;return!this.launchSourceConfigureACL&&(this.currentCompartmentID()!==this.selectedCompartmentID()&&(e=!1),e)},this),this.onOKCompartment=()=>{let e=this.selectedCompartmentID(),t=this.selectedCompartmentName,a=this.selectedCompartmentFullName;this.changeCompartmentUIHandler(e,t,a),this.selectCurrentCompartment()},this.onCancelCompartment=()=>{this.changeCompartmentUIHandler(),this.selectCurrentCompartment()},this.handleTransitionCompleted=()=>{this.ociCompartmentResponse?this.pouplateTree(this.ociCompartmentResponse):(d.handlers.set(o.MessageName.ociCompartmentResponseMessage,d.onOCICompartmentsDataReceived),d.getOCICompartments())},this.handlersField=new Map,this.onOCICompartmentsDataReceived=e=>{var t=e.data;this.pouplateTree(t)},this.transitionCompleted=()=>{},this.onThemeChanged=e=>{s.DataAccessService.instance.logInfo("Theme Changed"),c.setContrast()},this.selectCurrentCompartment=()=>{this.launchSourceConfigureACL&&(this.selected.clear(),this.selected.add([this.currentCompartmentID()]),this.selectedCompartmentName=this.currentCompartmentName(),this.selectedCompartmentFullName=this.currentCompartmentFullName(),this.selectedCompartmentID(this.currentCompartmentID()))},d=this,e&&(this.currentCompartmentFullName=e.currentCompartmentFullName,this.profileName=e.profileName,this.currentCompartmentName=e.currentCompartmentName,this.changeCompartmentUIHandler=e.changeCompartmentUIHandler,this.ociCompartmentResponse=e.ociCompartmentResponse,e.launchSourceConfigureACL&&(this.launchSourceConfigureACL=e.launchSourceConfigureACL)),d.handlers=new Map,d.handlers.set(o.MessageName.themeChanged,d.onThemeChanged),d.handlers.set(o.MessageName.odtConfigChanged,d.onConfigChanged),s.DataAccessService.instance.subscribe(e=>{if(e&&this.handlers.get(e.type)){const t=this.handlers.get(e.type);t&&t(e)}else s.DataAccessService.instance.logError("Could not find handler for message "+e.type)}),s.DataAccessService.instance.logInfo("Fetching Localized resources "),s.DataAccessService.instance.getLocalizedData().done(e=>{s.DataAccessService.instance.logInfo("Fetched localized resources."),n.LocalizedConstants.Instance.Configure(e)}).fail(e=>{s.DataAccessService.instance.logError("Localized resources "+JSON.stringify(e))}),c.setContrast()}getOCICompartments(){s.DataAccessService.instance.logInfo("get oci compartment request received.");var e=new o.MessageBase;e.type=o.MessageName.ociCompartmentRequestMessage;var t=new r.ociCompartmentRequest;t.executionId=s.DataAccessService.instance.currentExecutionId,t.windowUri=s.DataAccessService.instance.windowUri,t.profileName=s.DataAccessService.instance.profileName,e.data=t;try{s.DataAccessService.instance.send(e),s.DataAccessService.instance.logInfo("Successfully placed get oci compartment request")}catch(e){s.DataAccessService.instance.logError(e)}}get handlers(){return this.handlersField}set handlers(e){this.handlersField=e}pouplateTree(e){var t=e,a=JSON.parse(t.compartmentList),s=t.rootNodeName;if(this.rootTenancy(s),t&&t.compartmentList&&(this.compartmentArrayTree.push(a),this.data(new i(this.compartmentArrayTree,{keyAttributes:"id"}))),t.compartmentToselect){this.selected.add([t.compartmentToselect]),null!=t.ancestorList&&t.ancestorList.length>0&&(t.ancestorList=t.ancestorList.slice(0,-1),this.expanded.add(t.ancestorList));var n=l.adbUtils.findNode(this.compartmentArrayTree,t.compartmentToselect);this.currentCompartmentID(n.id),this.currentCompartmentName(n.nameForDisplay),this.currentCompartmentFullName(n.fullNameForDisplay)}else this.selected.add([t.rootNodeID])}onConfigChanged(e){const t=e.data;s.DataAccessService.instance.updatedConfig(t)}get messagesDataprovider(){return m.MessagesService.getinstance().messagesDataproviderField}}}));