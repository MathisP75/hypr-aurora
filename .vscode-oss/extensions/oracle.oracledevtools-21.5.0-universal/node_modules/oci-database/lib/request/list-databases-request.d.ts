/**
 *
 *
 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import common = require("oci-common");
/**
 * @example Click {@link https://docs.cloud.oracle.com/en-us/iaas/tools/typescript-sdk-examples/2.28.0/database/ListDatabases.ts.html |here} to see how to use ListDatabasesRequest.
 */
export interface ListDatabasesRequest extends common.BaseRequest {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).
     */
    "compartmentId": string;
    /**
     * A Database Home [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).
     */
    "dbHomeId"?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Exadata DB system that you want to filter the database results by. Applies only to Exadata DB systems.
     */
    "systemId"?: string;
    /**
     * The maximum number of items to return per page.
     */
    "limit"?: number;
    /**
     * The pagination token to continue listing from.
     */
    "page"?: string;
    /**
     * The field to sort by.  You can provide one sort order (`sortOrder`).  Default order for TIMECREATED is descending.  Default order for DBNAME is ascending. The DBNAME sort order is case sensitive.
     */
    "sortBy"?: ListDatabasesRequest.SortBy;
    /**
     * The sort order to use, either ascending (`ASC`) or descending (`DESC`).
     */
    "sortOrder"?: ListDatabasesRequest.SortOrder;
    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     */
    "lifecycleState"?: string;
    /**
     * A filter to return only resources that match the entire database name given. The match is not case sensitive.
     */
    "dbName"?: string;
}
export declare namespace ListDatabasesRequest {
    enum SortBy {
        Dbname = "DBNAME",
        Timecreated = "TIMECREATED"
    }
    enum SortOrder {
        Asc = "ASC",
        Desc = "DESC"
    }
}
