"use strict";
/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExternalNonContainerDatabase = void 0;
const model = __importStar(require("../model"));
var ExternalNonContainerDatabase;
(function (ExternalNonContainerDatabase) {
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Provisioning"] = "PROVISIONING";
        LifecycleState["NotConnected"] = "NOT_CONNECTED";
        LifecycleState["Available"] = "AVAILABLE";
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["Terminating"] = "TERMINATING";
        LifecycleState["Terminated"] = "TERMINATED";
        LifecycleState["Failed"] = "FAILED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = ExternalNonContainerDatabase.LifecycleState || (ExternalNonContainerDatabase.LifecycleState = {}));
    let DatabaseEdition;
    (function (DatabaseEdition) {
        DatabaseEdition["StandardEdition"] = "STANDARD_EDITION";
        DatabaseEdition["EnterpriseEdition"] = "ENTERPRISE_EDITION";
        DatabaseEdition["EnterpriseEditionHighPerformance"] = "ENTERPRISE_EDITION_HIGH_PERFORMANCE";
        DatabaseEdition["EnterpriseEditionExtremePerformance"] = "ENTERPRISE_EDITION_EXTREME_PERFORMANCE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DatabaseEdition["UnknownValue"] = "UNKNOWN_VALUE";
    })(DatabaseEdition = ExternalNonContainerDatabase.DatabaseEdition || (ExternalNonContainerDatabase.DatabaseEdition = {}));
    let DatabaseConfiguration;
    (function (DatabaseConfiguration) {
        DatabaseConfiguration["Rac"] = "RAC";
        DatabaseConfiguration["SingleInstance"] = "SINGLE_INSTANCE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DatabaseConfiguration["UnknownValue"] = "UNKNOWN_VALUE";
    })(DatabaseConfiguration = ExternalNonContainerDatabase.DatabaseConfiguration || (ExternalNonContainerDatabase.DatabaseConfiguration = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "operationsInsightsConfig": obj.operationsInsightsConfig
                ? model.OperationsInsightsConfig.getJsonObj(obj.operationsInsightsConfig)
                : undefined,
            "databaseManagementConfig": obj.databaseManagementConfig
                ? model.DatabaseManagementConfig.getJsonObj(obj.databaseManagementConfig)
                : undefined,
            "stackMonitoringConfig": obj.stackMonitoringConfig
                ? model.StackMonitoringConfig.getJsonObj(obj.stackMonitoringConfig)
                : undefined
        });
        return jsonObj;
    }
    ExternalNonContainerDatabase.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "operationsInsightsConfig": obj.operationsInsightsConfig
                ? model.OperationsInsightsConfig.getDeserializedJsonObj(obj.operationsInsightsConfig)
                : undefined,
            "databaseManagementConfig": obj.databaseManagementConfig
                ? model.DatabaseManagementConfig.getDeserializedJsonObj(obj.databaseManagementConfig)
                : undefined,
            "stackMonitoringConfig": obj.stackMonitoringConfig
                ? model.StackMonitoringConfig.getDeserializedJsonObj(obj.stackMonitoringConfig)
                : undefined
        });
        return jsonObj;
    }
    ExternalNonContainerDatabase.getDeserializedJsonObj = getDeserializedJsonObj;
})(ExternalNonContainerDatabase = exports.ExternalNonContainerDatabase || (exports.ExternalNonContainerDatabase = {}));
//# sourceMappingURL=external-non-container-database.js.map