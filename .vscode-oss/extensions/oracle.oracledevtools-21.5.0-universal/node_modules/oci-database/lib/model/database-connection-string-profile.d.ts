/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The connection string profile to allow clients to group, filter and select connection string values based on structured metadata.
 *
 */
export interface DatabaseConnectionStringProfile {
    /**
     * A user-friendly name for the connection.
     */
    "displayName": string;
    /**
     * Connection string value.
     */
    "value": string;
    /**
     * Consumer group used by the connection.
     */
    "consumerGroup"?: DatabaseConnectionStringProfile.ConsumerGroup;
    /**
     * Protocol used by the connection.
     */
    "protocol": DatabaseConnectionStringProfile.Protocol;
    /**
     * Specifies whether the TLS handshake is using one-way (`SERVER`) or mutual (`MUTUAL`) authentication.
     */
    "tlsAuthentication"?: DatabaseConnectionStringProfile.TlsAuthentication;
    /**
     * Host format used in connection string.
     */
    "hostFormat": DatabaseConnectionStringProfile.HostFormat;
    /**
     * Specifies whether the listener performs a direct hand-off of the session, or redirects the session. In RAC deployments where SCAN is used, sessions are redirected to a Node VIP. Use `DIRECT` for direct hand-offs. Use `REDIRECT` to redirect the session.
     */
    "sessionMode": DatabaseConnectionStringProfile.SessionMode;
    /**
     * Specifies whether the connection string is using the long (`LONG`), Easy Connect (`EZCONNECT`), or Easy Connect Plus (`EZCONNECTPLUS`) format.
     * Autonomous Databases on shared Exadata infrastructure always use the long format.
     *
     */
    "syntaxFormat": DatabaseConnectionStringProfile.SyntaxFormat;
}
export declare namespace DatabaseConnectionStringProfile {
    enum ConsumerGroup {
        High = "HIGH",
        Medium = "MEDIUM",
        Low = "LOW",
        Tp = "TP",
        Tpurgent = "TPURGENT",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum Protocol {
        Tcp = "TCP",
        Tcps = "TCPS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum TlsAuthentication {
        Server = "SERVER",
        Mutual = "MUTUAL",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum HostFormat {
        Fqdn = "FQDN",
        Ip = "IP",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum SessionMode {
        Direct = "DIRECT",
        Redirect = "REDIRECT",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum SyntaxFormat {
        Long = "LONG",
        Ezconnect = "EZCONNECT",
        Ezconnectplus = "EZCONNECTPLUS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: DatabaseConnectionStringProfile): object;
    function getDeserializedJsonObj(obj: DatabaseConnectionStringProfile): object;
}
