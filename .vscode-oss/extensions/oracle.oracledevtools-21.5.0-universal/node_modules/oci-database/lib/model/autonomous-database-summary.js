"use strict";
/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AutonomousDatabaseSummary = void 0;
const model = __importStar(require("../model"));
var AutonomousDatabaseSummary;
(function (AutonomousDatabaseSummary) {
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Provisioning"] = "PROVISIONING";
        LifecycleState["Available"] = "AVAILABLE";
        LifecycleState["Stopping"] = "STOPPING";
        LifecycleState["Stopped"] = "STOPPED";
        LifecycleState["Starting"] = "STARTING";
        LifecycleState["Terminating"] = "TERMINATING";
        LifecycleState["Terminated"] = "TERMINATED";
        LifecycleState["Unavailable"] = "UNAVAILABLE";
        LifecycleState["RestoreInProgress"] = "RESTORE_IN_PROGRESS";
        LifecycleState["RestoreFailed"] = "RESTORE_FAILED";
        LifecycleState["BackupInProgress"] = "BACKUP_IN_PROGRESS";
        LifecycleState["ScaleInProgress"] = "SCALE_IN_PROGRESS";
        LifecycleState["AvailableNeedsAttention"] = "AVAILABLE_NEEDS_ATTENTION";
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["MaintenanceInProgress"] = "MAINTENANCE_IN_PROGRESS";
        LifecycleState["Restarting"] = "RESTARTING";
        LifecycleState["Recreating"] = "RECREATING";
        LifecycleState["RoleChangeInProgress"] = "ROLE_CHANGE_IN_PROGRESS";
        LifecycleState["Upgrading"] = "UPGRADING";
        LifecycleState["Inaccessible"] = "INACCESSIBLE";
        LifecycleState["Standby"] = "STANDBY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = AutonomousDatabaseSummary.LifecycleState || (AutonomousDatabaseSummary.LifecycleState = {}));
    let InfrastructureType;
    (function (InfrastructureType) {
        InfrastructureType["Cloud"] = "CLOUD";
        InfrastructureType["CloudAtCustomer"] = "CLOUD_AT_CUSTOMER";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        InfrastructureType["UnknownValue"] = "UNKNOWN_VALUE";
    })(InfrastructureType = AutonomousDatabaseSummary.InfrastructureType || (AutonomousDatabaseSummary.InfrastructureType = {}));
    let LicenseModel;
    (function (LicenseModel) {
        LicenseModel["LicenseIncluded"] = "LICENSE_INCLUDED";
        LicenseModel["BringYourOwnLicense"] = "BRING_YOUR_OWN_LICENSE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LicenseModel["UnknownValue"] = "UNKNOWN_VALUE";
    })(LicenseModel = AutonomousDatabaseSummary.LicenseModel || (AutonomousDatabaseSummary.LicenseModel = {}));
    let DbWorkload;
    (function (DbWorkload) {
        DbWorkload["Oltp"] = "OLTP";
        DbWorkload["Dw"] = "DW";
        DbWorkload["Ajd"] = "AJD";
        DbWorkload["Apex"] = "APEX";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DbWorkload["UnknownValue"] = "UNKNOWN_VALUE";
    })(DbWorkload = AutonomousDatabaseSummary.DbWorkload || (AutonomousDatabaseSummary.DbWorkload = {}));
    let DataSafeStatus;
    (function (DataSafeStatus) {
        DataSafeStatus["Registering"] = "REGISTERING";
        DataSafeStatus["Registered"] = "REGISTERED";
        DataSafeStatus["Deregistering"] = "DEREGISTERING";
        DataSafeStatus["NotRegistered"] = "NOT_REGISTERED";
        DataSafeStatus["Failed"] = "FAILED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DataSafeStatus["UnknownValue"] = "UNKNOWN_VALUE";
    })(DataSafeStatus = AutonomousDatabaseSummary.DataSafeStatus || (AutonomousDatabaseSummary.DataSafeStatus = {}));
    let OperationsInsightsStatus;
    (function (OperationsInsightsStatus) {
        OperationsInsightsStatus["Enabling"] = "ENABLING";
        OperationsInsightsStatus["Enabled"] = "ENABLED";
        OperationsInsightsStatus["Disabling"] = "DISABLING";
        OperationsInsightsStatus["NotEnabled"] = "NOT_ENABLED";
        OperationsInsightsStatus["FailedEnabling"] = "FAILED_ENABLING";
        OperationsInsightsStatus["FailedDisabling"] = "FAILED_DISABLING";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        OperationsInsightsStatus["UnknownValue"] = "UNKNOWN_VALUE";
    })(OperationsInsightsStatus = AutonomousDatabaseSummary.OperationsInsightsStatus || (AutonomousDatabaseSummary.OperationsInsightsStatus = {}));
    let DatabaseManagementStatus;
    (function (DatabaseManagementStatus) {
        DatabaseManagementStatus["Enabling"] = "ENABLING";
        DatabaseManagementStatus["Enabled"] = "ENABLED";
        DatabaseManagementStatus["Disabling"] = "DISABLING";
        DatabaseManagementStatus["NotEnabled"] = "NOT_ENABLED";
        DatabaseManagementStatus["FailedEnabling"] = "FAILED_ENABLING";
        DatabaseManagementStatus["FailedDisabling"] = "FAILED_DISABLING";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DatabaseManagementStatus["UnknownValue"] = "UNKNOWN_VALUE";
    })(DatabaseManagementStatus = AutonomousDatabaseSummary.DatabaseManagementStatus || (AutonomousDatabaseSummary.DatabaseManagementStatus = {}));
    let OpenMode;
    (function (OpenMode) {
        OpenMode["ReadOnly"] = "READ_ONLY";
        OpenMode["ReadWrite"] = "READ_WRITE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        OpenMode["UnknownValue"] = "UNKNOWN_VALUE";
    })(OpenMode = AutonomousDatabaseSummary.OpenMode || (AutonomousDatabaseSummary.OpenMode = {}));
    let RefreshableStatus;
    (function (RefreshableStatus) {
        RefreshableStatus["Refreshing"] = "REFRESHING";
        RefreshableStatus["NotRefreshing"] = "NOT_REFRESHING";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        RefreshableStatus["UnknownValue"] = "UNKNOWN_VALUE";
    })(RefreshableStatus = AutonomousDatabaseSummary.RefreshableStatus || (AutonomousDatabaseSummary.RefreshableStatus = {}));
    let RefreshableMode;
    (function (RefreshableMode) {
        RefreshableMode["Automatic"] = "AUTOMATIC";
        RefreshableMode["Manual"] = "MANUAL";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        RefreshableMode["UnknownValue"] = "UNKNOWN_VALUE";
    })(RefreshableMode = AutonomousDatabaseSummary.RefreshableMode || (AutonomousDatabaseSummary.RefreshableMode = {}));
    let PermissionLevel;
    (function (PermissionLevel) {
        PermissionLevel["Restricted"] = "RESTRICTED";
        PermissionLevel["Unrestricted"] = "UNRESTRICTED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PermissionLevel["UnknownValue"] = "UNKNOWN_VALUE";
    })(PermissionLevel = AutonomousDatabaseSummary.PermissionLevel || (AutonomousDatabaseSummary.PermissionLevel = {}));
    let Role;
    (function (Role) {
        Role["Primary"] = "PRIMARY";
        Role["Standby"] = "STANDBY";
        Role["DisabledStandby"] = "DISABLED_STANDBY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Role["UnknownValue"] = "UNKNOWN_VALUE";
    })(Role = AutonomousDatabaseSummary.Role || (AutonomousDatabaseSummary.Role = {}));
    let DataguardRegionType;
    (function (DataguardRegionType) {
        DataguardRegionType["PrimaryDgRegion"] = "PRIMARY_DG_REGION";
        DataguardRegionType["RemoteStandbyDgRegion"] = "REMOTE_STANDBY_DG_REGION";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DataguardRegionType["UnknownValue"] = "UNKNOWN_VALUE";
    })(DataguardRegionType = AutonomousDatabaseSummary.DataguardRegionType || (AutonomousDatabaseSummary.DataguardRegionType = {}));
    let AutonomousMaintenanceScheduleType;
    (function (AutonomousMaintenanceScheduleType) {
        AutonomousMaintenanceScheduleType["Early"] = "EARLY";
        AutonomousMaintenanceScheduleType["Regular"] = "REGULAR";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        AutonomousMaintenanceScheduleType["UnknownValue"] = "UNKNOWN_VALUE";
    })(AutonomousMaintenanceScheduleType = AutonomousDatabaseSummary.AutonomousMaintenanceScheduleType || (AutonomousDatabaseSummary.AutonomousMaintenanceScheduleType = {}));
    let DatabaseEdition;
    (function (DatabaseEdition) {
        DatabaseEdition["StandardEdition"] = "STANDARD_EDITION";
        DatabaseEdition["EnterpriseEdition"] = "ENTERPRISE_EDITION";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DatabaseEdition["UnknownValue"] = "UNKNOWN_VALUE";
    })(DatabaseEdition = AutonomousDatabaseSummary.DatabaseEdition || (AutonomousDatabaseSummary.DatabaseEdition = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "backupConfig": obj.backupConfig
                ? model.AutonomousDatabaseBackupConfig.getJsonObj(obj.backupConfig)
                : undefined,
            "keyHistoryEntry": obj.keyHistoryEntry
                ? obj.keyHistoryEntry.map(item => {
                    return model.AutonomousDatabaseKeyHistoryEntry.getJsonObj(item);
                })
                : undefined,
            "connectionStrings": obj.connectionStrings
                ? model.AutonomousDatabaseConnectionStrings.getJsonObj(obj.connectionStrings)
                : undefined,
            "connectionUrls": obj.connectionUrls
                ? model.AutonomousDatabaseConnectionUrls.getJsonObj(obj.connectionUrls)
                : undefined,
            "apexDetails": obj.apexDetails
                ? model.AutonomousDatabaseApex.getJsonObj(obj.apexDetails)
                : undefined,
            "standbyDb": obj.standbyDb
                ? model.AutonomousDatabaseStandbySummary.getJsonObj(obj.standbyDb)
                : undefined,
            "localStandbyDb": obj.localStandbyDb
                ? model.AutonomousDatabaseStandbySummary.getJsonObj(obj.localStandbyDb)
                : undefined,
            "customerContacts": obj.customerContacts
                ? obj.customerContacts.map(item => {
                    return model.CustomerContact.getJsonObj(item);
                })
                : undefined,
            "scheduledOperations": obj.scheduledOperations
                ? obj.scheduledOperations.map(item => {
                    return model.ScheduledOperationDetails.getJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    AutonomousDatabaseSummary.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "backupConfig": obj.backupConfig
                ? model.AutonomousDatabaseBackupConfig.getDeserializedJsonObj(obj.backupConfig)
                : undefined,
            "keyHistoryEntry": obj.keyHistoryEntry
                ? obj.keyHistoryEntry.map(item => {
                    return model.AutonomousDatabaseKeyHistoryEntry.getDeserializedJsonObj(item);
                })
                : undefined,
            "connectionStrings": obj.connectionStrings
                ? model.AutonomousDatabaseConnectionStrings.getDeserializedJsonObj(obj.connectionStrings)
                : undefined,
            "connectionUrls": obj.connectionUrls
                ? model.AutonomousDatabaseConnectionUrls.getDeserializedJsonObj(obj.connectionUrls)
                : undefined,
            "apexDetails": obj.apexDetails
                ? model.AutonomousDatabaseApex.getDeserializedJsonObj(obj.apexDetails)
                : undefined,
            "standbyDb": obj.standbyDb
                ? model.AutonomousDatabaseStandbySummary.getDeserializedJsonObj(obj.standbyDb)
                : undefined,
            "localStandbyDb": obj.localStandbyDb
                ? model.AutonomousDatabaseStandbySummary.getDeserializedJsonObj(obj.localStandbyDb)
                : undefined,
            "customerContacts": obj.customerContacts
                ? obj.customerContacts.map(item => {
                    return model.CustomerContact.getDeserializedJsonObj(item);
                })
                : undefined,
            "scheduledOperations": obj.scheduledOperations
                ? obj.scheduledOperations.map(item => {
                    return model.ScheduledOperationDetails.getDeserializedJsonObj(item);
                })
                : undefined
        });
        return jsonObj;
    }
    AutonomousDatabaseSummary.getDeserializedJsonObj = getDeserializedJsonObj;
})(AutonomousDatabaseSummary = exports.AutonomousDatabaseSummary || (exports.AutonomousDatabaseSummary = {}));
//# sourceMappingURL=autonomous-database-summary.js.map