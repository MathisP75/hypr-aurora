"use strict";
/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataGuardAssociation = void 0;
var DataGuardAssociation;
(function (DataGuardAssociation) {
    let Role;
    (function (Role) {
        Role["Primary"] = "PRIMARY";
        Role["Standby"] = "STANDBY";
        Role["DisabledStandby"] = "DISABLED_STANDBY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Role["UnknownValue"] = "UNKNOWN_VALUE";
    })(Role = DataGuardAssociation.Role || (DataGuardAssociation.Role = {}));
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Provisioning"] = "PROVISIONING";
        LifecycleState["Available"] = "AVAILABLE";
        LifecycleState["Updating"] = "UPDATING";
        LifecycleState["Terminating"] = "TERMINATING";
        LifecycleState["Terminated"] = "TERMINATED";
        LifecycleState["Failed"] = "FAILED";
        LifecycleState["Upgrading"] = "UPGRADING";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = DataGuardAssociation.LifecycleState || (DataGuardAssociation.LifecycleState = {}));
    let PeerRole;
    (function (PeerRole) {
        PeerRole["Primary"] = "PRIMARY";
        PeerRole["Standby"] = "STANDBY";
        PeerRole["DisabledStandby"] = "DISABLED_STANDBY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PeerRole["UnknownValue"] = "UNKNOWN_VALUE";
    })(PeerRole = DataGuardAssociation.PeerRole || (DataGuardAssociation.PeerRole = {}));
    let ProtectionMode;
    (function (ProtectionMode) {
        ProtectionMode["MaximumAvailability"] = "MAXIMUM_AVAILABILITY";
        ProtectionMode["MaximumPerformance"] = "MAXIMUM_PERFORMANCE";
        ProtectionMode["MaximumProtection"] = "MAXIMUM_PROTECTION";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ProtectionMode["UnknownValue"] = "UNKNOWN_VALUE";
    })(ProtectionMode = DataGuardAssociation.ProtectionMode || (DataGuardAssociation.ProtectionMode = {}));
    let TransportType;
    (function (TransportType) {
        TransportType["Sync"] = "SYNC";
        TransportType["Async"] = "ASYNC";
        TransportType["Fastsync"] = "FASTSYNC";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        TransportType["UnknownValue"] = "UNKNOWN_VALUE";
    })(TransportType = DataGuardAssociation.TransportType || (DataGuardAssociation.TransportType = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    DataGuardAssociation.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    DataGuardAssociation.getDeserializedJsonObj = getDeserializedJsonObj;
})(DataGuardAssociation = exports.DataGuardAssociation || (exports.DataGuardAssociation = {}));
//# sourceMappingURL=data-guard-association.js.map