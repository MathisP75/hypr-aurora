/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Provides all the details that apply to an external backup job.
 *
 */
export interface ExternalBackupJob {
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the associated backup resource.
     */
    "backupId": string;
    /**
     * An indicator for the provisioning state of the resource. If `TRUE`, the resource is still being provisioned.
     */
    "provisioning": boolean;
    /**
     * The Swift path to use as a destination for the standalone backup.
     */
    "swiftPath": string;
    /**
     * The name of the Swift compartment bucket where the backup should be stored.
     */
    "bucketName": string;
    /**
     * The tag for RMAN to apply to the backup.
     */
    "tag": string;
    /**
     * The Swift user name to use for transferring the standalone backup to the designated Swift compartment bucket.
     */
    "userName": string;
    /**
     * The auth token to use for access to the Swift compartment bucket that will store the standalone backup.
     * For information about auth tokens, see [Working with Auth Tokens](https://docs.cloud.oracle.com/Content/Identity/Tasks/managingcredentials.htm#two).
     *
     */
    "swiftPassword"?: string;
}
export declare namespace ExternalBackupJob {
    function getJsonObj(obj: ExternalBackupJob): object;
    function getDeserializedJsonObj(obj: ExternalBackupJob): object;
}
