"use strict";
/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AutonomousPatch = void 0;
var AutonomousPatch;
(function (AutonomousPatch) {
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Available"] = "AVAILABLE";
        LifecycleState["Success"] = "SUCCESS";
        LifecycleState["InProgress"] = "IN_PROGRESS";
        LifecycleState["Failed"] = "FAILED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = AutonomousPatch.LifecycleState || (AutonomousPatch.LifecycleState = {}));
    let PatchModel;
    (function (PatchModel) {
        PatchModel["ReleaseUpdates"] = "RELEASE_UPDATES";
        PatchModel["ReleaseUpdateRevisions"] = "RELEASE_UPDATE_REVISIONS";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PatchModel["UnknownValue"] = "UNKNOWN_VALUE";
    })(PatchModel = AutonomousPatch.PatchModel || (AutonomousPatch.PatchModel = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    AutonomousPatch.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    AutonomousPatch.getDeserializedJsonObj = getDeserializedJsonObj;
})(AutonomousPatch = exports.AutonomousPatch || (exports.AutonomousPatch = {}));
//# sourceMappingURL=autonomous-patch.js.map