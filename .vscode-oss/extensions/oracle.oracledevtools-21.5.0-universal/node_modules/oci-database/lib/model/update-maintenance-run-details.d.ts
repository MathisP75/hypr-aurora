/**
 * Database Service API
 * The API for the Database Service. Use this API to manage resources such as databases and DB Systems. For more information, see [Overview of the Database Service](/iaas/Content/Database/Concepts/databaseoverview.htm).

 * OpenAPI spec version: 20160918
 * Contact: sic_dbaas_cp_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Describes the modification parameters for the maintenance run.
 *
 */
export interface UpdateMaintenanceRunDetails {
    /**
     * If `FALSE`, skips the maintenance run.
     */
    "isEnabled"?: boolean;
    /**
     * The scheduled date and time of the maintenance run to update.
     */
    "timeScheduled"?: Date;
    /**
     * If set to `TRUE`, starts patching immediately.
     */
    "isPatchNowEnabled"?: boolean;
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the patch to be applied in the maintenance run.
     */
    "patchId"?: string;
    /**
     * Cloud Exadata infrastructure node patching method, either \"ROLLING\" or \"NONROLLING\". Default value is ROLLING.
     * <p>
     *IMPORTANT*: Non-rolling infrastructure patching involves system down time. See [Oracle-Managed Infrastructure Maintenance Updates](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/examaintenance.htm#Oracle) for more information.
     *
     */
    "patchingMode"?: UpdateMaintenanceRunDetails.PatchingMode;
    /**
     * If true, enables the configuration of a custom action timeout (waiting period) between database servers patching operations.
     */
    "isCustomActionTimeoutEnabled"?: boolean;
    /**
     * Determines the amount of time the system will wait before the start of each database server patching operation.
     * Specify a number of minutes from 15 to 120.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "customActionTimeoutInMins"?: number;
    /**
     * The current custom action timeout between the current database servers during waiting state in addition to custom action timeout, from 0 (zero) to 30 minutes. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "currentCustomActionTimeoutInMins"?: number;
    /**
     * If true, then the patching is resumed and the next component will be patched immediately.
     */
    "isResumePatching"?: boolean;
}
export declare namespace UpdateMaintenanceRunDetails {
    enum PatchingMode {
        Rolling = "ROLLING",
        Nonrolling = "NONROLLING"
    }
    function getJsonObj(obj: UpdateMaintenanceRunDetails): object;
    function getDeserializedJsonObj(obj: UpdateMaintenanceRunDetails): object;
}
