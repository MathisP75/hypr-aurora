/**
 * Identity and Access Management Service API
 * APIs for managing users, groups, compartments, policies, and identity domains.
 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
* A PEM-format RSA credential for securing requests to the Oracle Cloud Infrastructure REST API. Also known
* as an *API signing key*. Specifically, this is the public key from the key pair. The private key remains with
* the user calling the API. For information about generating a key pair
* in the required PEM format, see [Required Keys and OCIDs](https://docs.cloud.oracle.com/Content/API/Concepts/apisigningkey.htm).
* <p>
**Important:** This is **not** the SSH key for accessing compute instances.
* <p>
Each user can have a maximum of three API signing keys.
* <p>
For more information about user credentials, see [User Credentials](https://docs.cloud.oracle.com/Content/Identity/Concepts/usercredentials.htm).
*
*/
export interface ApiKey {
    /**
     * An Oracle-assigned identifier for the key, in this format:
     * TENANCY_OCID/USER_OCID/KEY_FINGERPRINT.
     *
     */
    "keyId"?: string;
    /**
     * The key's value.
     */
    "keyValue"?: string;
    /**
     * The key's fingerprint (e.g., 12:34:56:78:90:ab:cd:ef:12:34:56:78:90:ab:cd:ef).
     */
    "fingerprint"?: string;
    /**
     * The OCID of the user the key belongs to.
     */
    "userId"?: string;
    /**
      * Date and time the `ApiKey` object was created, in the format defined by RFC3339.
  * <p>
  Example: `2016-08-25T21:10:29.600Z`
  *
      */
    "timeCreated"?: Date;
    /**
     * The API key's current state. After creating an `ApiKey` object, make sure its `lifecycleState` changes from
     * CREATING to ACTIVE before using it.
     *
     */
    "lifecycleState"?: ApiKey.LifecycleState;
    /**
     * The detailed status of INACTIVE lifecycleState. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "inactiveStatus"?: number;
}
export declare namespace ApiKey {
    enum LifecycleState {
        Creating = "CREATING",
        Active = "ACTIVE",
        Inactive = "INACTIVE",
        Deleting = "DELETING",
        Deleted = "DELETED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: ApiKey): object;
    function getDeserializedJsonObj(obj: ApiKey): object;
}
