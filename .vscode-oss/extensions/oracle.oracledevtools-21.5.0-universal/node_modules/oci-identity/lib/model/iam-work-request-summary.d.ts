/**
 * Identity and Access Management Service API
 * APIs for managing users, groups, compartments, policies, and identity domains.
 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * (For tenancies that support identity domains) The IAM work request summary. Tracks the status of asynchronous operations.
 *
 */
export interface IamWorkRequestSummary {
    /**
     * The OCID of the work request.
     */
    "id": string;
    /**
     * The asynchronous operation tracked by this IAM work request.
     */
    "operationType": IamWorkRequestSummary.OperationType;
    /**
     * The status of the work request.
     */
    "status": IamWorkRequestSummary.Status;
    /**
     * The OCID of the compartment containing this IAM work request.
     */
    "compartmentId"?: string;
    /**
     * The resources this work request affects.
     */
    "resources"?: Array<model.IamWorkRequestResource>;
    /**
     * How much progress the operation has made.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "percentComplete"?: number;
    /**
     * Date and time the work was accepted, in the format defined by RFC3339.
     * Example: `2016-08-25T21:10:29.600Z`
     *
     */
    "timeAccepted"?: Date;
    /**
     * Date and time the work started, in the format defined by RFC3339.
     * Example: `2016-08-25T21:10:29.600Z`
     *
     */
    "timeStarted"?: Date;
    /**
     * Date and time the work completed, in the format defined by RFC3339.
     * Example: `2016-08-25T21:10:29.600Z`
     *
     */
    "timeFinished"?: Date;
}
export declare namespace IamWorkRequestSummary {
    enum OperationType {
        CreateDomain = "CREATE_DOMAIN",
        ReplicateDomainToRegion = "REPLICATE_DOMAIN_TO_REGION",
        UpdateDomain = "UPDATE_DOMAIN",
        ActivateDomain = "ACTIVATE_DOMAIN",
        DeactivateDomain = "DEACTIVATE_DOMAIN",
        DeleteDomain = "DELETE_DOMAIN",
        ChangeCompartmentForDomain = "CHANGE_COMPARTMENT_FOR_DOMAIN",
        ChangeLicenseTypeForDomain = "CHANGE_LICENSE_TYPE_FOR_DOMAIN",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum Status {
        Accepted = "ACCEPTED",
        InProgress = "IN_PROGRESS",
        Failed = "FAILED",
        Succeeded = "SUCCEEDED",
        Canceling = "CANCELING",
        Canceled = "CANCELED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: IamWorkRequestSummary): object;
    function getDeserializedJsonObj(obj: IamWorkRequestSummary): object;
}
