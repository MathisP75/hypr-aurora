"use strict";
/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PublicIp = void 0;
var PublicIp;
(function (PublicIp) {
    let AssignedEntityType;
    (function (AssignedEntityType) {
        AssignedEntityType["PrivateIp"] = "PRIVATE_IP";
        AssignedEntityType["NatGateway"] = "NAT_GATEWAY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        AssignedEntityType["UnknownValue"] = "UNKNOWN_VALUE";
    })(AssignedEntityType = PublicIp.AssignedEntityType || (PublicIp.AssignedEntityType = {}));
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Provisioning"] = "PROVISIONING";
        LifecycleState["Available"] = "AVAILABLE";
        LifecycleState["Assigning"] = "ASSIGNING";
        LifecycleState["Assigned"] = "ASSIGNED";
        LifecycleState["Unassigning"] = "UNASSIGNING";
        LifecycleState["Unassigned"] = "UNASSIGNED";
        LifecycleState["Terminating"] = "TERMINATING";
        LifecycleState["Terminated"] = "TERMINATED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = PublicIp.LifecycleState || (PublicIp.LifecycleState = {}));
    let Lifetime;
    (function (Lifetime) {
        Lifetime["Ephemeral"] = "EPHEMERAL";
        Lifetime["Reserved"] = "RESERVED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Lifetime["UnknownValue"] = "UNKNOWN_VALUE";
    })(Lifetime = PublicIp.Lifetime || (PublicIp.Lifetime = {}));
    let Scope;
    (function (Scope) {
        Scope["Region"] = "REGION";
        Scope["AvailabilityDomain"] = "AVAILABILITY_DOMAIN";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Scope["UnknownValue"] = "UNKNOWN_VALUE";
    })(Scope = PublicIp.Scope || (PublicIp.Scope = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    PublicIp.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    PublicIp.getDeserializedJsonObj = getDeserializedJsonObj;
})(PublicIp = exports.PublicIp || (exports.PublicIp = {}));
//# sourceMappingURL=public-ip.js.map