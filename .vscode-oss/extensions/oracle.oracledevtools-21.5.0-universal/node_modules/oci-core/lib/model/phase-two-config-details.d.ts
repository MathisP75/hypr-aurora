/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Configuration details for IPSec phase two configuration parameters.
 */
export interface PhaseTwoConfigDetails {
    /**
     * Indicates whether custom configuration is enabled for phase two options.
     */
    "isCustomPhaseTwoConfig"?: boolean;
    /**
     * The authentication algorithm proposed during phase two tunnel negotiation.
     *
     */
    "authenticationAlgorithm"?: PhaseTwoConfigDetails.AuthenticationAlgorithm;
    /**
     * The encryption algorithm proposed during phase two tunnel negotiation.
     *
     */
    "encryptionAlgorithm"?: PhaseTwoConfigDetails.EncryptionAlgorithm;
    /**
     * Lifetime in seconds for the IPSec session key set in phase two. The default is 3600 which is equivalent to 1 hour.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "lifetimeInSeconds"?: number;
    /**
     * Indicates whether perfect forward secrecy (PFS) is enabled.
     */
    "isPfsEnabled"?: boolean;
    /**
     * The Diffie-Hellman group used for PFS, if PFS is enabled.
     */
    "pfsDhGroup"?: PhaseTwoConfigDetails.PfsDhGroup;
}
export declare namespace PhaseTwoConfigDetails {
    enum AuthenticationAlgorithm {
        HmacSha2256128 = "HMAC_SHA2_256_128",
        HmacSha1128 = "HMAC_SHA1_128"
    }
    enum EncryptionAlgorithm {
        Aes256Gcm = "AES_256_GCM",
        Aes192Gcm = "AES_192_GCM",
        Aes128Gcm = "AES_128_GCM",
        Aes256Cbc = "AES_256_CBC",
        Aes192Cbc = "AES_192_CBC",
        Aes128Cbc = "AES_128_CBC"
    }
    enum PfsDhGroup {
        Group2 = "GROUP2",
        Group5 = "GROUP5",
        Group14 = "GROUP14",
        Group19 = "GROUP19",
        Group20 = "GROUP20",
        Group24 = "GROUP24"
    }
    function getJsonObj(obj: PhaseTwoConfigDetails): object;
    function getDeserializedJsonObj(obj: PhaseTwoConfigDetails): object;
}
