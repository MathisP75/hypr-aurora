/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
export interface UpdateIPSecConnectionTunnelDetails {
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.
     * Avoid entering confidential information.
     *
     */
    "displayName"?: string;
    /**
     * The type of routing to use for this tunnel (BGP dynamic routing, static routing, or policy-based routing).
     *
     */
    "routing"?: UpdateIPSecConnectionTunnelDetails.Routing;
    /**
     * Internet Key Exchange protocol version.
     *
     */
    "ikeVersion"?: UpdateIPSecConnectionTunnelDetails.IkeVersion;
    "bgpSessionConfig"?: model.UpdateIPSecTunnelBgpSessionDetails;
    /**
     * Indicates whether the Oracle end of the IPSec connection is able to initiate starting up the IPSec tunnel.
     *
     */
    "oracleInitiation"?: UpdateIPSecConnectionTunnelDetails.OracleInitiation;
    /**
      * By default (the `AUTO` setting), IKE sends packets with a source and destination port set to 500,
  * and when it detects that the port used to forward packets has changed (most likely because a NAT device
  * is between the CPE device and the Oracle VPN headend) it will try to negotiate the use of NAT-T.
  * <p>
  The `ENABLED` option sets the IKE protocol to use port 4500 instead of 500 and forces encapsulating traffic with the ESP protocol inside UDP packets.
  * <p>
  The `DISABLED` option directs IKE to completely refuse to negotiate NAT-T
  * even if it senses there may be a NAT device in use.
  *
      */
    "natTranslationEnabled"?: UpdateIPSecConnectionTunnelDetails.NatTranslationEnabled;
    "phaseOneConfig"?: model.PhaseOneConfigDetails;
    "phaseTwoConfig"?: model.PhaseTwoConfigDetails;
    "dpdConfig"?: model.DpdConfig;
    "encryptionDomainConfig"?: model.UpdateIPSecTunnelEncryptionDomainDetails;
}
export declare namespace UpdateIPSecConnectionTunnelDetails {
    enum Routing {
        Bgp = "BGP",
        Static = "STATIC",
        Policy = "POLICY"
    }
    enum IkeVersion {
        V1 = "V1",
        V2 = "V2"
    }
    enum OracleInitiation {
        InitiatorOrResponder = "INITIATOR_OR_RESPONDER",
        ResponderOnly = "RESPONDER_ONLY"
    }
    enum NatTranslationEnabled {
        Enabled = "ENABLED",
        Disabled = "DISABLED",
        Auto = "AUTO"
    }
    function getJsonObj(obj: UpdateIPSecConnectionTunnelDetails): object;
    function getDeserializedJsonObj(obj: UpdateIPSecConnectionTunnelDetails): object;
}
