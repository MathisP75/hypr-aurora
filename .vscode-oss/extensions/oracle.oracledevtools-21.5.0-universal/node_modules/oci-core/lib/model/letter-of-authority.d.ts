/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * The Letter of Authority for the cross-connect. You must submit this letter when
 * requesting cabling for the cross-connect at the FastConnect location.
 *
 */
export interface LetterOfAuthority {
    /**
     * The name of the entity authorized by this Letter of Authority.
     */
    "authorizedEntityName"?: string;
    /**
     * The type of cross-connect fiber, termination, and optical specification.
     */
    "circuitType"?: LetterOfAuthority.CircuitType;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cross-connect.
     */
    "crossConnectId"?: string;
    /**
     * The address of the FastConnect location.
     */
    "facilityLocation"?: string;
    /**
     * The meet-me room port for this cross-connect.
     */
    "portName"?: string;
    /**
     * The date and time when the Letter of Authority expires, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     *
     */
    "timeExpires"?: Date;
    /**
      * The date and time the Letter of Authority was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
  * <p>
  Example: `2016-08-25T21:10:29.600Z`
  *
      */
    "timeIssued"?: Date;
}
export declare namespace LetterOfAuthority {
    enum CircuitType {
        SingleModeLc = "Single_mode_LC",
        SingleModeSc = "Single_mode_SC",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: LetterOfAuthority): object;
    function getDeserializedJsonObj(obj: LetterOfAuthority): object;
}
