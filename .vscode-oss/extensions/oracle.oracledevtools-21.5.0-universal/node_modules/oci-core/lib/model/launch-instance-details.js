"use strict";
/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LaunchInstanceDetails = void 0;
const model = __importStar(require("../model"));
var LaunchInstanceDetails;
(function (LaunchInstanceDetails) {
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "createVnicDetails": obj.createVnicDetails
                ? model.CreateVnicDetails.getJsonObj(obj.createVnicDetails)
                : undefined,
            "launchOptions": obj.launchOptions
                ? model.LaunchOptions.getJsonObj(obj.launchOptions)
                : undefined,
            "instanceOptions": obj.instanceOptions
                ? model.InstanceOptions.getJsonObj(obj.instanceOptions)
                : undefined,
            "availabilityConfig": obj.availabilityConfig
                ? model.LaunchInstanceAvailabilityConfigDetails.getJsonObj(obj.availabilityConfig)
                : undefined,
            "preemptibleInstanceConfig": obj.preemptibleInstanceConfig
                ? model.PreemptibleInstanceConfigDetails.getJsonObj(obj.preemptibleInstanceConfig)
                : undefined,
            "agentConfig": obj.agentConfig
                ? model.LaunchInstanceAgentConfigDetails.getJsonObj(obj.agentConfig)
                : undefined,
            "shapeConfig": obj.shapeConfig
                ? model.LaunchInstanceShapeConfigDetails.getJsonObj(obj.shapeConfig)
                : undefined,
            "sourceDetails": obj.sourceDetails
                ? model.InstanceSourceDetails.getJsonObj(obj.sourceDetails)
                : undefined,
            "platformConfig": obj.platformConfig
                ? model.LaunchInstancePlatformConfig.getJsonObj(obj.platformConfig)
                : undefined
        });
        return jsonObj;
    }
    LaunchInstanceDetails.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "createVnicDetails": obj.createVnicDetails
                ? model.CreateVnicDetails.getDeserializedJsonObj(obj.createVnicDetails)
                : undefined,
            "launchOptions": obj.launchOptions
                ? model.LaunchOptions.getDeserializedJsonObj(obj.launchOptions)
                : undefined,
            "instanceOptions": obj.instanceOptions
                ? model.InstanceOptions.getDeserializedJsonObj(obj.instanceOptions)
                : undefined,
            "availabilityConfig": obj.availabilityConfig
                ? model.LaunchInstanceAvailabilityConfigDetails.getDeserializedJsonObj(obj.availabilityConfig)
                : undefined,
            "preemptibleInstanceConfig": obj.preemptibleInstanceConfig
                ? model.PreemptibleInstanceConfigDetails.getDeserializedJsonObj(obj.preemptibleInstanceConfig)
                : undefined,
            "agentConfig": obj.agentConfig
                ? model.LaunchInstanceAgentConfigDetails.getDeserializedJsonObj(obj.agentConfig)
                : undefined,
            "shapeConfig": obj.shapeConfig
                ? model.LaunchInstanceShapeConfigDetails.getDeserializedJsonObj(obj.shapeConfig)
                : undefined,
            "sourceDetails": obj.sourceDetails
                ? model.InstanceSourceDetails.getDeserializedJsonObj(obj.sourceDetails)
                : undefined,
            "platformConfig": obj.platformConfig
                ? model.LaunchInstancePlatformConfig.getDeserializedJsonObj(obj.platformConfig)
                : undefined
        });
        return jsonObj;
    }
    LaunchInstanceDetails.getDeserializedJsonObj = getDeserializedJsonObj;
})(LaunchInstanceDetails = exports.LaunchInstanceDetails || (exports.LaunchInstanceDetails = {}));
//# sourceMappingURL=launch-instance-details.js.map