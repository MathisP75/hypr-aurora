/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
* A virtual test access point (VTAP) provides a way to mirror all traffic from a designated source to a selected target in order to facilitate troubleshooting, security analysis, and data monitoring.
* A VTAP is functionally similar to a test access point (TAP) you might deploy in your on-premises network.
* <p>
A *{@link CaptureFilter}* contains a set of *{@link #captureFilterRuleDetails(CaptureFilterRuleDetailsRequest) captureFilterRuleDetails}* governing what traffic a VTAP mirrors.
*
*/
export interface Vtap {
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment containing the `Vtap` resource.
     */
    "compartmentId": string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the VCN containing the `Vtap` resource.
     */
    "vcnId": string;
    /**
      * Defined tags for this resource. Each key is predefined and scoped to a
  * namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
  * <p>
  Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
  *
      */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.
     * Avoid entering confidential information.
     *
     */
    "displayName"?: string;
    /**
      * Free-form tags for this resource. Each tag is a simple key-value pair with no
  * predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
  * <p>
  Example: `{\"Department\": \"Finance\"}`
  *
      */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * The VTAP's Oracle ID ([OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)).
     */
    "id": string;
    /**
     * The VTAP's administrative lifecycle state.
     */
    "lifecycleState": Vtap.LifecycleState;
    /**
     * The VTAP's current running state.
     */
    "lifecycleStateDetails"?: Vtap.LifecycleStateDetails;
    /**
      * The date and time the VTAP was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
  * <p>
  Example: `2020-08-25T21:10:29.600Z`
  *
      */
    "timeCreated"?: Date;
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the source point where packets are captured.
     *
     */
    "sourceId": string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the destination resource where mirrored packets are sent.
     *
     */
    "targetId"?: string;
    /**
     * The IP address of the destination resource where mirrored packets are sent.
     *
     */
    "targetIp"?: string;
    /**
     * The capture filter's Oracle ID ([OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)).
     *
     */
    "captureFilterId": string;
    /**
     * Defines an encapsulation header type for the VTAP's mirrored traffic.
     *
     */
    "encapsulationProtocol"?: Vtap.EncapsulationProtocol;
    /**
     * The virtual extensible LAN (VXLAN) network identifier (or VXLAN segment ID) that uniquely identifies the VXLAN.
     *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "vxlanNetworkIdentifier"?: number;
    /**
     * Used to start or stop a `Vtap` resource.
     * <p>
     * `TRUE` directs the VTAP to start mirroring traffic.
     * * `FALSE` (Default) directs the VTAP to stop mirroring traffic.
     *
     */
    "isVtapEnabled"?: boolean;
    /**
     * The source type for the VTAP.
     *
     */
    "sourceType"?: Vtap.SourceType;
    /**
     * Used to control the priority of traffic. It is an optional field. If it not passed, the value is DEFAULT
     */
    "trafficMode"?: Vtap.TrafficMode;
    /**
     * The maximum size of the packets to be included in the filter. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
     */
    "maxPacketSize"?: number;
    /**
     * The target type for the VTAP.
     *
     */
    "targetType"?: Vtap.TargetType;
    /**
     * The IP Address of the source private endpoint.
     *
     */
    "sourcePrivateEndpointIp"?: string;
    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the subnet that source private endpoint belongs to.
     *
     */
    "sourcePrivateEndpointSubnetId"?: string;
}
export declare namespace Vtap {
    enum LifecycleState {
        Provisioning = "PROVISIONING",
        Available = "AVAILABLE",
        Updating = "UPDATING",
        Terminating = "TERMINATING",
        Terminated = "TERMINATED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum LifecycleStateDetails {
        Running = "RUNNING",
        Stopped = "STOPPED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum EncapsulationProtocol {
        Vxlan = "VXLAN",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum SourceType {
        Vnic = "VNIC",
        Subnet = "SUBNET",
        LoadBalancer = "LOAD_BALANCER",
        DbSystem = "DB_SYSTEM",
        ExadataVmCluster = "EXADATA_VM_CLUSTER",
        AutonomousDataWarehouse = "AUTONOMOUS_DATA_WAREHOUSE",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum TrafficMode {
        Default = "DEFAULT",
        Priority = "PRIORITY",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    enum TargetType {
        Vnic = "VNIC",
        NetworkLoadBalancer = "NETWORK_LOAD_BALANCER",
        IpAddress = "IP_ADDRESS",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: Vtap): object;
    function getDeserializedJsonObj(obj: Vtap): object;
}
