"use strict";
/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateVtapDetails = void 0;
var UpdateVtapDetails;
(function (UpdateVtapDetails) {
    let EncapsulationProtocol;
    (function (EncapsulationProtocol) {
        EncapsulationProtocol["Vxlan"] = "VXLAN";
    })(EncapsulationProtocol = UpdateVtapDetails.EncapsulationProtocol || (UpdateVtapDetails.EncapsulationProtocol = {}));
    let TrafficMode;
    (function (TrafficMode) {
        TrafficMode["Default"] = "DEFAULT";
        TrafficMode["Priority"] = "PRIORITY";
    })(TrafficMode = UpdateVtapDetails.TrafficMode || (UpdateVtapDetails.TrafficMode = {}));
    let TargetType;
    (function (TargetType) {
        TargetType["Vnic"] = "VNIC";
        TargetType["NetworkLoadBalancer"] = "NETWORK_LOAD_BALANCER";
        TargetType["IpAddress"] = "IP_ADDRESS";
    })(TargetType = UpdateVtapDetails.TargetType || (UpdateVtapDetails.TargetType = {}));
    let SourceType;
    (function (SourceType) {
        SourceType["Vnic"] = "VNIC";
        SourceType["Subnet"] = "SUBNET";
        SourceType["LoadBalancer"] = "LOAD_BALANCER";
        SourceType["DbSystem"] = "DB_SYSTEM";
        SourceType["ExadataVmCluster"] = "EXADATA_VM_CLUSTER";
        SourceType["AutonomousDataWarehouse"] = "AUTONOMOUS_DATA_WAREHOUSE";
    })(SourceType = UpdateVtapDetails.SourceType || (UpdateVtapDetails.SourceType = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    UpdateVtapDetails.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    UpdateVtapDetails.getDeserializedJsonObj = getDeserializedJsonObj;
})(UpdateVtapDetails = exports.UpdateVtapDetails || (exports.UpdateVtapDetails = {}));
//# sourceMappingURL=update-vtap-details.js.map