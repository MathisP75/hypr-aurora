/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The location for where an instance pool will place instances.
 */
export interface UpdateInstancePoolPlacementConfigurationDetails {
    /**
      * The availability domain to place instances.
  * <p>
  Example: `Uocm:PHX-AD-1`
  *
      */
    "availabilityDomain": string;
    /**
      * The fault domains to place instances.
  * <p>
  If you don't provide any values, the system makes a best effort to distribute
  * instances across all fault domains based on capacity.
  * <p>
  To distribute the instances evenly across selected fault domains, provide a
  * set of fault domains. For example, you might want instances to be evenly
  * distributed if your applications require high availability.
  * <p>
  To get a list of fault domains, use the
  * {@link #listFaultDomains(ListFaultDomainsRequest) listFaultDomains} operation
  * in the Identity and Access Management Service API.
  * <p>
  Example: `[FAULT-DOMAIN-1, FAULT-DOMAIN-2, FAULT-DOMAIN-3]`
  *
      */
    "faultDomains"?: Array<string>;
    /**
     * The OCID of the primary subnet to place instances.
     */
    "primarySubnetId": string;
    /**
     * The set of subnet OCIDs for secondary VNICs for instances in the pool.
     */
    "secondaryVnicSubnets"?: Array<model.InstancePoolPlacementSecondaryVnicSubnet>;
}
export declare namespace UpdateInstancePoolPlacementConfigurationDetails {
    function getJsonObj(obj: UpdateInstancePoolPlacementConfigurationDetails): object;
    function getDeserializedJsonObj(obj: UpdateInstancePoolPlacementConfigurationDetails): object;
}
