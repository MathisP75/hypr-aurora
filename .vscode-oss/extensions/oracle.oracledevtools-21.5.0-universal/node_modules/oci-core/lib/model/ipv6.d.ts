/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
* An *IPv6* is a conceptual term that refers to an IPv6 address and related properties.
* The `IPv6` object is the API representation of an IPv6.
* <p>
You can create and assign an IPv6 to any VNIC that is in an IPv6-enabled subnet in an
* IPv6-enabled VCN.
* <p>
**Note:** IPv6 addressing is supported for all commercial and government regions. For important
* details about IPv6 addressing in a VCN, see [IPv6 Addresses](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/ipv6.htm).
*
*/
export interface Ipv6 {
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the IPv6.
     * This is the same as the VNIC's compartment.
     *
     */
    "compartmentId": string;
    /**
      * Defined tags for this resource. Each key is predefined and scoped to a
  * namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
  * <p>
  Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
  *
      */
    "definedTags"?: {
        [key: string]: {
            [key: string]: any;
        };
    };
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.
     * Avoid entering confidential information.
     *
     */
    "displayName": string;
    /**
      * Free-form tags for this resource. Each tag is a simple key-value pair with no
  * predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
  * <p>
  Example: `{\"Department\": \"Finance\"}`
  *
      */
    "freeformTags"?: {
        [key: string]: string;
    };
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IPv6.
     */
    "id": string;
    /**
      * The IPv6 address of the `IPv6` object. The address is within the IPv6 CIDR block of the VNIC's subnet
  * (see the `ipv6CidrBlock` attribute for the {@link Subnet} object.
  * <p>
  Example: `2001:0db8:0123:1111:abcd:ef01:2345:6789`
  *
      */
    "ipAddress": string;
    /**
     * The IPv6's current state.
     */
    "lifecycleState": Ipv6.LifecycleState;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the VNIC is in.
     */
    "subnetId": string;
    /**
      * The date and time the IPv6 was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
  * <p>
  Example: `2016-08-25T21:10:29.600Z`
  *
      */
    "timeCreated": Date;
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC the IPv6 is assigned to.
     * The VNIC and IPv6 must be in the same subnet.
     *
     */
    "vnicId": string;
}
export declare namespace Ipv6 {
    enum LifecycleState {
        Provisioning = "PROVISIONING",
        Available = "AVAILABLE",
        Terminating = "TERMINATING",
        Terminated = "TERMINATED",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: Ipv6): object;
    function getDeserializedJsonObj(obj: Ipv6): object;
}
