"use strict";
/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CaptureConsoleHistoryDetails = exports.CapacityReservationInstanceSummary = exports.Byoipv6CidrDetails = exports.ByoipRangeVcnIpv6AllocationSummary = exports.ByoipRangeSummary = exports.ByoipRangeCollection = exports.ByoipRange = exports.ByoipAllocatedRangeSummary = exports.ByoipAllocatedRangeCollection = exports.BulkDeleteVirtualCircuitPublicPrefixesDetails = exports.BulkAddVirtualCircuitPublicPrefixesDetails = exports.BootVolumeSourceDetails = exports.BootVolumeReplicaInfo = exports.BootVolumeReplicaDetails = exports.BootVolumeReplica = exports.BootVolumeKmsKey = exports.BootVolumeBackup = exports.BootVolumeAttachment = exports.BootVolume = exports.BlockVolumeReplicaInfo = exports.BlockVolumeReplicaDetails = exports.BlockVolumeReplica = exports.BgpSessionInfo = exports.AttachVolumeDetails = exports.AttachVnicDetails = exports.AttachLoadBalancerDetails = exports.AttachInstancePoolInstanceDetails = exports.AttachBootVolumeDetails = exports.AppCatalogSubscriptionSummary = exports.AppCatalogSubscription = exports.AppCatalogListingSummary = exports.AppCatalogListingResourceVersionSummary = exports.AppCatalogListingResourceVersionAgreements = exports.AppCatalogListingResourceVersion = exports.AppCatalogListing = exports.AllowedPhaseTwoParameters = exports.AllowedPhaseOneParameters = exports.AllowedIkeIPSecParameters = exports.AddedNetworkSecurityGroupSecurityRules = exports.AddVcnIpv6CidrDetails = exports.AddVcnCidrDetails = exports.AddSubnetIpv6CidrDetails = exports.AddSecurityRuleDetails = exports.AddPublicIpPoolCapacityDetails = exports.AddNetworkSecurityGroupSecurityRulesDetails = exports.AddImageShapeCompatibilityEntryDetails = exports.AddDrgRouteRulesDetails = exports.AddDrgRouteRuleDetails = exports.AddDrgRouteDistributionStatementsDetails = exports.AddDrgRouteDistributionStatementDetails = void 0;
exports.ComputeImageCapabilitySchemaSummary = exports.ComputeImageCapabilitySchema = exports.ComputeGlobalImageCapabilitySchemaVersionSummary = exports.ComputeGlobalImageCapabilitySchemaVersion = exports.ComputeGlobalImageCapabilitySchemaSummary = exports.ComputeGlobalImageCapabilitySchema = exports.ComputeCapacityReservationSummary = exports.ComputeCapacityReservationInstanceShapeSummary = exports.ComputeCapacityReservation = exports.ClusterNetworkSummary = exports.ClusterNetworkPlacementConfigurationDetails = exports.ClusterNetwork = exports.ChangeVtapCompartmentDetails = exports.ChangeVolumeGroupCompartmentDetails = exports.ChangeVolumeGroupBackupCompartmentDetails = exports.ChangeVolumeCompartmentDetails = exports.ChangeVolumeBackupCompartmentDetails = exports.ChangeVlanCompartmentDetails = exports.ChangeVirtualCircuitCompartmentDetails = exports.ChangeVcnCompartmentDetails = exports.ChangeSubnetCompartmentDetails = exports.ChangeServiceGatewayCompartmentDetails = exports.ChangeSecurityListCompartmentDetails = exports.ChangeRouteTableCompartmentDetails = exports.ChangeRemotePeeringConnectionCompartmentDetails = exports.ChangePublicIpPoolCompartmentDetails = exports.ChangePublicIpCompartmentDetails = exports.ChangeNetworkSecurityGroupCompartmentDetails = exports.ChangeNatGatewayCompartmentDetails = exports.ChangeLocalPeeringGatewayCompartmentDetails = exports.ChangeInternetGatewayCompartmentDetails = exports.ChangeInstancePoolCompartmentDetails = exports.ChangeInstanceConfigurationCompartmentDetails = exports.ChangeInstanceCompartmentDetails = exports.ChangeImageCompartmentDetails = exports.ChangeIPSecConnectionCompartmentDetails = exports.ChangeDrgCompartmentDetails = exports.ChangeDhcpOptionsCompartmentDetails = exports.ChangeDedicatedVmHostCompartmentDetails = exports.ChangeCrossConnectGroupCompartmentDetails = exports.ChangeCrossConnectCompartmentDetails = exports.ChangeCpeCompartmentDetails = exports.ChangeComputeImageCapabilitySchemaCompartmentDetails = exports.ChangeComputeCapacityReservationCompartmentDetails = exports.ChangeClusterNetworkCompartmentDetails = exports.ChangeCaptureFilterCompartmentDetails = exports.ChangeByoipRangeCompartmentDetails = exports.ChangeBootVolumeCompartmentDetails = exports.ChangeBootVolumeBackupCompartmentDetails = exports.CaptureFilter = void 0;
exports.CreateRemotePeeringConnectionDetails = exports.CreatePublicIpPoolDetails = exports.CreatePublicIpDetails = exports.CreatePrivateIpDetails = exports.CreateNetworkSecurityGroupDetails = exports.CreateNatGatewayDetails = exports.CreateMacsecProperties = exports.CreateMacsecKey = exports.CreateLocalPeeringGatewayDetails = exports.CreateIpv6Details = exports.CreateInternetGatewayDetails = exports.CreateInstancePoolPlacementConfigurationDetails = exports.CreateInstancePoolDetails = exports.CreateInstanceConsoleConnectionDetails = exports.CreateInstanceConfigurationBase = exports.CreateImageDetails = exports.CreateIPSecTunnelEncryptionDomainDetails = exports.CreateIPSecTunnelBgpSessionDetails = exports.CreateIPSecConnectionTunnelDetails = exports.CreateIPSecConnectionDetails = exports.CreateDrgRouteTableDetails = exports.CreateDrgRouteDistributionDetails = exports.CreateDrgDetails = exports.CreateDrgAttachmentDetails = exports.CreateDhcpDetails = exports.CreateDedicatedVmHostDetails = exports.CreateCrossConnectGroupDetails = exports.CreateCrossConnectDetails = exports.CreateCpeDetails = exports.CreateComputeImageCapabilitySchemaDetails = exports.CreateComputeCapacityReservationDetails = exports.CreateClusterNetworkInstancePoolDetails = exports.CreateClusterNetworkDetails = exports.CreateCaptureFilterDetails = exports.CreateByoipRangeDetails = exports.CreateBootVolumeDetails = exports.CreateBootVolumeBackupDetails = exports.CreateAppCatalogSubscriptionDetails = exports.CpeDeviceShapeSummary = exports.CpeDeviceShapeDetail = exports.CpeDeviceInfo = exports.CpeDeviceConfigQuestion = exports.CpeDeviceConfigAnswer = exports.Cpe = exports.CopyVolumeGroupBackupDetails = exports.CopyVolumeBackupDetails = exports.CopyBootVolumeBackupDetails = exports.ConsoleHistory = exports.ConnectRemotePeeringConnectionsDetails = exports.ConnectLocalPeeringGatewaysDetails = void 0;
exports.DrgRouteRule = exports.DrgRouteDistributionStatement = exports.DrgRouteDistributionMatchCriteria = exports.DrgRouteDistribution = exports.DrgRedundancyStatus = exports.DrgAttachmentNetworkUpdateDetails = exports.DrgAttachmentNetworkDetails = exports.DrgAttachmentNetworkCreateDetails = exports.DrgAttachmentInfo = exports.DrgAttachment = exports.Drg = exports.DpdConfig = exports.DhcpOptions = exports.DhcpOption = exports.Device = exports.DetachLoadBalancerDetails = exports.DetachInstancePoolInstanceDetails = exports.DeleteVirtualCircuitPublicPrefixDetails = exports.DefaultPhaseTwoParameters = exports.DefaultPhaseOneParameters = exports.DefaultDrgRouteTables = exports.DedicatedVmHostSummary = exports.DedicatedVmHostShapeSummary = exports.DedicatedVmHostInstanceSummary = exports.DedicatedVmHostInstanceShapeSummary = exports.DedicatedVmHost = exports.CrossConnectStatus = exports.CrossConnectPortSpeedShape = exports.CrossConnectMappingDetailsCollection = exports.CrossConnectMappingDetails = exports.CrossConnectMapping = exports.CrossConnectLocation = exports.CrossConnectGroup = exports.CrossConnect = exports.CreateVtapDetails = exports.CreateVolumeGroupDetails = exports.CreateVolumeGroupBackupDetails = exports.CreateVolumeDetails = exports.CreateVolumeBackupPolicyDetails = exports.CreateVolumeBackupPolicyAssignmentDetails = exports.CreateVolumeBackupDetails = exports.CreateVnicDetails = exports.CreateVlanDetails = exports.CreateVirtualCircuitPublicPrefixDetails = exports.CreateVirtualCircuitDetails = exports.CreateVcnDetails = exports.CreateSubnetDetails = exports.CreateServiceGatewayDetails = exports.CreateSecurityListDetails = exports.CreateRouteTableDetails = void 0;
exports.InstancePool = exports.InstanceOptions = exports.InstanceCredentials = exports.InstanceConsoleConnection = exports.InstanceConfigurationVolumeSourceDetails = exports.InstanceConfigurationSummary = exports.InstanceConfigurationLaunchOptions = exports.InstanceConfigurationLaunchInstanceShapeConfigDetails = exports.InstanceConfigurationLaunchInstancePlatformConfig = exports.InstanceConfigurationLaunchInstanceDetails = exports.InstanceConfigurationLaunchInstanceAgentConfigDetails = exports.InstanceConfigurationInstanceSourceDetails = exports.InstanceConfigurationInstanceOptions = exports.InstanceConfigurationInstanceDetails = exports.InstanceConfigurationCreateVolumeDetails = exports.InstanceConfigurationCreateVnicDetails = exports.InstanceConfigurationBlockVolumeDetails = exports.InstanceConfigurationAvailabilityConfig = exports.InstanceConfigurationAttachVolumeDetails = exports.InstanceConfigurationAttachVnicDetails = exports.InstanceConfiguration = exports.InstanceAvailabilityConfig = exports.InstanceAgentPluginConfigDetails = exports.InstanceAgentFeatures = exports.InstanceAgentConfig = exports.Instance = exports.IngressSecurityRule = exports.ImageSourceDetails = exports.ImageShapeCompatibilitySummary = exports.ImageShapeCompatibilityEntry = exports.ImageOcpuConstraints = exports.ImageMemoryConstraints = exports.ImageCapabilitySchemaDescriptor = exports.Image = exports.IcmpOptions = exports.IPSecConnectionTunnelSharedSecret = exports.IPSecConnectionTunnelErrorDetails = exports.IPSecConnectionTunnel = exports.IPSecConnectionDeviceStatus = exports.IPSecConnectionDeviceConfig = exports.IPSecConnection = exports.GetPublicIpByPrivateIpIdDetails = exports.GetPublicIpByIpAddressDetails = exports.FastConnectProviderServiceKey = exports.FastConnectProviderService = exports.ExportImageDetails = exports.EncryptionInTransitType = exports.EncryptionDomainConfig = exports.EgressSecurityRule = exports.DrgRouteTable = void 0;
exports.RemotePeeringConnection = exports.PublicIpPoolSummary = exports.PublicIpPoolCollection = exports.PublicIpPool = exports.PublicIp = exports.PrivateIp = exports.PreemptionAction = exports.PreemptibleInstanceConfigDetails = exports.PortRange = exports.PlatformConfig = exports.PhaseTwoConfigDetails = exports.PhaseOneConfigDetails = exports.PercentageOfCoresEnabledOptions = exports.PeerRegionForRemotePeering = exports.NetworkSecurityGroupVnic = exports.NetworkSecurityGroup = exports.NatGateway = exports.MultipathDevice = exports.ModifyVcnCidrDetails = exports.MemberReplica = exports.MeasuredBootReportMeasurements = exports.MeasuredBootReport = exports.MeasuredBootEntry = exports.MacsecState = exports.MacsecProperties = exports.MacsecKey = exports.MacsecEncryptionCipher = exports.LocalPeeringGateway = exports.LetterOfAuthority = exports.LaunchOptions = exports.LaunchInstanceShapeConfigDetails = exports.LaunchInstancePlatformConfig = exports.LaunchInstanceDetails = exports.LaunchInstanceAvailabilityConfigDetails = exports.LaunchInstanceAgentConfigDetails = exports.Ipv6 = exports.InternetGateway = exports.InstanceSummary = exports.InstanceSourceDetails = exports.InstanceShapeConfig = exports.InstanceReservationShapeConfigDetails = exports.InstanceReservationConfigDetails = exports.InstanceReservationConfig = exports.InstancePowerActionDetails = exports.InstancePoolSummary = exports.InstancePoolPlacementSecondaryVnicSubnet = exports.InstancePoolPlacementConfiguration = exports.InstancePoolLoadBalancerAttachment = exports.InstancePoolInstanceLoadBalancerBackend = exports.InstancePoolInstance = void 0;
exports.UpdateClusterNetworkDetails = exports.UpdateCaptureFilterDetails = exports.UpdateByoipRangeDetails = exports.UpdateBootVolumeKmsKeyDetails = exports.UpdateBootVolumeDetails = exports.UpdateBootVolumeBackupDetails = exports.UdpOptions = exports.TunnelStatus = exports.TunnelSecurityAssociationSummary = exports.TunnelRouteSummary = exports.TunnelPhaseTwoDetails = exports.TunnelPhaseOneDetails = exports.TunnelCpeDeviceConfig = exports.TunnelConfig = exports.TopologyRoutesToRelationshipDetails = exports.TopologyEntityRelationship = exports.TopologyAssociatedWithRelationshipDetails = exports.Topology = exports.TcpOptions = exports.Subnet = exports.ShapeVirtualInstructionsEnabledPlatformOptions = exports.ShapeTrustedPlatformModuleOptions = exports.ShapeSymmetricMultiThreadingEnabledPlatformOptions = exports.ShapeSecureBootOptions = exports.ShapePlatformConfigOptions = exports.ShapeOcpuOptions = exports.ShapeNumaNodesPerSocketPlatformOptions = exports.ShapeNetworkingBandwidthOptions = exports.ShapeMemoryOptions = exports.ShapeMeasuredBootOptions = exports.ShapeMaxVnicAttachmentOptions = exports.ShapeInputOutputMemoryManagementUnitEnabledPlatformOptions = exports.ShapeAlternativeObject = exports.ShapeAccessControlServiceEnabledPlatformOptions = exports.Shape = exports.ServiceIdResponseDetails = exports.ServiceIdRequestDetails = exports.ServiceGateway = exports.Service = exports.SecurityRule = exports.SecurityList = exports.RouteTable = exports.RouteRule = exports.RemoveVcnIpv6CidrDetails = exports.RemoveVcnCidrDetails = exports.RemoveSubnetIpv6CidrDetails = exports.RemovePublicIpPoolCapacityDetails = exports.RemoveNetworkSecurityGroupSecurityRulesDetails = exports.RemoveDrgRouteRulesDetails = exports.RemoveDrgRouteDistributionStatementsDetails = void 0;
exports.UpdateTunnelCpeDeviceConfigDetails = exports.UpdateSubnetDetails = exports.UpdateServiceGatewayDetails = exports.UpdateSecurityRuleDetails = exports.UpdateSecurityListDetails = exports.UpdateRouteTableDetails = exports.UpdateRemotePeeringConnectionDetails = exports.UpdatePublicIpPoolDetails = exports.UpdatePublicIpDetails = exports.UpdatePrivateIpDetails = exports.UpdateNetworkSecurityGroupSecurityRulesDetails = exports.UpdateNetworkSecurityGroupDetails = exports.UpdateNatGatewayDetails = exports.UpdateMacsecProperties = exports.UpdateMacsecKey = exports.UpdateLocalPeeringGatewayDetails = exports.UpdateLaunchOptions = exports.UpdateIpv6Details = exports.UpdateInternetGatewayDetails = exports.UpdateInstanceShapeConfigDetails = exports.UpdateInstancePoolPlacementConfigurationDetails = exports.UpdateInstancePoolDetails = exports.UpdateInstanceDetails = exports.UpdateInstanceConsoleConnectionDetails = exports.UpdateInstanceConfigurationDetails = exports.UpdateInstanceAvailabilityConfigDetails = exports.UpdateInstanceAgentConfigDetails = exports.UpdateImageDetails = exports.UpdateIPSecTunnelEncryptionDomainDetails = exports.UpdateIPSecTunnelBgpSessionDetails = exports.UpdateIPSecConnectionTunnelSharedSecretDetails = exports.UpdateIPSecConnectionTunnelDetails = exports.UpdateIPSecConnectionDetails = exports.UpdateDrgRouteTableDetails = exports.UpdateDrgRouteRulesDetails = exports.UpdateDrgRouteRuleDetails = exports.UpdateDrgRouteDistributionStatementsDetails = exports.UpdateDrgRouteDistributionStatementDetails = exports.UpdateDrgRouteDistributionDetails = exports.UpdateDrgDetails = exports.UpdateDrgAttachmentDetails = exports.UpdateDhcpDetails = exports.UpdateDedicatedVmHostDetails = exports.UpdateCrossConnectGroupDetails = exports.UpdateCrossConnectDetails = exports.UpdateCpeDetails = exports.UpdateConsoleHistoryDetails = exports.UpdateComputeImageCapabilitySchemaDetails = exports.UpdateComputeCapacityReservationDetails = exports.UpdateClusterNetworkInstancePoolDetails = void 0;
exports.AttachParavirtualizedVolumeDetails = exports.AttachIScsiVolumeDetails = exports.AttachEmulatedVolumeDetails = exports.AmdVmPlatformConfig = exports.AmdVmLaunchInstancePlatformConfig = exports.AmdRomeBmPlatformConfig = exports.AmdRomeBmLaunchInstancePlatformConfig = exports.AmdRomeBmGpuPlatformConfig = exports.AmdRomeBmGpuLaunchInstancePlatformConfig = exports.AmdMilanBmPlatformConfig = exports.AmdMilanBmLaunchInstancePlatformConfig = exports.VtapCaptureFilterRuleDetails = exports.Vtap = exports.VolumeSourceDetails = exports.VolumeKmsKey = exports.VolumeGroupSourceDetails = exports.VolumeGroupReplicaInfo = exports.VolumeGroupReplicaDetails = exports.VolumeGroupReplica = exports.VolumeGroupBackup = exports.VolumeGroup = exports.VolumeBackupSchedule = exports.VolumeBackupPolicyAssignment = exports.VolumeBackupPolicy = exports.VolumeBackup = exports.VolumeAttachment = exports.Volume = exports.VnicAttachment = exports.Vnic = exports.Vlan = exports.VirtualCircuitPublicPrefix = exports.VirtualCircuitIpMtu = exports.VirtualCircuitBandwidthShape = exports.VirtualCircuit = exports.VcnDnsResolverAssociation = exports.Vcn = exports.UpgradeStatus = exports.UpdatedNetworkSecurityGroupSecurityRules = exports.UpdateVtapDetails = exports.UpdateVolumeKmsKeyDetails = exports.UpdateVolumeGroupDetails = exports.UpdateVolumeGroupBackupDetails = exports.UpdateVolumeDetails = exports.UpdateVolumeBackupPolicyDetails = exports.UpdateVolumeBackupDetails = exports.UpdateVolumeAttachmentDetails = exports.UpdateVnicDetails = exports.UpdateVlanDetails = exports.UpdateVirtualCircuitDetails = exports.UpdateVcnDetails = void 0;
exports.TerminatePreemptionAction = exports.SubnetTopology = exports.SoftResetActionDetails = exports.ResetActionDetails = exports.RemotePeeringConnectionDrgAttachmentNetworkDetails = exports.ParavirtualizedVolumeAttachment = exports.NetworkingTopology = exports.IpsecTunnelDrgAttachmentNetworkDetails = exports.IntelVmPlatformConfig = exports.IntelVmLaunchInstancePlatformConfig = exports.IntelSkylakeBmPlatformConfig = exports.IntelSkylakeBmLaunchInstancePlatformConfig = exports.IntelIcelakeBmPlatformConfig = exports.IntelIcelakeBmLaunchInstancePlatformConfig = exports.InstanceSourceViaImageDetails = exports.InstanceSourceViaBootVolumeDetails = exports.InstanceConfigurationVolumeSourceFromVolumeDetails = exports.InstanceConfigurationVolumeSourceFromVolumeBackupDetails = exports.InstanceConfigurationParavirtualizedAttachVolumeDetails = exports.InstanceConfigurationIscsiAttachVolumeDetails = exports.InstanceConfigurationIntelVmLaunchInstancePlatformConfig = exports.InstanceConfigurationIntelSkylakeBmLaunchInstancePlatformConfig = exports.InstanceConfigurationIntelIcelakeBmLaunchInstancePlatformConfig = exports.InstanceConfigurationInstanceSourceViaImageDetails = exports.InstanceConfigurationInstanceSourceViaBootVolumeDetails = exports.InstanceConfigurationAmdVmLaunchInstancePlatformConfig = exports.InstanceConfigurationAmdRomeBmLaunchInstancePlatformConfig = exports.InstanceConfigurationAmdRomeBmGpuLaunchInstancePlatformConfig = exports.InstanceConfigurationAmdMilanBmLaunchInstancePlatformConfig = exports.ImageSourceViaObjectStorageUriDetails = exports.ImageSourceViaObjectStorageTupleDetails = exports.IScsiVolumeAttachment = exports.ExportImageViaObjectStorageUriDetails = exports.ExportImageViaObjectStorageTupleDetails = exports.EnumStringImageCapabilitySchemaDescriptor = exports.EnumIntegerImageCapabilityDescriptor = exports.EmulatedVolumeAttachment = exports.DrgAttachmentTypeDrgRouteDistributionMatchCriteria = exports.DrgAttachmentMatchAllDrgRouteDistributionMatchCriteria = exports.DrgAttachmentIdDrgRouteDistributionMatchCriteria = exports.DhcpSearchDomainOption = exports.DhcpDnsOption = exports.CreateInstanceConfigurationFromInstanceDetails = exports.CreateInstanceConfigurationDetails = exports.ComputeInstanceDetails = exports.BootVolumeSourceFromBootVolumeReplicaDetails = exports.BootVolumeSourceFromBootVolumeDetails = exports.BootVolumeSourceFromBootVolumeBackupDetails = exports.BooleanImageCapabilitySchemaDescriptor = exports.AttachServiceDeterminedVolumeDetails = void 0;
exports.VolumeSourceFromVolumeDetails = exports.VolumeSourceFromVolumeBackupDetails = exports.VolumeSourceFromBlockVolumeReplicaDetails = exports.VolumeGroupSourceFromVolumesDetails = exports.VolumeGroupSourceFromVolumeGroupReplicaDetails = exports.VolumeGroupSourceFromVolumeGroupDetails = exports.VolumeGroupSourceFromVolumeGroupBackupDetails = exports.VirtualCircuitDrgAttachmentNetworkDetails = exports.VcnTopology = exports.VcnDrgAttachmentNetworkUpdateDetails = exports.VcnDrgAttachmentNetworkDetails = exports.VcnDrgAttachmentNetworkCreateDetails = exports.TopologyRoutesToEntityRelationship = exports.TopologyContainsEntityRelationship = exports.TopologyAssociatedWithEntityRelationship = void 0;
const AddDrgRouteDistributionStatementDetails = __importStar(require("./add-drg-route-distribution-statement-details"));
exports.AddDrgRouteDistributionStatementDetails = AddDrgRouteDistributionStatementDetails.AddDrgRouteDistributionStatementDetails;
const AddDrgRouteDistributionStatementsDetails = __importStar(require("./add-drg-route-distribution-statements-details"));
exports.AddDrgRouteDistributionStatementsDetails = AddDrgRouteDistributionStatementsDetails.AddDrgRouteDistributionStatementsDetails;
const AddDrgRouteRuleDetails = __importStar(require("./add-drg-route-rule-details"));
exports.AddDrgRouteRuleDetails = AddDrgRouteRuleDetails.AddDrgRouteRuleDetails;
const AddDrgRouteRulesDetails = __importStar(require("./add-drg-route-rules-details"));
exports.AddDrgRouteRulesDetails = AddDrgRouteRulesDetails.AddDrgRouteRulesDetails;
const AddImageShapeCompatibilityEntryDetails = __importStar(require("./add-image-shape-compatibility-entry-details"));
exports.AddImageShapeCompatibilityEntryDetails = AddImageShapeCompatibilityEntryDetails.AddImageShapeCompatibilityEntryDetails;
const AddNetworkSecurityGroupSecurityRulesDetails = __importStar(require("./add-network-security-group-security-rules-details"));
exports.AddNetworkSecurityGroupSecurityRulesDetails = AddNetworkSecurityGroupSecurityRulesDetails.AddNetworkSecurityGroupSecurityRulesDetails;
const AddPublicIpPoolCapacityDetails = __importStar(require("./add-public-ip-pool-capacity-details"));
exports.AddPublicIpPoolCapacityDetails = AddPublicIpPoolCapacityDetails.AddPublicIpPoolCapacityDetails;
const AddSecurityRuleDetails = __importStar(require("./add-security-rule-details"));
exports.AddSecurityRuleDetails = AddSecurityRuleDetails.AddSecurityRuleDetails;
const AddSubnetIpv6CidrDetails = __importStar(require("./add-subnet-ipv6-cidr-details"));
exports.AddSubnetIpv6CidrDetails = AddSubnetIpv6CidrDetails.AddSubnetIpv6CidrDetails;
const AddVcnCidrDetails = __importStar(require("./add-vcn-cidr-details"));
exports.AddVcnCidrDetails = AddVcnCidrDetails.AddVcnCidrDetails;
const AddVcnIpv6CidrDetails = __importStar(require("./add-vcn-ipv6-cidr-details"));
exports.AddVcnIpv6CidrDetails = AddVcnIpv6CidrDetails.AddVcnIpv6CidrDetails;
const AddedNetworkSecurityGroupSecurityRules = __importStar(require("./added-network-security-group-security-rules"));
exports.AddedNetworkSecurityGroupSecurityRules = AddedNetworkSecurityGroupSecurityRules.AddedNetworkSecurityGroupSecurityRules;
const AllowedIkeIPSecParameters = __importStar(require("./allowed-ike-ip-sec-parameters"));
exports.AllowedIkeIPSecParameters = AllowedIkeIPSecParameters.AllowedIkeIPSecParameters;
const AllowedPhaseOneParameters = __importStar(require("./allowed-phase-one-parameters"));
exports.AllowedPhaseOneParameters = AllowedPhaseOneParameters.AllowedPhaseOneParameters;
const AllowedPhaseTwoParameters = __importStar(require("./allowed-phase-two-parameters"));
exports.AllowedPhaseTwoParameters = AllowedPhaseTwoParameters.AllowedPhaseTwoParameters;
const AppCatalogListing = __importStar(require("./app-catalog-listing"));
exports.AppCatalogListing = AppCatalogListing.AppCatalogListing;
const AppCatalogListingResourceVersion = __importStar(require("./app-catalog-listing-resource-version"));
exports.AppCatalogListingResourceVersion = AppCatalogListingResourceVersion.AppCatalogListingResourceVersion;
const AppCatalogListingResourceVersionAgreements = __importStar(require("./app-catalog-listing-resource-version-agreements"));
exports.AppCatalogListingResourceVersionAgreements = AppCatalogListingResourceVersionAgreements.AppCatalogListingResourceVersionAgreements;
const AppCatalogListingResourceVersionSummary = __importStar(require("./app-catalog-listing-resource-version-summary"));
exports.AppCatalogListingResourceVersionSummary = AppCatalogListingResourceVersionSummary.AppCatalogListingResourceVersionSummary;
const AppCatalogListingSummary = __importStar(require("./app-catalog-listing-summary"));
exports.AppCatalogListingSummary = AppCatalogListingSummary.AppCatalogListingSummary;
const AppCatalogSubscription = __importStar(require("./app-catalog-subscription"));
exports.AppCatalogSubscription = AppCatalogSubscription.AppCatalogSubscription;
const AppCatalogSubscriptionSummary = __importStar(require("./app-catalog-subscription-summary"));
exports.AppCatalogSubscriptionSummary = AppCatalogSubscriptionSummary.AppCatalogSubscriptionSummary;
const AttachBootVolumeDetails = __importStar(require("./attach-boot-volume-details"));
exports.AttachBootVolumeDetails = AttachBootVolumeDetails.AttachBootVolumeDetails;
const AttachInstancePoolInstanceDetails = __importStar(require("./attach-instance-pool-instance-details"));
exports.AttachInstancePoolInstanceDetails = AttachInstancePoolInstanceDetails.AttachInstancePoolInstanceDetails;
const AttachLoadBalancerDetails = __importStar(require("./attach-load-balancer-details"));
exports.AttachLoadBalancerDetails = AttachLoadBalancerDetails.AttachLoadBalancerDetails;
const AttachVnicDetails = __importStar(require("./attach-vnic-details"));
exports.AttachVnicDetails = AttachVnicDetails.AttachVnicDetails;
const AttachVolumeDetails = __importStar(require("./attach-volume-details"));
exports.AttachVolumeDetails = AttachVolumeDetails.AttachVolumeDetails;
const BgpSessionInfo = __importStar(require("./bgp-session-info"));
exports.BgpSessionInfo = BgpSessionInfo.BgpSessionInfo;
const BlockVolumeReplica = __importStar(require("./block-volume-replica"));
exports.BlockVolumeReplica = BlockVolumeReplica.BlockVolumeReplica;
const BlockVolumeReplicaDetails = __importStar(require("./block-volume-replica-details"));
exports.BlockVolumeReplicaDetails = BlockVolumeReplicaDetails.BlockVolumeReplicaDetails;
const BlockVolumeReplicaInfo = __importStar(require("./block-volume-replica-info"));
exports.BlockVolumeReplicaInfo = BlockVolumeReplicaInfo.BlockVolumeReplicaInfo;
const BootVolume = __importStar(require("./boot-volume"));
exports.BootVolume = BootVolume.BootVolume;
const BootVolumeAttachment = __importStar(require("./boot-volume-attachment"));
exports.BootVolumeAttachment = BootVolumeAttachment.BootVolumeAttachment;
const BootVolumeBackup = __importStar(require("./boot-volume-backup"));
exports.BootVolumeBackup = BootVolumeBackup.BootVolumeBackup;
const BootVolumeKmsKey = __importStar(require("./boot-volume-kms-key"));
exports.BootVolumeKmsKey = BootVolumeKmsKey.BootVolumeKmsKey;
const BootVolumeReplica = __importStar(require("./boot-volume-replica"));
exports.BootVolumeReplica = BootVolumeReplica.BootVolumeReplica;
const BootVolumeReplicaDetails = __importStar(require("./boot-volume-replica-details"));
exports.BootVolumeReplicaDetails = BootVolumeReplicaDetails.BootVolumeReplicaDetails;
const BootVolumeReplicaInfo = __importStar(require("./boot-volume-replica-info"));
exports.BootVolumeReplicaInfo = BootVolumeReplicaInfo.BootVolumeReplicaInfo;
const BootVolumeSourceDetails = __importStar(require("./boot-volume-source-details"));
exports.BootVolumeSourceDetails = BootVolumeSourceDetails.BootVolumeSourceDetails;
const BulkAddVirtualCircuitPublicPrefixesDetails = __importStar(require("./bulk-add-virtual-circuit-public-prefixes-details"));
exports.BulkAddVirtualCircuitPublicPrefixesDetails = BulkAddVirtualCircuitPublicPrefixesDetails.BulkAddVirtualCircuitPublicPrefixesDetails;
const BulkDeleteVirtualCircuitPublicPrefixesDetails = __importStar(require("./bulk-delete-virtual-circuit-public-prefixes-details"));
exports.BulkDeleteVirtualCircuitPublicPrefixesDetails = BulkDeleteVirtualCircuitPublicPrefixesDetails.BulkDeleteVirtualCircuitPublicPrefixesDetails;
const ByoipAllocatedRangeCollection = __importStar(require("./byoip-allocated-range-collection"));
exports.ByoipAllocatedRangeCollection = ByoipAllocatedRangeCollection.ByoipAllocatedRangeCollection;
const ByoipAllocatedRangeSummary = __importStar(require("./byoip-allocated-range-summary"));
exports.ByoipAllocatedRangeSummary = ByoipAllocatedRangeSummary.ByoipAllocatedRangeSummary;
const ByoipRange = __importStar(require("./byoip-range"));
exports.ByoipRange = ByoipRange.ByoipRange;
const ByoipRangeCollection = __importStar(require("./byoip-range-collection"));
exports.ByoipRangeCollection = ByoipRangeCollection.ByoipRangeCollection;
const ByoipRangeSummary = __importStar(require("./byoip-range-summary"));
exports.ByoipRangeSummary = ByoipRangeSummary.ByoipRangeSummary;
const ByoipRangeVcnIpv6AllocationSummary = __importStar(require("./byoip-range-vcn-ipv6-allocation-summary"));
exports.ByoipRangeVcnIpv6AllocationSummary = ByoipRangeVcnIpv6AllocationSummary.ByoipRangeVcnIpv6AllocationSummary;
const Byoipv6CidrDetails = __importStar(require("./byoipv6-cidr-details"));
exports.Byoipv6CidrDetails = Byoipv6CidrDetails.Byoipv6CidrDetails;
const CapacityReservationInstanceSummary = __importStar(require("./capacity-reservation-instance-summary"));
exports.CapacityReservationInstanceSummary = CapacityReservationInstanceSummary.CapacityReservationInstanceSummary;
const CaptureConsoleHistoryDetails = __importStar(require("./capture-console-history-details"));
exports.CaptureConsoleHistoryDetails = CaptureConsoleHistoryDetails.CaptureConsoleHistoryDetails;
const CaptureFilter = __importStar(require("./capture-filter"));
exports.CaptureFilter = CaptureFilter.CaptureFilter;
const ChangeBootVolumeBackupCompartmentDetails = __importStar(require("./change-boot-volume-backup-compartment-details"));
exports.ChangeBootVolumeBackupCompartmentDetails = ChangeBootVolumeBackupCompartmentDetails.ChangeBootVolumeBackupCompartmentDetails;
const ChangeBootVolumeCompartmentDetails = __importStar(require("./change-boot-volume-compartment-details"));
exports.ChangeBootVolumeCompartmentDetails = ChangeBootVolumeCompartmentDetails.ChangeBootVolumeCompartmentDetails;
const ChangeByoipRangeCompartmentDetails = __importStar(require("./change-byoip-range-compartment-details"));
exports.ChangeByoipRangeCompartmentDetails = ChangeByoipRangeCompartmentDetails.ChangeByoipRangeCompartmentDetails;
const ChangeCaptureFilterCompartmentDetails = __importStar(require("./change-capture-filter-compartment-details"));
exports.ChangeCaptureFilterCompartmentDetails = ChangeCaptureFilterCompartmentDetails.ChangeCaptureFilterCompartmentDetails;
const ChangeClusterNetworkCompartmentDetails = __importStar(require("./change-cluster-network-compartment-details"));
exports.ChangeClusterNetworkCompartmentDetails = ChangeClusterNetworkCompartmentDetails.ChangeClusterNetworkCompartmentDetails;
const ChangeComputeCapacityReservationCompartmentDetails = __importStar(require("./change-compute-capacity-reservation-compartment-details"));
exports.ChangeComputeCapacityReservationCompartmentDetails = ChangeComputeCapacityReservationCompartmentDetails.ChangeComputeCapacityReservationCompartmentDetails;
const ChangeComputeImageCapabilitySchemaCompartmentDetails = __importStar(require("./change-compute-image-capability-schema-compartment-details"));
exports.ChangeComputeImageCapabilitySchemaCompartmentDetails = ChangeComputeImageCapabilitySchemaCompartmentDetails.ChangeComputeImageCapabilitySchemaCompartmentDetails;
const ChangeCpeCompartmentDetails = __importStar(require("./change-cpe-compartment-details"));
exports.ChangeCpeCompartmentDetails = ChangeCpeCompartmentDetails.ChangeCpeCompartmentDetails;
const ChangeCrossConnectCompartmentDetails = __importStar(require("./change-cross-connect-compartment-details"));
exports.ChangeCrossConnectCompartmentDetails = ChangeCrossConnectCompartmentDetails.ChangeCrossConnectCompartmentDetails;
const ChangeCrossConnectGroupCompartmentDetails = __importStar(require("./change-cross-connect-group-compartment-details"));
exports.ChangeCrossConnectGroupCompartmentDetails = ChangeCrossConnectGroupCompartmentDetails.ChangeCrossConnectGroupCompartmentDetails;
const ChangeDedicatedVmHostCompartmentDetails = __importStar(require("./change-dedicated-vm-host-compartment-details"));
exports.ChangeDedicatedVmHostCompartmentDetails = ChangeDedicatedVmHostCompartmentDetails.ChangeDedicatedVmHostCompartmentDetails;
const ChangeDhcpOptionsCompartmentDetails = __importStar(require("./change-dhcp-options-compartment-details"));
exports.ChangeDhcpOptionsCompartmentDetails = ChangeDhcpOptionsCompartmentDetails.ChangeDhcpOptionsCompartmentDetails;
const ChangeDrgCompartmentDetails = __importStar(require("./change-drg-compartment-details"));
exports.ChangeDrgCompartmentDetails = ChangeDrgCompartmentDetails.ChangeDrgCompartmentDetails;
const ChangeIPSecConnectionCompartmentDetails = __importStar(require("./change-ip-sec-connection-compartment-details"));
exports.ChangeIPSecConnectionCompartmentDetails = ChangeIPSecConnectionCompartmentDetails.ChangeIPSecConnectionCompartmentDetails;
const ChangeImageCompartmentDetails = __importStar(require("./change-image-compartment-details"));
exports.ChangeImageCompartmentDetails = ChangeImageCompartmentDetails.ChangeImageCompartmentDetails;
const ChangeInstanceCompartmentDetails = __importStar(require("./change-instance-compartment-details"));
exports.ChangeInstanceCompartmentDetails = ChangeInstanceCompartmentDetails.ChangeInstanceCompartmentDetails;
const ChangeInstanceConfigurationCompartmentDetails = __importStar(require("./change-instance-configuration-compartment-details"));
exports.ChangeInstanceConfigurationCompartmentDetails = ChangeInstanceConfigurationCompartmentDetails.ChangeInstanceConfigurationCompartmentDetails;
const ChangeInstancePoolCompartmentDetails = __importStar(require("./change-instance-pool-compartment-details"));
exports.ChangeInstancePoolCompartmentDetails = ChangeInstancePoolCompartmentDetails.ChangeInstancePoolCompartmentDetails;
const ChangeInternetGatewayCompartmentDetails = __importStar(require("./change-internet-gateway-compartment-details"));
exports.ChangeInternetGatewayCompartmentDetails = ChangeInternetGatewayCompartmentDetails.ChangeInternetGatewayCompartmentDetails;
const ChangeLocalPeeringGatewayCompartmentDetails = __importStar(require("./change-local-peering-gateway-compartment-details"));
exports.ChangeLocalPeeringGatewayCompartmentDetails = ChangeLocalPeeringGatewayCompartmentDetails.ChangeLocalPeeringGatewayCompartmentDetails;
const ChangeNatGatewayCompartmentDetails = __importStar(require("./change-nat-gateway-compartment-details"));
exports.ChangeNatGatewayCompartmentDetails = ChangeNatGatewayCompartmentDetails.ChangeNatGatewayCompartmentDetails;
const ChangeNetworkSecurityGroupCompartmentDetails = __importStar(require("./change-network-security-group-compartment-details"));
exports.ChangeNetworkSecurityGroupCompartmentDetails = ChangeNetworkSecurityGroupCompartmentDetails.ChangeNetworkSecurityGroupCompartmentDetails;
const ChangePublicIpCompartmentDetails = __importStar(require("./change-public-ip-compartment-details"));
exports.ChangePublicIpCompartmentDetails = ChangePublicIpCompartmentDetails.ChangePublicIpCompartmentDetails;
const ChangePublicIpPoolCompartmentDetails = __importStar(require("./change-public-ip-pool-compartment-details"));
exports.ChangePublicIpPoolCompartmentDetails = ChangePublicIpPoolCompartmentDetails.ChangePublicIpPoolCompartmentDetails;
const ChangeRemotePeeringConnectionCompartmentDetails = __importStar(require("./change-remote-peering-connection-compartment-details"));
exports.ChangeRemotePeeringConnectionCompartmentDetails = ChangeRemotePeeringConnectionCompartmentDetails.ChangeRemotePeeringConnectionCompartmentDetails;
const ChangeRouteTableCompartmentDetails = __importStar(require("./change-route-table-compartment-details"));
exports.ChangeRouteTableCompartmentDetails = ChangeRouteTableCompartmentDetails.ChangeRouteTableCompartmentDetails;
const ChangeSecurityListCompartmentDetails = __importStar(require("./change-security-list-compartment-details"));
exports.ChangeSecurityListCompartmentDetails = ChangeSecurityListCompartmentDetails.ChangeSecurityListCompartmentDetails;
const ChangeServiceGatewayCompartmentDetails = __importStar(require("./change-service-gateway-compartment-details"));
exports.ChangeServiceGatewayCompartmentDetails = ChangeServiceGatewayCompartmentDetails.ChangeServiceGatewayCompartmentDetails;
const ChangeSubnetCompartmentDetails = __importStar(require("./change-subnet-compartment-details"));
exports.ChangeSubnetCompartmentDetails = ChangeSubnetCompartmentDetails.ChangeSubnetCompartmentDetails;
const ChangeVcnCompartmentDetails = __importStar(require("./change-vcn-compartment-details"));
exports.ChangeVcnCompartmentDetails = ChangeVcnCompartmentDetails.ChangeVcnCompartmentDetails;
const ChangeVirtualCircuitCompartmentDetails = __importStar(require("./change-virtual-circuit-compartment-details"));
exports.ChangeVirtualCircuitCompartmentDetails = ChangeVirtualCircuitCompartmentDetails.ChangeVirtualCircuitCompartmentDetails;
const ChangeVlanCompartmentDetails = __importStar(require("./change-vlan-compartment-details"));
exports.ChangeVlanCompartmentDetails = ChangeVlanCompartmentDetails.ChangeVlanCompartmentDetails;
const ChangeVolumeBackupCompartmentDetails = __importStar(require("./change-volume-backup-compartment-details"));
exports.ChangeVolumeBackupCompartmentDetails = ChangeVolumeBackupCompartmentDetails.ChangeVolumeBackupCompartmentDetails;
const ChangeVolumeCompartmentDetails = __importStar(require("./change-volume-compartment-details"));
exports.ChangeVolumeCompartmentDetails = ChangeVolumeCompartmentDetails.ChangeVolumeCompartmentDetails;
const ChangeVolumeGroupBackupCompartmentDetails = __importStar(require("./change-volume-group-backup-compartment-details"));
exports.ChangeVolumeGroupBackupCompartmentDetails = ChangeVolumeGroupBackupCompartmentDetails.ChangeVolumeGroupBackupCompartmentDetails;
const ChangeVolumeGroupCompartmentDetails = __importStar(require("./change-volume-group-compartment-details"));
exports.ChangeVolumeGroupCompartmentDetails = ChangeVolumeGroupCompartmentDetails.ChangeVolumeGroupCompartmentDetails;
const ChangeVtapCompartmentDetails = __importStar(require("./change-vtap-compartment-details"));
exports.ChangeVtapCompartmentDetails = ChangeVtapCompartmentDetails.ChangeVtapCompartmentDetails;
const ClusterNetwork = __importStar(require("./cluster-network"));
exports.ClusterNetwork = ClusterNetwork.ClusterNetwork;
const ClusterNetworkPlacementConfigurationDetails = __importStar(require("./cluster-network-placement-configuration-details"));
exports.ClusterNetworkPlacementConfigurationDetails = ClusterNetworkPlacementConfigurationDetails.ClusterNetworkPlacementConfigurationDetails;
const ClusterNetworkSummary = __importStar(require("./cluster-network-summary"));
exports.ClusterNetworkSummary = ClusterNetworkSummary.ClusterNetworkSummary;
const ComputeCapacityReservation = __importStar(require("./compute-capacity-reservation"));
exports.ComputeCapacityReservation = ComputeCapacityReservation.ComputeCapacityReservation;
const ComputeCapacityReservationInstanceShapeSummary = __importStar(require("./compute-capacity-reservation-instance-shape-summary"));
exports.ComputeCapacityReservationInstanceShapeSummary = ComputeCapacityReservationInstanceShapeSummary.ComputeCapacityReservationInstanceShapeSummary;
const ComputeCapacityReservationSummary = __importStar(require("./compute-capacity-reservation-summary"));
exports.ComputeCapacityReservationSummary = ComputeCapacityReservationSummary.ComputeCapacityReservationSummary;
const ComputeGlobalImageCapabilitySchema = __importStar(require("./compute-global-image-capability-schema"));
exports.ComputeGlobalImageCapabilitySchema = ComputeGlobalImageCapabilitySchema.ComputeGlobalImageCapabilitySchema;
const ComputeGlobalImageCapabilitySchemaSummary = __importStar(require("./compute-global-image-capability-schema-summary"));
exports.ComputeGlobalImageCapabilitySchemaSummary = ComputeGlobalImageCapabilitySchemaSummary.ComputeGlobalImageCapabilitySchemaSummary;
const ComputeGlobalImageCapabilitySchemaVersion = __importStar(require("./compute-global-image-capability-schema-version"));
exports.ComputeGlobalImageCapabilitySchemaVersion = ComputeGlobalImageCapabilitySchemaVersion.ComputeGlobalImageCapabilitySchemaVersion;
const ComputeGlobalImageCapabilitySchemaVersionSummary = __importStar(require("./compute-global-image-capability-schema-version-summary"));
exports.ComputeGlobalImageCapabilitySchemaVersionSummary = ComputeGlobalImageCapabilitySchemaVersionSummary.ComputeGlobalImageCapabilitySchemaVersionSummary;
const ComputeImageCapabilitySchema = __importStar(require("./compute-image-capability-schema"));
exports.ComputeImageCapabilitySchema = ComputeImageCapabilitySchema.ComputeImageCapabilitySchema;
const ComputeImageCapabilitySchemaSummary = __importStar(require("./compute-image-capability-schema-summary"));
exports.ComputeImageCapabilitySchemaSummary = ComputeImageCapabilitySchemaSummary.ComputeImageCapabilitySchemaSummary;
const ConnectLocalPeeringGatewaysDetails = __importStar(require("./connect-local-peering-gateways-details"));
exports.ConnectLocalPeeringGatewaysDetails = ConnectLocalPeeringGatewaysDetails.ConnectLocalPeeringGatewaysDetails;
const ConnectRemotePeeringConnectionsDetails = __importStar(require("./connect-remote-peering-connections-details"));
exports.ConnectRemotePeeringConnectionsDetails = ConnectRemotePeeringConnectionsDetails.ConnectRemotePeeringConnectionsDetails;
const ConsoleHistory = __importStar(require("./console-history"));
exports.ConsoleHistory = ConsoleHistory.ConsoleHistory;
const CopyBootVolumeBackupDetails = __importStar(require("./copy-boot-volume-backup-details"));
exports.CopyBootVolumeBackupDetails = CopyBootVolumeBackupDetails.CopyBootVolumeBackupDetails;
const CopyVolumeBackupDetails = __importStar(require("./copy-volume-backup-details"));
exports.CopyVolumeBackupDetails = CopyVolumeBackupDetails.CopyVolumeBackupDetails;
const CopyVolumeGroupBackupDetails = __importStar(require("./copy-volume-group-backup-details"));
exports.CopyVolumeGroupBackupDetails = CopyVolumeGroupBackupDetails.CopyVolumeGroupBackupDetails;
const Cpe = __importStar(require("./cpe"));
exports.Cpe = Cpe.Cpe;
const CpeDeviceConfigAnswer = __importStar(require("./cpe-device-config-answer"));
exports.CpeDeviceConfigAnswer = CpeDeviceConfigAnswer.CpeDeviceConfigAnswer;
const CpeDeviceConfigQuestion = __importStar(require("./cpe-device-config-question"));
exports.CpeDeviceConfigQuestion = CpeDeviceConfigQuestion.CpeDeviceConfigQuestion;
const CpeDeviceInfo = __importStar(require("./cpe-device-info"));
exports.CpeDeviceInfo = CpeDeviceInfo.CpeDeviceInfo;
const CpeDeviceShapeDetail = __importStar(require("./cpe-device-shape-detail"));
exports.CpeDeviceShapeDetail = CpeDeviceShapeDetail.CpeDeviceShapeDetail;
const CpeDeviceShapeSummary = __importStar(require("./cpe-device-shape-summary"));
exports.CpeDeviceShapeSummary = CpeDeviceShapeSummary.CpeDeviceShapeSummary;
const CreateAppCatalogSubscriptionDetails = __importStar(require("./create-app-catalog-subscription-details"));
exports.CreateAppCatalogSubscriptionDetails = CreateAppCatalogSubscriptionDetails.CreateAppCatalogSubscriptionDetails;
const CreateBootVolumeBackupDetails = __importStar(require("./create-boot-volume-backup-details"));
exports.CreateBootVolumeBackupDetails = CreateBootVolumeBackupDetails.CreateBootVolumeBackupDetails;
const CreateBootVolumeDetails = __importStar(require("./create-boot-volume-details"));
exports.CreateBootVolumeDetails = CreateBootVolumeDetails.CreateBootVolumeDetails;
const CreateByoipRangeDetails = __importStar(require("./create-byoip-range-details"));
exports.CreateByoipRangeDetails = CreateByoipRangeDetails.CreateByoipRangeDetails;
const CreateCaptureFilterDetails = __importStar(require("./create-capture-filter-details"));
exports.CreateCaptureFilterDetails = CreateCaptureFilterDetails.CreateCaptureFilterDetails;
const CreateClusterNetworkDetails = __importStar(require("./create-cluster-network-details"));
exports.CreateClusterNetworkDetails = CreateClusterNetworkDetails.CreateClusterNetworkDetails;
const CreateClusterNetworkInstancePoolDetails = __importStar(require("./create-cluster-network-instance-pool-details"));
exports.CreateClusterNetworkInstancePoolDetails = CreateClusterNetworkInstancePoolDetails.CreateClusterNetworkInstancePoolDetails;
const CreateComputeCapacityReservationDetails = __importStar(require("./create-compute-capacity-reservation-details"));
exports.CreateComputeCapacityReservationDetails = CreateComputeCapacityReservationDetails.CreateComputeCapacityReservationDetails;
const CreateComputeImageCapabilitySchemaDetails = __importStar(require("./create-compute-image-capability-schema-details"));
exports.CreateComputeImageCapabilitySchemaDetails = CreateComputeImageCapabilitySchemaDetails.CreateComputeImageCapabilitySchemaDetails;
const CreateCpeDetails = __importStar(require("./create-cpe-details"));
exports.CreateCpeDetails = CreateCpeDetails.CreateCpeDetails;
const CreateCrossConnectDetails = __importStar(require("./create-cross-connect-details"));
exports.CreateCrossConnectDetails = CreateCrossConnectDetails.CreateCrossConnectDetails;
const CreateCrossConnectGroupDetails = __importStar(require("./create-cross-connect-group-details"));
exports.CreateCrossConnectGroupDetails = CreateCrossConnectGroupDetails.CreateCrossConnectGroupDetails;
const CreateDedicatedVmHostDetails = __importStar(require("./create-dedicated-vm-host-details"));
exports.CreateDedicatedVmHostDetails = CreateDedicatedVmHostDetails.CreateDedicatedVmHostDetails;
const CreateDhcpDetails = __importStar(require("./create-dhcp-details"));
exports.CreateDhcpDetails = CreateDhcpDetails.CreateDhcpDetails;
const CreateDrgAttachmentDetails = __importStar(require("./create-drg-attachment-details"));
exports.CreateDrgAttachmentDetails = CreateDrgAttachmentDetails.CreateDrgAttachmentDetails;
const CreateDrgDetails = __importStar(require("./create-drg-details"));
exports.CreateDrgDetails = CreateDrgDetails.CreateDrgDetails;
const CreateDrgRouteDistributionDetails = __importStar(require("./create-drg-route-distribution-details"));
exports.CreateDrgRouteDistributionDetails = CreateDrgRouteDistributionDetails.CreateDrgRouteDistributionDetails;
const CreateDrgRouteTableDetails = __importStar(require("./create-drg-route-table-details"));
exports.CreateDrgRouteTableDetails = CreateDrgRouteTableDetails.CreateDrgRouteTableDetails;
const CreateIPSecConnectionDetails = __importStar(require("./create-ip-sec-connection-details"));
exports.CreateIPSecConnectionDetails = CreateIPSecConnectionDetails.CreateIPSecConnectionDetails;
const CreateIPSecConnectionTunnelDetails = __importStar(require("./create-ip-sec-connection-tunnel-details"));
exports.CreateIPSecConnectionTunnelDetails = CreateIPSecConnectionTunnelDetails.CreateIPSecConnectionTunnelDetails;
const CreateIPSecTunnelBgpSessionDetails = __importStar(require("./create-ip-sec-tunnel-bgp-session-details"));
exports.CreateIPSecTunnelBgpSessionDetails = CreateIPSecTunnelBgpSessionDetails.CreateIPSecTunnelBgpSessionDetails;
const CreateIPSecTunnelEncryptionDomainDetails = __importStar(require("./create-ip-sec-tunnel-encryption-domain-details"));
exports.CreateIPSecTunnelEncryptionDomainDetails = CreateIPSecTunnelEncryptionDomainDetails.CreateIPSecTunnelEncryptionDomainDetails;
const CreateImageDetails = __importStar(require("./create-image-details"));
exports.CreateImageDetails = CreateImageDetails.CreateImageDetails;
const CreateInstanceConfigurationBase = __importStar(require("./create-instance-configuration-base"));
exports.CreateInstanceConfigurationBase = CreateInstanceConfigurationBase.CreateInstanceConfigurationBase;
const CreateInstanceConsoleConnectionDetails = __importStar(require("./create-instance-console-connection-details"));
exports.CreateInstanceConsoleConnectionDetails = CreateInstanceConsoleConnectionDetails.CreateInstanceConsoleConnectionDetails;
const CreateInstancePoolDetails = __importStar(require("./create-instance-pool-details"));
exports.CreateInstancePoolDetails = CreateInstancePoolDetails.CreateInstancePoolDetails;
const CreateInstancePoolPlacementConfigurationDetails = __importStar(require("./create-instance-pool-placement-configuration-details"));
exports.CreateInstancePoolPlacementConfigurationDetails = CreateInstancePoolPlacementConfigurationDetails.CreateInstancePoolPlacementConfigurationDetails;
const CreateInternetGatewayDetails = __importStar(require("./create-internet-gateway-details"));
exports.CreateInternetGatewayDetails = CreateInternetGatewayDetails.CreateInternetGatewayDetails;
const CreateIpv6Details = __importStar(require("./create-ipv6-details"));
exports.CreateIpv6Details = CreateIpv6Details.CreateIpv6Details;
const CreateLocalPeeringGatewayDetails = __importStar(require("./create-local-peering-gateway-details"));
exports.CreateLocalPeeringGatewayDetails = CreateLocalPeeringGatewayDetails.CreateLocalPeeringGatewayDetails;
const CreateMacsecKey = __importStar(require("./create-macsec-key"));
exports.CreateMacsecKey = CreateMacsecKey.CreateMacsecKey;
const CreateMacsecProperties = __importStar(require("./create-macsec-properties"));
exports.CreateMacsecProperties = CreateMacsecProperties.CreateMacsecProperties;
const CreateNatGatewayDetails = __importStar(require("./create-nat-gateway-details"));
exports.CreateNatGatewayDetails = CreateNatGatewayDetails.CreateNatGatewayDetails;
const CreateNetworkSecurityGroupDetails = __importStar(require("./create-network-security-group-details"));
exports.CreateNetworkSecurityGroupDetails = CreateNetworkSecurityGroupDetails.CreateNetworkSecurityGroupDetails;
const CreatePrivateIpDetails = __importStar(require("./create-private-ip-details"));
exports.CreatePrivateIpDetails = CreatePrivateIpDetails.CreatePrivateIpDetails;
const CreatePublicIpDetails = __importStar(require("./create-public-ip-details"));
exports.CreatePublicIpDetails = CreatePublicIpDetails.CreatePublicIpDetails;
const CreatePublicIpPoolDetails = __importStar(require("./create-public-ip-pool-details"));
exports.CreatePublicIpPoolDetails = CreatePublicIpPoolDetails.CreatePublicIpPoolDetails;
const CreateRemotePeeringConnectionDetails = __importStar(require("./create-remote-peering-connection-details"));
exports.CreateRemotePeeringConnectionDetails = CreateRemotePeeringConnectionDetails.CreateRemotePeeringConnectionDetails;
const CreateRouteTableDetails = __importStar(require("./create-route-table-details"));
exports.CreateRouteTableDetails = CreateRouteTableDetails.CreateRouteTableDetails;
const CreateSecurityListDetails = __importStar(require("./create-security-list-details"));
exports.CreateSecurityListDetails = CreateSecurityListDetails.CreateSecurityListDetails;
const CreateServiceGatewayDetails = __importStar(require("./create-service-gateway-details"));
exports.CreateServiceGatewayDetails = CreateServiceGatewayDetails.CreateServiceGatewayDetails;
const CreateSubnetDetails = __importStar(require("./create-subnet-details"));
exports.CreateSubnetDetails = CreateSubnetDetails.CreateSubnetDetails;
const CreateVcnDetails = __importStar(require("./create-vcn-details"));
exports.CreateVcnDetails = CreateVcnDetails.CreateVcnDetails;
const CreateVirtualCircuitDetails = __importStar(require("./create-virtual-circuit-details"));
exports.CreateVirtualCircuitDetails = CreateVirtualCircuitDetails.CreateVirtualCircuitDetails;
const CreateVirtualCircuitPublicPrefixDetails = __importStar(require("./create-virtual-circuit-public-prefix-details"));
exports.CreateVirtualCircuitPublicPrefixDetails = CreateVirtualCircuitPublicPrefixDetails.CreateVirtualCircuitPublicPrefixDetails;
const CreateVlanDetails = __importStar(require("./create-vlan-details"));
exports.CreateVlanDetails = CreateVlanDetails.CreateVlanDetails;
const CreateVnicDetails = __importStar(require("./create-vnic-details"));
exports.CreateVnicDetails = CreateVnicDetails.CreateVnicDetails;
const CreateVolumeBackupDetails = __importStar(require("./create-volume-backup-details"));
exports.CreateVolumeBackupDetails = CreateVolumeBackupDetails.CreateVolumeBackupDetails;
const CreateVolumeBackupPolicyAssignmentDetails = __importStar(require("./create-volume-backup-policy-assignment-details"));
exports.CreateVolumeBackupPolicyAssignmentDetails = CreateVolumeBackupPolicyAssignmentDetails.CreateVolumeBackupPolicyAssignmentDetails;
const CreateVolumeBackupPolicyDetails = __importStar(require("./create-volume-backup-policy-details"));
exports.CreateVolumeBackupPolicyDetails = CreateVolumeBackupPolicyDetails.CreateVolumeBackupPolicyDetails;
const CreateVolumeDetails = __importStar(require("./create-volume-details"));
exports.CreateVolumeDetails = CreateVolumeDetails.CreateVolumeDetails;
const CreateVolumeGroupBackupDetails = __importStar(require("./create-volume-group-backup-details"));
exports.CreateVolumeGroupBackupDetails = CreateVolumeGroupBackupDetails.CreateVolumeGroupBackupDetails;
const CreateVolumeGroupDetails = __importStar(require("./create-volume-group-details"));
exports.CreateVolumeGroupDetails = CreateVolumeGroupDetails.CreateVolumeGroupDetails;
const CreateVtapDetails = __importStar(require("./create-vtap-details"));
exports.CreateVtapDetails = CreateVtapDetails.CreateVtapDetails;
const CrossConnect = __importStar(require("./cross-connect"));
exports.CrossConnect = CrossConnect.CrossConnect;
const CrossConnectGroup = __importStar(require("./cross-connect-group"));
exports.CrossConnectGroup = CrossConnectGroup.CrossConnectGroup;
const CrossConnectLocation = __importStar(require("./cross-connect-location"));
exports.CrossConnectLocation = CrossConnectLocation.CrossConnectLocation;
const CrossConnectMapping = __importStar(require("./cross-connect-mapping"));
exports.CrossConnectMapping = CrossConnectMapping.CrossConnectMapping;
const CrossConnectMappingDetails = __importStar(require("./cross-connect-mapping-details"));
exports.CrossConnectMappingDetails = CrossConnectMappingDetails.CrossConnectMappingDetails;
const CrossConnectMappingDetailsCollection = __importStar(require("./cross-connect-mapping-details-collection"));
exports.CrossConnectMappingDetailsCollection = CrossConnectMappingDetailsCollection.CrossConnectMappingDetailsCollection;
const CrossConnectPortSpeedShape = __importStar(require("./cross-connect-port-speed-shape"));
exports.CrossConnectPortSpeedShape = CrossConnectPortSpeedShape.CrossConnectPortSpeedShape;
const CrossConnectStatus = __importStar(require("./cross-connect-status"));
exports.CrossConnectStatus = CrossConnectStatus.CrossConnectStatus;
const DedicatedVmHost = __importStar(require("./dedicated-vm-host"));
exports.DedicatedVmHost = DedicatedVmHost.DedicatedVmHost;
const DedicatedVmHostInstanceShapeSummary = __importStar(require("./dedicated-vm-host-instance-shape-summary"));
exports.DedicatedVmHostInstanceShapeSummary = DedicatedVmHostInstanceShapeSummary.DedicatedVmHostInstanceShapeSummary;
const DedicatedVmHostInstanceSummary = __importStar(require("./dedicated-vm-host-instance-summary"));
exports.DedicatedVmHostInstanceSummary = DedicatedVmHostInstanceSummary.DedicatedVmHostInstanceSummary;
const DedicatedVmHostShapeSummary = __importStar(require("./dedicated-vm-host-shape-summary"));
exports.DedicatedVmHostShapeSummary = DedicatedVmHostShapeSummary.DedicatedVmHostShapeSummary;
const DedicatedVmHostSummary = __importStar(require("./dedicated-vm-host-summary"));
exports.DedicatedVmHostSummary = DedicatedVmHostSummary.DedicatedVmHostSummary;
const DefaultDrgRouteTables = __importStar(require("./default-drg-route-tables"));
exports.DefaultDrgRouteTables = DefaultDrgRouteTables.DefaultDrgRouteTables;
const DefaultPhaseOneParameters = __importStar(require("./default-phase-one-parameters"));
exports.DefaultPhaseOneParameters = DefaultPhaseOneParameters.DefaultPhaseOneParameters;
const DefaultPhaseTwoParameters = __importStar(require("./default-phase-two-parameters"));
exports.DefaultPhaseTwoParameters = DefaultPhaseTwoParameters.DefaultPhaseTwoParameters;
const DeleteVirtualCircuitPublicPrefixDetails = __importStar(require("./delete-virtual-circuit-public-prefix-details"));
exports.DeleteVirtualCircuitPublicPrefixDetails = DeleteVirtualCircuitPublicPrefixDetails.DeleteVirtualCircuitPublicPrefixDetails;
const DetachInstancePoolInstanceDetails = __importStar(require("./detach-instance-pool-instance-details"));
exports.DetachInstancePoolInstanceDetails = DetachInstancePoolInstanceDetails.DetachInstancePoolInstanceDetails;
const DetachLoadBalancerDetails = __importStar(require("./detach-load-balancer-details"));
exports.DetachLoadBalancerDetails = DetachLoadBalancerDetails.DetachLoadBalancerDetails;
const Device = __importStar(require("./device"));
exports.Device = Device.Device;
const DhcpOption = __importStar(require("./dhcp-option"));
exports.DhcpOption = DhcpOption.DhcpOption;
const DhcpOptions = __importStar(require("./dhcp-options"));
exports.DhcpOptions = DhcpOptions.DhcpOptions;
const DpdConfig = __importStar(require("./dpd-config"));
exports.DpdConfig = DpdConfig.DpdConfig;
const Drg = __importStar(require("./drg"));
exports.Drg = Drg.Drg;
const DrgAttachment = __importStar(require("./drg-attachment"));
exports.DrgAttachment = DrgAttachment.DrgAttachment;
const DrgAttachmentInfo = __importStar(require("./drg-attachment-info"));
exports.DrgAttachmentInfo = DrgAttachmentInfo.DrgAttachmentInfo;
const DrgAttachmentNetworkCreateDetails = __importStar(require("./drg-attachment-network-create-details"));
exports.DrgAttachmentNetworkCreateDetails = DrgAttachmentNetworkCreateDetails.DrgAttachmentNetworkCreateDetails;
const DrgAttachmentNetworkDetails = __importStar(require("./drg-attachment-network-details"));
exports.DrgAttachmentNetworkDetails = DrgAttachmentNetworkDetails.DrgAttachmentNetworkDetails;
const DrgAttachmentNetworkUpdateDetails = __importStar(require("./drg-attachment-network-update-details"));
exports.DrgAttachmentNetworkUpdateDetails = DrgAttachmentNetworkUpdateDetails.DrgAttachmentNetworkUpdateDetails;
const DrgRedundancyStatus = __importStar(require("./drg-redundancy-status"));
exports.DrgRedundancyStatus = DrgRedundancyStatus.DrgRedundancyStatus;
const DrgRouteDistribution = __importStar(require("./drg-route-distribution"));
exports.DrgRouteDistribution = DrgRouteDistribution.DrgRouteDistribution;
const DrgRouteDistributionMatchCriteria = __importStar(require("./drg-route-distribution-match-criteria"));
exports.DrgRouteDistributionMatchCriteria = DrgRouteDistributionMatchCriteria.DrgRouteDistributionMatchCriteria;
const DrgRouteDistributionStatement = __importStar(require("./drg-route-distribution-statement"));
exports.DrgRouteDistributionStatement = DrgRouteDistributionStatement.DrgRouteDistributionStatement;
const DrgRouteRule = __importStar(require("./drg-route-rule"));
exports.DrgRouteRule = DrgRouteRule.DrgRouteRule;
const DrgRouteTable = __importStar(require("./drg-route-table"));
exports.DrgRouteTable = DrgRouteTable.DrgRouteTable;
const EgressSecurityRule = __importStar(require("./egress-security-rule"));
exports.EgressSecurityRule = EgressSecurityRule.EgressSecurityRule;
const EncryptionDomainConfig = __importStar(require("./encryption-domain-config"));
exports.EncryptionDomainConfig = EncryptionDomainConfig.EncryptionDomainConfig;
const EncryptionInTransitType = __importStar(require("./encryption-in-transit-type"));
exports.EncryptionInTransitType = EncryptionInTransitType.EncryptionInTransitType;
const ExportImageDetails = __importStar(require("./export-image-details"));
exports.ExportImageDetails = ExportImageDetails.ExportImageDetails;
const FastConnectProviderService = __importStar(require("./fast-connect-provider-service"));
exports.FastConnectProviderService = FastConnectProviderService.FastConnectProviderService;
const FastConnectProviderServiceKey = __importStar(require("./fast-connect-provider-service-key"));
exports.FastConnectProviderServiceKey = FastConnectProviderServiceKey.FastConnectProviderServiceKey;
const GetPublicIpByIpAddressDetails = __importStar(require("./get-public-ip-by-ip-address-details"));
exports.GetPublicIpByIpAddressDetails = GetPublicIpByIpAddressDetails.GetPublicIpByIpAddressDetails;
const GetPublicIpByPrivateIpIdDetails = __importStar(require("./get-public-ip-by-private-ip-id-details"));
exports.GetPublicIpByPrivateIpIdDetails = GetPublicIpByPrivateIpIdDetails.GetPublicIpByPrivateIpIdDetails;
const IPSecConnection = __importStar(require("./i-psec-connection"));
exports.IPSecConnection = IPSecConnection.IPSecConnection;
const IPSecConnectionDeviceConfig = __importStar(require("./i-psec-connection-device-config"));
exports.IPSecConnectionDeviceConfig = IPSecConnectionDeviceConfig.IPSecConnectionDeviceConfig;
const IPSecConnectionDeviceStatus = __importStar(require("./i-psec-connection-device-status"));
exports.IPSecConnectionDeviceStatus = IPSecConnectionDeviceStatus.IPSecConnectionDeviceStatus;
const IPSecConnectionTunnel = __importStar(require("./i-psec-connection-tunnel"));
exports.IPSecConnectionTunnel = IPSecConnectionTunnel.IPSecConnectionTunnel;
const IPSecConnectionTunnelErrorDetails = __importStar(require("./i-psec-connection-tunnel-error-details"));
exports.IPSecConnectionTunnelErrorDetails = IPSecConnectionTunnelErrorDetails.IPSecConnectionTunnelErrorDetails;
const IPSecConnectionTunnelSharedSecret = __importStar(require("./i-psec-connection-tunnel-shared-secret"));
exports.IPSecConnectionTunnelSharedSecret = IPSecConnectionTunnelSharedSecret.IPSecConnectionTunnelSharedSecret;
const IcmpOptions = __importStar(require("./icmp-options"));
exports.IcmpOptions = IcmpOptions.IcmpOptions;
const Image = __importStar(require("./image"));
exports.Image = Image.Image;
const ImageCapabilitySchemaDescriptor = __importStar(require("./image-capability-schema-descriptor"));
exports.ImageCapabilitySchemaDescriptor = ImageCapabilitySchemaDescriptor.ImageCapabilitySchemaDescriptor;
const ImageMemoryConstraints = __importStar(require("./image-memory-constraints"));
exports.ImageMemoryConstraints = ImageMemoryConstraints.ImageMemoryConstraints;
const ImageOcpuConstraints = __importStar(require("./image-ocpu-constraints"));
exports.ImageOcpuConstraints = ImageOcpuConstraints.ImageOcpuConstraints;
const ImageShapeCompatibilityEntry = __importStar(require("./image-shape-compatibility-entry"));
exports.ImageShapeCompatibilityEntry = ImageShapeCompatibilityEntry.ImageShapeCompatibilityEntry;
const ImageShapeCompatibilitySummary = __importStar(require("./image-shape-compatibility-summary"));
exports.ImageShapeCompatibilitySummary = ImageShapeCompatibilitySummary.ImageShapeCompatibilitySummary;
const ImageSourceDetails = __importStar(require("./image-source-details"));
exports.ImageSourceDetails = ImageSourceDetails.ImageSourceDetails;
const IngressSecurityRule = __importStar(require("./ingress-security-rule"));
exports.IngressSecurityRule = IngressSecurityRule.IngressSecurityRule;
const Instance = __importStar(require("./instance"));
exports.Instance = Instance.Instance;
const InstanceAgentConfig = __importStar(require("./instance-agent-config"));
exports.InstanceAgentConfig = InstanceAgentConfig.InstanceAgentConfig;
const InstanceAgentFeatures = __importStar(require("./instance-agent-features"));
exports.InstanceAgentFeatures = InstanceAgentFeatures.InstanceAgentFeatures;
const InstanceAgentPluginConfigDetails = __importStar(require("./instance-agent-plugin-config-details"));
exports.InstanceAgentPluginConfigDetails = InstanceAgentPluginConfigDetails.InstanceAgentPluginConfigDetails;
const InstanceAvailabilityConfig = __importStar(require("./instance-availability-config"));
exports.InstanceAvailabilityConfig = InstanceAvailabilityConfig.InstanceAvailabilityConfig;
const InstanceConfiguration = __importStar(require("./instance-configuration"));
exports.InstanceConfiguration = InstanceConfiguration.InstanceConfiguration;
const InstanceConfigurationAttachVnicDetails = __importStar(require("./instance-configuration-attach-vnic-details"));
exports.InstanceConfigurationAttachVnicDetails = InstanceConfigurationAttachVnicDetails.InstanceConfigurationAttachVnicDetails;
const InstanceConfigurationAttachVolumeDetails = __importStar(require("./instance-configuration-attach-volume-details"));
exports.InstanceConfigurationAttachVolumeDetails = InstanceConfigurationAttachVolumeDetails.InstanceConfigurationAttachVolumeDetails;
const InstanceConfigurationAvailabilityConfig = __importStar(require("./instance-configuration-availability-config"));
exports.InstanceConfigurationAvailabilityConfig = InstanceConfigurationAvailabilityConfig.InstanceConfigurationAvailabilityConfig;
const InstanceConfigurationBlockVolumeDetails = __importStar(require("./instance-configuration-block-volume-details"));
exports.InstanceConfigurationBlockVolumeDetails = InstanceConfigurationBlockVolumeDetails.InstanceConfigurationBlockVolumeDetails;
const InstanceConfigurationCreateVnicDetails = __importStar(require("./instance-configuration-create-vnic-details"));
exports.InstanceConfigurationCreateVnicDetails = InstanceConfigurationCreateVnicDetails.InstanceConfigurationCreateVnicDetails;
const InstanceConfigurationCreateVolumeDetails = __importStar(require("./instance-configuration-create-volume-details"));
exports.InstanceConfigurationCreateVolumeDetails = InstanceConfigurationCreateVolumeDetails.InstanceConfigurationCreateVolumeDetails;
const InstanceConfigurationInstanceDetails = __importStar(require("./instance-configuration-instance-details"));
exports.InstanceConfigurationInstanceDetails = InstanceConfigurationInstanceDetails.InstanceConfigurationInstanceDetails;
const InstanceConfigurationInstanceOptions = __importStar(require("./instance-configuration-instance-options"));
exports.InstanceConfigurationInstanceOptions = InstanceConfigurationInstanceOptions.InstanceConfigurationInstanceOptions;
const InstanceConfigurationInstanceSourceDetails = __importStar(require("./instance-configuration-instance-source-details"));
exports.InstanceConfigurationInstanceSourceDetails = InstanceConfigurationInstanceSourceDetails.InstanceConfigurationInstanceSourceDetails;
const InstanceConfigurationLaunchInstanceAgentConfigDetails = __importStar(require("./instance-configuration-launch-instance-agent-config-details"));
exports.InstanceConfigurationLaunchInstanceAgentConfigDetails = InstanceConfigurationLaunchInstanceAgentConfigDetails.InstanceConfigurationLaunchInstanceAgentConfigDetails;
const InstanceConfigurationLaunchInstanceDetails = __importStar(require("./instance-configuration-launch-instance-details"));
exports.InstanceConfigurationLaunchInstanceDetails = InstanceConfigurationLaunchInstanceDetails.InstanceConfigurationLaunchInstanceDetails;
const InstanceConfigurationLaunchInstancePlatformConfig = __importStar(require("./instance-configuration-launch-instance-platform-config"));
exports.InstanceConfigurationLaunchInstancePlatformConfig = InstanceConfigurationLaunchInstancePlatformConfig.InstanceConfigurationLaunchInstancePlatformConfig;
const InstanceConfigurationLaunchInstanceShapeConfigDetails = __importStar(require("./instance-configuration-launch-instance-shape-config-details"));
exports.InstanceConfigurationLaunchInstanceShapeConfigDetails = InstanceConfigurationLaunchInstanceShapeConfigDetails.InstanceConfigurationLaunchInstanceShapeConfigDetails;
const InstanceConfigurationLaunchOptions = __importStar(require("./instance-configuration-launch-options"));
exports.InstanceConfigurationLaunchOptions = InstanceConfigurationLaunchOptions.InstanceConfigurationLaunchOptions;
const InstanceConfigurationSummary = __importStar(require("./instance-configuration-summary"));
exports.InstanceConfigurationSummary = InstanceConfigurationSummary.InstanceConfigurationSummary;
const InstanceConfigurationVolumeSourceDetails = __importStar(require("./instance-configuration-volume-source-details"));
exports.InstanceConfigurationVolumeSourceDetails = InstanceConfigurationVolumeSourceDetails.InstanceConfigurationVolumeSourceDetails;
const InstanceConsoleConnection = __importStar(require("./instance-console-connection"));
exports.InstanceConsoleConnection = InstanceConsoleConnection.InstanceConsoleConnection;
const InstanceCredentials = __importStar(require("./instance-credentials"));
exports.InstanceCredentials = InstanceCredentials.InstanceCredentials;
const InstanceOptions = __importStar(require("./instance-options"));
exports.InstanceOptions = InstanceOptions.InstanceOptions;
const InstancePool = __importStar(require("./instance-pool"));
exports.InstancePool = InstancePool.InstancePool;
const InstancePoolInstance = __importStar(require("./instance-pool-instance"));
exports.InstancePoolInstance = InstancePoolInstance.InstancePoolInstance;
const InstancePoolInstanceLoadBalancerBackend = __importStar(require("./instance-pool-instance-load-balancer-backend"));
exports.InstancePoolInstanceLoadBalancerBackend = InstancePoolInstanceLoadBalancerBackend.InstancePoolInstanceLoadBalancerBackend;
const InstancePoolLoadBalancerAttachment = __importStar(require("./instance-pool-load-balancer-attachment"));
exports.InstancePoolLoadBalancerAttachment = InstancePoolLoadBalancerAttachment.InstancePoolLoadBalancerAttachment;
const InstancePoolPlacementConfiguration = __importStar(require("./instance-pool-placement-configuration"));
exports.InstancePoolPlacementConfiguration = InstancePoolPlacementConfiguration.InstancePoolPlacementConfiguration;
const InstancePoolPlacementSecondaryVnicSubnet = __importStar(require("./instance-pool-placement-secondary-vnic-subnet"));
exports.InstancePoolPlacementSecondaryVnicSubnet = InstancePoolPlacementSecondaryVnicSubnet.InstancePoolPlacementSecondaryVnicSubnet;
const InstancePoolSummary = __importStar(require("./instance-pool-summary"));
exports.InstancePoolSummary = InstancePoolSummary.InstancePoolSummary;
const InstancePowerActionDetails = __importStar(require("./instance-power-action-details"));
exports.InstancePowerActionDetails = InstancePowerActionDetails.InstancePowerActionDetails;
const InstanceReservationConfig = __importStar(require("./instance-reservation-config"));
exports.InstanceReservationConfig = InstanceReservationConfig.InstanceReservationConfig;
const InstanceReservationConfigDetails = __importStar(require("./instance-reservation-config-details"));
exports.InstanceReservationConfigDetails = InstanceReservationConfigDetails.InstanceReservationConfigDetails;
const InstanceReservationShapeConfigDetails = __importStar(require("./instance-reservation-shape-config-details"));
exports.InstanceReservationShapeConfigDetails = InstanceReservationShapeConfigDetails.InstanceReservationShapeConfigDetails;
const InstanceShapeConfig = __importStar(require("./instance-shape-config"));
exports.InstanceShapeConfig = InstanceShapeConfig.InstanceShapeConfig;
const InstanceSourceDetails = __importStar(require("./instance-source-details"));
exports.InstanceSourceDetails = InstanceSourceDetails.InstanceSourceDetails;
const InstanceSummary = __importStar(require("./instance-summary"));
exports.InstanceSummary = InstanceSummary.InstanceSummary;
const InternetGateway = __importStar(require("./internet-gateway"));
exports.InternetGateway = InternetGateway.InternetGateway;
const Ipv6 = __importStar(require("./ipv6"));
exports.Ipv6 = Ipv6.Ipv6;
const LaunchInstanceAgentConfigDetails = __importStar(require("./launch-instance-agent-config-details"));
exports.LaunchInstanceAgentConfigDetails = LaunchInstanceAgentConfigDetails.LaunchInstanceAgentConfigDetails;
const LaunchInstanceAvailabilityConfigDetails = __importStar(require("./launch-instance-availability-config-details"));
exports.LaunchInstanceAvailabilityConfigDetails = LaunchInstanceAvailabilityConfigDetails.LaunchInstanceAvailabilityConfigDetails;
const LaunchInstanceDetails = __importStar(require("./launch-instance-details"));
exports.LaunchInstanceDetails = LaunchInstanceDetails.LaunchInstanceDetails;
const LaunchInstancePlatformConfig = __importStar(require("./launch-instance-platform-config"));
exports.LaunchInstancePlatformConfig = LaunchInstancePlatformConfig.LaunchInstancePlatformConfig;
const LaunchInstanceShapeConfigDetails = __importStar(require("./launch-instance-shape-config-details"));
exports.LaunchInstanceShapeConfigDetails = LaunchInstanceShapeConfigDetails.LaunchInstanceShapeConfigDetails;
const LaunchOptions = __importStar(require("./launch-options"));
exports.LaunchOptions = LaunchOptions.LaunchOptions;
const LetterOfAuthority = __importStar(require("./letter-of-authority"));
exports.LetterOfAuthority = LetterOfAuthority.LetterOfAuthority;
const LocalPeeringGateway = __importStar(require("./local-peering-gateway"));
exports.LocalPeeringGateway = LocalPeeringGateway.LocalPeeringGateway;
const MacsecEncryptionCipher = __importStar(require("./macsec-encryption-cipher"));
exports.MacsecEncryptionCipher = MacsecEncryptionCipher.MacsecEncryptionCipher;
const MacsecKey = __importStar(require("./macsec-key"));
exports.MacsecKey = MacsecKey.MacsecKey;
const MacsecProperties = __importStar(require("./macsec-properties"));
exports.MacsecProperties = MacsecProperties.MacsecProperties;
const MacsecState = __importStar(require("./macsec-state"));
exports.MacsecState = MacsecState.MacsecState;
const MeasuredBootEntry = __importStar(require("./measured-boot-entry"));
exports.MeasuredBootEntry = MeasuredBootEntry.MeasuredBootEntry;
const MeasuredBootReport = __importStar(require("./measured-boot-report"));
exports.MeasuredBootReport = MeasuredBootReport.MeasuredBootReport;
const MeasuredBootReportMeasurements = __importStar(require("./measured-boot-report-measurements"));
exports.MeasuredBootReportMeasurements = MeasuredBootReportMeasurements.MeasuredBootReportMeasurements;
const MemberReplica = __importStar(require("./member-replica"));
exports.MemberReplica = MemberReplica.MemberReplica;
const ModifyVcnCidrDetails = __importStar(require("./modify-vcn-cidr-details"));
exports.ModifyVcnCidrDetails = ModifyVcnCidrDetails.ModifyVcnCidrDetails;
const MultipathDevice = __importStar(require("./multipath-device"));
exports.MultipathDevice = MultipathDevice.MultipathDevice;
const NatGateway = __importStar(require("./nat-gateway"));
exports.NatGateway = NatGateway.NatGateway;
const NetworkSecurityGroup = __importStar(require("./network-security-group"));
exports.NetworkSecurityGroup = NetworkSecurityGroup.NetworkSecurityGroup;
const NetworkSecurityGroupVnic = __importStar(require("./network-security-group-vnic"));
exports.NetworkSecurityGroupVnic = NetworkSecurityGroupVnic.NetworkSecurityGroupVnic;
const PeerRegionForRemotePeering = __importStar(require("./peer-region-for-remote-peering"));
exports.PeerRegionForRemotePeering = PeerRegionForRemotePeering.PeerRegionForRemotePeering;
const PercentageOfCoresEnabledOptions = __importStar(require("./percentage-of-cores-enabled-options"));
exports.PercentageOfCoresEnabledOptions = PercentageOfCoresEnabledOptions.PercentageOfCoresEnabledOptions;
const PhaseOneConfigDetails = __importStar(require("./phase-one-config-details"));
exports.PhaseOneConfigDetails = PhaseOneConfigDetails.PhaseOneConfigDetails;
const PhaseTwoConfigDetails = __importStar(require("./phase-two-config-details"));
exports.PhaseTwoConfigDetails = PhaseTwoConfigDetails.PhaseTwoConfigDetails;
const PlatformConfig = __importStar(require("./platform-config"));
exports.PlatformConfig = PlatformConfig.PlatformConfig;
const PortRange = __importStar(require("./port-range"));
exports.PortRange = PortRange.PortRange;
const PreemptibleInstanceConfigDetails = __importStar(require("./preemptible-instance-config-details"));
exports.PreemptibleInstanceConfigDetails = PreemptibleInstanceConfigDetails.PreemptibleInstanceConfigDetails;
const PreemptionAction = __importStar(require("./preemption-action"));
exports.PreemptionAction = PreemptionAction.PreemptionAction;
const PrivateIp = __importStar(require("./private-ip"));
exports.PrivateIp = PrivateIp.PrivateIp;
const PublicIp = __importStar(require("./public-ip"));
exports.PublicIp = PublicIp.PublicIp;
const PublicIpPool = __importStar(require("./public-ip-pool"));
exports.PublicIpPool = PublicIpPool.PublicIpPool;
const PublicIpPoolCollection = __importStar(require("./public-ip-pool-collection"));
exports.PublicIpPoolCollection = PublicIpPoolCollection.PublicIpPoolCollection;
const PublicIpPoolSummary = __importStar(require("./public-ip-pool-summary"));
exports.PublicIpPoolSummary = PublicIpPoolSummary.PublicIpPoolSummary;
const RemotePeeringConnection = __importStar(require("./remote-peering-connection"));
exports.RemotePeeringConnection = RemotePeeringConnection.RemotePeeringConnection;
const RemoveDrgRouteDistributionStatementsDetails = __importStar(require("./remove-drg-route-distribution-statements-details"));
exports.RemoveDrgRouteDistributionStatementsDetails = RemoveDrgRouteDistributionStatementsDetails.RemoveDrgRouteDistributionStatementsDetails;
const RemoveDrgRouteRulesDetails = __importStar(require("./remove-drg-route-rules-details"));
exports.RemoveDrgRouteRulesDetails = RemoveDrgRouteRulesDetails.RemoveDrgRouteRulesDetails;
const RemoveNetworkSecurityGroupSecurityRulesDetails = __importStar(require("./remove-network-security-group-security-rules-details"));
exports.RemoveNetworkSecurityGroupSecurityRulesDetails = RemoveNetworkSecurityGroupSecurityRulesDetails.RemoveNetworkSecurityGroupSecurityRulesDetails;
const RemovePublicIpPoolCapacityDetails = __importStar(require("./remove-public-ip-pool-capacity-details"));
exports.RemovePublicIpPoolCapacityDetails = RemovePublicIpPoolCapacityDetails.RemovePublicIpPoolCapacityDetails;
const RemoveSubnetIpv6CidrDetails = __importStar(require("./remove-subnet-ipv6-cidr-details"));
exports.RemoveSubnetIpv6CidrDetails = RemoveSubnetIpv6CidrDetails.RemoveSubnetIpv6CidrDetails;
const RemoveVcnCidrDetails = __importStar(require("./remove-vcn-cidr-details"));
exports.RemoveVcnCidrDetails = RemoveVcnCidrDetails.RemoveVcnCidrDetails;
const RemoveVcnIpv6CidrDetails = __importStar(require("./remove-vcn-ipv6-cidr-details"));
exports.RemoveVcnIpv6CidrDetails = RemoveVcnIpv6CidrDetails.RemoveVcnIpv6CidrDetails;
const RouteRule = __importStar(require("./route-rule"));
exports.RouteRule = RouteRule.RouteRule;
const RouteTable = __importStar(require("./route-table"));
exports.RouteTable = RouteTable.RouteTable;
const SecurityList = __importStar(require("./security-list"));
exports.SecurityList = SecurityList.SecurityList;
const SecurityRule = __importStar(require("./security-rule"));
exports.SecurityRule = SecurityRule.SecurityRule;
const Service = __importStar(require("./service"));
exports.Service = Service.Service;
const ServiceGateway = __importStar(require("./service-gateway"));
exports.ServiceGateway = ServiceGateway.ServiceGateway;
const ServiceIdRequestDetails = __importStar(require("./service-id-request-details"));
exports.ServiceIdRequestDetails = ServiceIdRequestDetails.ServiceIdRequestDetails;
const ServiceIdResponseDetails = __importStar(require("./service-id-response-details"));
exports.ServiceIdResponseDetails = ServiceIdResponseDetails.ServiceIdResponseDetails;
const Shape = __importStar(require("./shape"));
exports.Shape = Shape.Shape;
const ShapeAccessControlServiceEnabledPlatformOptions = __importStar(require("./shape-access-control-service-enabled-platform-options"));
exports.ShapeAccessControlServiceEnabledPlatformOptions = ShapeAccessControlServiceEnabledPlatformOptions.ShapeAccessControlServiceEnabledPlatformOptions;
const ShapeAlternativeObject = __importStar(require("./shape-alternative-object"));
exports.ShapeAlternativeObject = ShapeAlternativeObject.ShapeAlternativeObject;
const ShapeInputOutputMemoryManagementUnitEnabledPlatformOptions = __importStar(require("./shape-input-output-memory-management-unit-enabled-platform-options"));
exports.ShapeInputOutputMemoryManagementUnitEnabledPlatformOptions = ShapeInputOutputMemoryManagementUnitEnabledPlatformOptions.ShapeInputOutputMemoryManagementUnitEnabledPlatformOptions;
const ShapeMaxVnicAttachmentOptions = __importStar(require("./shape-max-vnic-attachment-options"));
exports.ShapeMaxVnicAttachmentOptions = ShapeMaxVnicAttachmentOptions.ShapeMaxVnicAttachmentOptions;
const ShapeMeasuredBootOptions = __importStar(require("./shape-measured-boot-options"));
exports.ShapeMeasuredBootOptions = ShapeMeasuredBootOptions.ShapeMeasuredBootOptions;
const ShapeMemoryOptions = __importStar(require("./shape-memory-options"));
exports.ShapeMemoryOptions = ShapeMemoryOptions.ShapeMemoryOptions;
const ShapeNetworkingBandwidthOptions = __importStar(require("./shape-networking-bandwidth-options"));
exports.ShapeNetworkingBandwidthOptions = ShapeNetworkingBandwidthOptions.ShapeNetworkingBandwidthOptions;
const ShapeNumaNodesPerSocketPlatformOptions = __importStar(require("./shape-numa-nodes-per-socket-platform-options"));
exports.ShapeNumaNodesPerSocketPlatformOptions = ShapeNumaNodesPerSocketPlatformOptions.ShapeNumaNodesPerSocketPlatformOptions;
const ShapeOcpuOptions = __importStar(require("./shape-ocpu-options"));
exports.ShapeOcpuOptions = ShapeOcpuOptions.ShapeOcpuOptions;
const ShapePlatformConfigOptions = __importStar(require("./shape-platform-config-options"));
exports.ShapePlatformConfigOptions = ShapePlatformConfigOptions.ShapePlatformConfigOptions;
const ShapeSecureBootOptions = __importStar(require("./shape-secure-boot-options"));
exports.ShapeSecureBootOptions = ShapeSecureBootOptions.ShapeSecureBootOptions;
const ShapeSymmetricMultiThreadingEnabledPlatformOptions = __importStar(require("./shape-symmetric-multi-threading-enabled-platform-options"));
exports.ShapeSymmetricMultiThreadingEnabledPlatformOptions = ShapeSymmetricMultiThreadingEnabledPlatformOptions.ShapeSymmetricMultiThreadingEnabledPlatformOptions;
const ShapeTrustedPlatformModuleOptions = __importStar(require("./shape-trusted-platform-module-options"));
exports.ShapeTrustedPlatformModuleOptions = ShapeTrustedPlatformModuleOptions.ShapeTrustedPlatformModuleOptions;
const ShapeVirtualInstructionsEnabledPlatformOptions = __importStar(require("./shape-virtual-instructions-enabled-platform-options"));
exports.ShapeVirtualInstructionsEnabledPlatformOptions = ShapeVirtualInstructionsEnabledPlatformOptions.ShapeVirtualInstructionsEnabledPlatformOptions;
const Subnet = __importStar(require("./subnet"));
exports.Subnet = Subnet.Subnet;
const TcpOptions = __importStar(require("./tcp-options"));
exports.TcpOptions = TcpOptions.TcpOptions;
const Topology = __importStar(require("./topology"));
exports.Topology = Topology.Topology;
const TopologyAssociatedWithRelationshipDetails = __importStar(require("./topology-associated-with-relationship-details"));
exports.TopologyAssociatedWithRelationshipDetails = TopologyAssociatedWithRelationshipDetails.TopologyAssociatedWithRelationshipDetails;
const TopologyEntityRelationship = __importStar(require("./topology-entity-relationship"));
exports.TopologyEntityRelationship = TopologyEntityRelationship.TopologyEntityRelationship;
const TopologyRoutesToRelationshipDetails = __importStar(require("./topology-routes-to-relationship-details"));
exports.TopologyRoutesToRelationshipDetails = TopologyRoutesToRelationshipDetails.TopologyRoutesToRelationshipDetails;
const TunnelConfig = __importStar(require("./tunnel-config"));
exports.TunnelConfig = TunnelConfig.TunnelConfig;
const TunnelCpeDeviceConfig = __importStar(require("./tunnel-cpe-device-config"));
exports.TunnelCpeDeviceConfig = TunnelCpeDeviceConfig.TunnelCpeDeviceConfig;
const TunnelPhaseOneDetails = __importStar(require("./tunnel-phase-one-details"));
exports.TunnelPhaseOneDetails = TunnelPhaseOneDetails.TunnelPhaseOneDetails;
const TunnelPhaseTwoDetails = __importStar(require("./tunnel-phase-two-details"));
exports.TunnelPhaseTwoDetails = TunnelPhaseTwoDetails.TunnelPhaseTwoDetails;
const TunnelRouteSummary = __importStar(require("./tunnel-route-summary"));
exports.TunnelRouteSummary = TunnelRouteSummary.TunnelRouteSummary;
const TunnelSecurityAssociationSummary = __importStar(require("./tunnel-security-association-summary"));
exports.TunnelSecurityAssociationSummary = TunnelSecurityAssociationSummary.TunnelSecurityAssociationSummary;
const TunnelStatus = __importStar(require("./tunnel-status"));
exports.TunnelStatus = TunnelStatus.TunnelStatus;
const UdpOptions = __importStar(require("./udp-options"));
exports.UdpOptions = UdpOptions.UdpOptions;
const UpdateBootVolumeBackupDetails = __importStar(require("./update-boot-volume-backup-details"));
exports.UpdateBootVolumeBackupDetails = UpdateBootVolumeBackupDetails.UpdateBootVolumeBackupDetails;
const UpdateBootVolumeDetails = __importStar(require("./update-boot-volume-details"));
exports.UpdateBootVolumeDetails = UpdateBootVolumeDetails.UpdateBootVolumeDetails;
const UpdateBootVolumeKmsKeyDetails = __importStar(require("./update-boot-volume-kms-key-details"));
exports.UpdateBootVolumeKmsKeyDetails = UpdateBootVolumeKmsKeyDetails.UpdateBootVolumeKmsKeyDetails;
const UpdateByoipRangeDetails = __importStar(require("./update-byoip-range-details"));
exports.UpdateByoipRangeDetails = UpdateByoipRangeDetails.UpdateByoipRangeDetails;
const UpdateCaptureFilterDetails = __importStar(require("./update-capture-filter-details"));
exports.UpdateCaptureFilterDetails = UpdateCaptureFilterDetails.UpdateCaptureFilterDetails;
const UpdateClusterNetworkDetails = __importStar(require("./update-cluster-network-details"));
exports.UpdateClusterNetworkDetails = UpdateClusterNetworkDetails.UpdateClusterNetworkDetails;
const UpdateClusterNetworkInstancePoolDetails = __importStar(require("./update-cluster-network-instance-pool-details"));
exports.UpdateClusterNetworkInstancePoolDetails = UpdateClusterNetworkInstancePoolDetails.UpdateClusterNetworkInstancePoolDetails;
const UpdateComputeCapacityReservationDetails = __importStar(require("./update-compute-capacity-reservation-details"));
exports.UpdateComputeCapacityReservationDetails = UpdateComputeCapacityReservationDetails.UpdateComputeCapacityReservationDetails;
const UpdateComputeImageCapabilitySchemaDetails = __importStar(require("./update-compute-image-capability-schema-details"));
exports.UpdateComputeImageCapabilitySchemaDetails = UpdateComputeImageCapabilitySchemaDetails.UpdateComputeImageCapabilitySchemaDetails;
const UpdateConsoleHistoryDetails = __importStar(require("./update-console-history-details"));
exports.UpdateConsoleHistoryDetails = UpdateConsoleHistoryDetails.UpdateConsoleHistoryDetails;
const UpdateCpeDetails = __importStar(require("./update-cpe-details"));
exports.UpdateCpeDetails = UpdateCpeDetails.UpdateCpeDetails;
const UpdateCrossConnectDetails = __importStar(require("./update-cross-connect-details"));
exports.UpdateCrossConnectDetails = UpdateCrossConnectDetails.UpdateCrossConnectDetails;
const UpdateCrossConnectGroupDetails = __importStar(require("./update-cross-connect-group-details"));
exports.UpdateCrossConnectGroupDetails = UpdateCrossConnectGroupDetails.UpdateCrossConnectGroupDetails;
const UpdateDedicatedVmHostDetails = __importStar(require("./update-dedicated-vm-host-details"));
exports.UpdateDedicatedVmHostDetails = UpdateDedicatedVmHostDetails.UpdateDedicatedVmHostDetails;
const UpdateDhcpDetails = __importStar(require("./update-dhcp-details"));
exports.UpdateDhcpDetails = UpdateDhcpDetails.UpdateDhcpDetails;
const UpdateDrgAttachmentDetails = __importStar(require("./update-drg-attachment-details"));
exports.UpdateDrgAttachmentDetails = UpdateDrgAttachmentDetails.UpdateDrgAttachmentDetails;
const UpdateDrgDetails = __importStar(require("./update-drg-details"));
exports.UpdateDrgDetails = UpdateDrgDetails.UpdateDrgDetails;
const UpdateDrgRouteDistributionDetails = __importStar(require("./update-drg-route-distribution-details"));
exports.UpdateDrgRouteDistributionDetails = UpdateDrgRouteDistributionDetails.UpdateDrgRouteDistributionDetails;
const UpdateDrgRouteDistributionStatementDetails = __importStar(require("./update-drg-route-distribution-statement-details"));
exports.UpdateDrgRouteDistributionStatementDetails = UpdateDrgRouteDistributionStatementDetails.UpdateDrgRouteDistributionStatementDetails;
const UpdateDrgRouteDistributionStatementsDetails = __importStar(require("./update-drg-route-distribution-statements-details"));
exports.UpdateDrgRouteDistributionStatementsDetails = UpdateDrgRouteDistributionStatementsDetails.UpdateDrgRouteDistributionStatementsDetails;
const UpdateDrgRouteRuleDetails = __importStar(require("./update-drg-route-rule-details"));
exports.UpdateDrgRouteRuleDetails = UpdateDrgRouteRuleDetails.UpdateDrgRouteRuleDetails;
const UpdateDrgRouteRulesDetails = __importStar(require("./update-drg-route-rules-details"));
exports.UpdateDrgRouteRulesDetails = UpdateDrgRouteRulesDetails.UpdateDrgRouteRulesDetails;
const UpdateDrgRouteTableDetails = __importStar(require("./update-drg-route-table-details"));
exports.UpdateDrgRouteTableDetails = UpdateDrgRouteTableDetails.UpdateDrgRouteTableDetails;
const UpdateIPSecConnectionDetails = __importStar(require("./update-ip-sec-connection-details"));
exports.UpdateIPSecConnectionDetails = UpdateIPSecConnectionDetails.UpdateIPSecConnectionDetails;
const UpdateIPSecConnectionTunnelDetails = __importStar(require("./update-ip-sec-connection-tunnel-details"));
exports.UpdateIPSecConnectionTunnelDetails = UpdateIPSecConnectionTunnelDetails.UpdateIPSecConnectionTunnelDetails;
const UpdateIPSecConnectionTunnelSharedSecretDetails = __importStar(require("./update-ip-sec-connection-tunnel-shared-secret-details"));
exports.UpdateIPSecConnectionTunnelSharedSecretDetails = UpdateIPSecConnectionTunnelSharedSecretDetails.UpdateIPSecConnectionTunnelSharedSecretDetails;
const UpdateIPSecTunnelBgpSessionDetails = __importStar(require("./update-ip-sec-tunnel-bgp-session-details"));
exports.UpdateIPSecTunnelBgpSessionDetails = UpdateIPSecTunnelBgpSessionDetails.UpdateIPSecTunnelBgpSessionDetails;
const UpdateIPSecTunnelEncryptionDomainDetails = __importStar(require("./update-ip-sec-tunnel-encryption-domain-details"));
exports.UpdateIPSecTunnelEncryptionDomainDetails = UpdateIPSecTunnelEncryptionDomainDetails.UpdateIPSecTunnelEncryptionDomainDetails;
const UpdateImageDetails = __importStar(require("./update-image-details"));
exports.UpdateImageDetails = UpdateImageDetails.UpdateImageDetails;
const UpdateInstanceAgentConfigDetails = __importStar(require("./update-instance-agent-config-details"));
exports.UpdateInstanceAgentConfigDetails = UpdateInstanceAgentConfigDetails.UpdateInstanceAgentConfigDetails;
const UpdateInstanceAvailabilityConfigDetails = __importStar(require("./update-instance-availability-config-details"));
exports.UpdateInstanceAvailabilityConfigDetails = UpdateInstanceAvailabilityConfigDetails.UpdateInstanceAvailabilityConfigDetails;
const UpdateInstanceConfigurationDetails = __importStar(require("./update-instance-configuration-details"));
exports.UpdateInstanceConfigurationDetails = UpdateInstanceConfigurationDetails.UpdateInstanceConfigurationDetails;
const UpdateInstanceConsoleConnectionDetails = __importStar(require("./update-instance-console-connection-details"));
exports.UpdateInstanceConsoleConnectionDetails = UpdateInstanceConsoleConnectionDetails.UpdateInstanceConsoleConnectionDetails;
const UpdateInstanceDetails = __importStar(require("./update-instance-details"));
exports.UpdateInstanceDetails = UpdateInstanceDetails.UpdateInstanceDetails;
const UpdateInstancePoolDetails = __importStar(require("./update-instance-pool-details"));
exports.UpdateInstancePoolDetails = UpdateInstancePoolDetails.UpdateInstancePoolDetails;
const UpdateInstancePoolPlacementConfigurationDetails = __importStar(require("./update-instance-pool-placement-configuration-details"));
exports.UpdateInstancePoolPlacementConfigurationDetails = UpdateInstancePoolPlacementConfigurationDetails.UpdateInstancePoolPlacementConfigurationDetails;
const UpdateInstanceShapeConfigDetails = __importStar(require("./update-instance-shape-config-details"));
exports.UpdateInstanceShapeConfigDetails = UpdateInstanceShapeConfigDetails.UpdateInstanceShapeConfigDetails;
const UpdateInternetGatewayDetails = __importStar(require("./update-internet-gateway-details"));
exports.UpdateInternetGatewayDetails = UpdateInternetGatewayDetails.UpdateInternetGatewayDetails;
const UpdateIpv6Details = __importStar(require("./update-ipv6-details"));
exports.UpdateIpv6Details = UpdateIpv6Details.UpdateIpv6Details;
const UpdateLaunchOptions = __importStar(require("./update-launch-options"));
exports.UpdateLaunchOptions = UpdateLaunchOptions.UpdateLaunchOptions;
const UpdateLocalPeeringGatewayDetails = __importStar(require("./update-local-peering-gateway-details"));
exports.UpdateLocalPeeringGatewayDetails = UpdateLocalPeeringGatewayDetails.UpdateLocalPeeringGatewayDetails;
const UpdateMacsecKey = __importStar(require("./update-macsec-key"));
exports.UpdateMacsecKey = UpdateMacsecKey.UpdateMacsecKey;
const UpdateMacsecProperties = __importStar(require("./update-macsec-properties"));
exports.UpdateMacsecProperties = UpdateMacsecProperties.UpdateMacsecProperties;
const UpdateNatGatewayDetails = __importStar(require("./update-nat-gateway-details"));
exports.UpdateNatGatewayDetails = UpdateNatGatewayDetails.UpdateNatGatewayDetails;
const UpdateNetworkSecurityGroupDetails = __importStar(require("./update-network-security-group-details"));
exports.UpdateNetworkSecurityGroupDetails = UpdateNetworkSecurityGroupDetails.UpdateNetworkSecurityGroupDetails;
const UpdateNetworkSecurityGroupSecurityRulesDetails = __importStar(require("./update-network-security-group-security-rules-details"));
exports.UpdateNetworkSecurityGroupSecurityRulesDetails = UpdateNetworkSecurityGroupSecurityRulesDetails.UpdateNetworkSecurityGroupSecurityRulesDetails;
const UpdatePrivateIpDetails = __importStar(require("./update-private-ip-details"));
exports.UpdatePrivateIpDetails = UpdatePrivateIpDetails.UpdatePrivateIpDetails;
const UpdatePublicIpDetails = __importStar(require("./update-public-ip-details"));
exports.UpdatePublicIpDetails = UpdatePublicIpDetails.UpdatePublicIpDetails;
const UpdatePublicIpPoolDetails = __importStar(require("./update-public-ip-pool-details"));
exports.UpdatePublicIpPoolDetails = UpdatePublicIpPoolDetails.UpdatePublicIpPoolDetails;
const UpdateRemotePeeringConnectionDetails = __importStar(require("./update-remote-peering-connection-details"));
exports.UpdateRemotePeeringConnectionDetails = UpdateRemotePeeringConnectionDetails.UpdateRemotePeeringConnectionDetails;
const UpdateRouteTableDetails = __importStar(require("./update-route-table-details"));
exports.UpdateRouteTableDetails = UpdateRouteTableDetails.UpdateRouteTableDetails;
const UpdateSecurityListDetails = __importStar(require("./update-security-list-details"));
exports.UpdateSecurityListDetails = UpdateSecurityListDetails.UpdateSecurityListDetails;
const UpdateSecurityRuleDetails = __importStar(require("./update-security-rule-details"));
exports.UpdateSecurityRuleDetails = UpdateSecurityRuleDetails.UpdateSecurityRuleDetails;
const UpdateServiceGatewayDetails = __importStar(require("./update-service-gateway-details"));
exports.UpdateServiceGatewayDetails = UpdateServiceGatewayDetails.UpdateServiceGatewayDetails;
const UpdateSubnetDetails = __importStar(require("./update-subnet-details"));
exports.UpdateSubnetDetails = UpdateSubnetDetails.UpdateSubnetDetails;
const UpdateTunnelCpeDeviceConfigDetails = __importStar(require("./update-tunnel-cpe-device-config-details"));
exports.UpdateTunnelCpeDeviceConfigDetails = UpdateTunnelCpeDeviceConfigDetails.UpdateTunnelCpeDeviceConfigDetails;
const UpdateVcnDetails = __importStar(require("./update-vcn-details"));
exports.UpdateVcnDetails = UpdateVcnDetails.UpdateVcnDetails;
const UpdateVirtualCircuitDetails = __importStar(require("./update-virtual-circuit-details"));
exports.UpdateVirtualCircuitDetails = UpdateVirtualCircuitDetails.UpdateVirtualCircuitDetails;
const UpdateVlanDetails = __importStar(require("./update-vlan-details"));
exports.UpdateVlanDetails = UpdateVlanDetails.UpdateVlanDetails;
const UpdateVnicDetails = __importStar(require("./update-vnic-details"));
exports.UpdateVnicDetails = UpdateVnicDetails.UpdateVnicDetails;
const UpdateVolumeAttachmentDetails = __importStar(require("./update-volume-attachment-details"));
exports.UpdateVolumeAttachmentDetails = UpdateVolumeAttachmentDetails.UpdateVolumeAttachmentDetails;
const UpdateVolumeBackupDetails = __importStar(require("./update-volume-backup-details"));
exports.UpdateVolumeBackupDetails = UpdateVolumeBackupDetails.UpdateVolumeBackupDetails;
const UpdateVolumeBackupPolicyDetails = __importStar(require("./update-volume-backup-policy-details"));
exports.UpdateVolumeBackupPolicyDetails = UpdateVolumeBackupPolicyDetails.UpdateVolumeBackupPolicyDetails;
const UpdateVolumeDetails = __importStar(require("./update-volume-details"));
exports.UpdateVolumeDetails = UpdateVolumeDetails.UpdateVolumeDetails;
const UpdateVolumeGroupBackupDetails = __importStar(require("./update-volume-group-backup-details"));
exports.UpdateVolumeGroupBackupDetails = UpdateVolumeGroupBackupDetails.UpdateVolumeGroupBackupDetails;
const UpdateVolumeGroupDetails = __importStar(require("./update-volume-group-details"));
exports.UpdateVolumeGroupDetails = UpdateVolumeGroupDetails.UpdateVolumeGroupDetails;
const UpdateVolumeKmsKeyDetails = __importStar(require("./update-volume-kms-key-details"));
exports.UpdateVolumeKmsKeyDetails = UpdateVolumeKmsKeyDetails.UpdateVolumeKmsKeyDetails;
const UpdateVtapDetails = __importStar(require("./update-vtap-details"));
exports.UpdateVtapDetails = UpdateVtapDetails.UpdateVtapDetails;
const UpdatedNetworkSecurityGroupSecurityRules = __importStar(require("./updated-network-security-group-security-rules"));
exports.UpdatedNetworkSecurityGroupSecurityRules = UpdatedNetworkSecurityGroupSecurityRules.UpdatedNetworkSecurityGroupSecurityRules;
const UpgradeStatus = __importStar(require("./upgrade-status"));
exports.UpgradeStatus = UpgradeStatus.UpgradeStatus;
const Vcn = __importStar(require("./vcn"));
exports.Vcn = Vcn.Vcn;
const VcnDnsResolverAssociation = __importStar(require("./vcn-dns-resolver-association"));
exports.VcnDnsResolverAssociation = VcnDnsResolverAssociation.VcnDnsResolverAssociation;
const VirtualCircuit = __importStar(require("./virtual-circuit"));
exports.VirtualCircuit = VirtualCircuit.VirtualCircuit;
const VirtualCircuitBandwidthShape = __importStar(require("./virtual-circuit-bandwidth-shape"));
exports.VirtualCircuitBandwidthShape = VirtualCircuitBandwidthShape.VirtualCircuitBandwidthShape;
const VirtualCircuitIpMtu = __importStar(require("./virtual-circuit-ip-mtu"));
exports.VirtualCircuitIpMtu = VirtualCircuitIpMtu.VirtualCircuitIpMtu;
const VirtualCircuitPublicPrefix = __importStar(require("./virtual-circuit-public-prefix"));
exports.VirtualCircuitPublicPrefix = VirtualCircuitPublicPrefix.VirtualCircuitPublicPrefix;
const Vlan = __importStar(require("./vlan"));
exports.Vlan = Vlan.Vlan;
const Vnic = __importStar(require("./vnic"));
exports.Vnic = Vnic.Vnic;
const VnicAttachment = __importStar(require("./vnic-attachment"));
exports.VnicAttachment = VnicAttachment.VnicAttachment;
const Volume = __importStar(require("./volume"));
exports.Volume = Volume.Volume;
const VolumeAttachment = __importStar(require("./volume-attachment"));
exports.VolumeAttachment = VolumeAttachment.VolumeAttachment;
const VolumeBackup = __importStar(require("./volume-backup"));
exports.VolumeBackup = VolumeBackup.VolumeBackup;
const VolumeBackupPolicy = __importStar(require("./volume-backup-policy"));
exports.VolumeBackupPolicy = VolumeBackupPolicy.VolumeBackupPolicy;
const VolumeBackupPolicyAssignment = __importStar(require("./volume-backup-policy-assignment"));
exports.VolumeBackupPolicyAssignment = VolumeBackupPolicyAssignment.VolumeBackupPolicyAssignment;
const VolumeBackupSchedule = __importStar(require("./volume-backup-schedule"));
exports.VolumeBackupSchedule = VolumeBackupSchedule.VolumeBackupSchedule;
const VolumeGroup = __importStar(require("./volume-group"));
exports.VolumeGroup = VolumeGroup.VolumeGroup;
const VolumeGroupBackup = __importStar(require("./volume-group-backup"));
exports.VolumeGroupBackup = VolumeGroupBackup.VolumeGroupBackup;
const VolumeGroupReplica = __importStar(require("./volume-group-replica"));
exports.VolumeGroupReplica = VolumeGroupReplica.VolumeGroupReplica;
const VolumeGroupReplicaDetails = __importStar(require("./volume-group-replica-details"));
exports.VolumeGroupReplicaDetails = VolumeGroupReplicaDetails.VolumeGroupReplicaDetails;
const VolumeGroupReplicaInfo = __importStar(require("./volume-group-replica-info"));
exports.VolumeGroupReplicaInfo = VolumeGroupReplicaInfo.VolumeGroupReplicaInfo;
const VolumeGroupSourceDetails = __importStar(require("./volume-group-source-details"));
exports.VolumeGroupSourceDetails = VolumeGroupSourceDetails.VolumeGroupSourceDetails;
const VolumeKmsKey = __importStar(require("./volume-kms-key"));
exports.VolumeKmsKey = VolumeKmsKey.VolumeKmsKey;
const VolumeSourceDetails = __importStar(require("./volume-source-details"));
exports.VolumeSourceDetails = VolumeSourceDetails.VolumeSourceDetails;
const Vtap = __importStar(require("./vtap"));
exports.Vtap = Vtap.Vtap;
const VtapCaptureFilterRuleDetails = __importStar(require("./vtap-capture-filter-rule-details"));
exports.VtapCaptureFilterRuleDetails = VtapCaptureFilterRuleDetails.VtapCaptureFilterRuleDetails;
const AmdMilanBmLaunchInstancePlatformConfig = __importStar(require("./amd-milan-bm-launch-instance-platform-config"));
exports.AmdMilanBmLaunchInstancePlatformConfig = AmdMilanBmLaunchInstancePlatformConfig.AmdMilanBmLaunchInstancePlatformConfig;
const AmdMilanBmPlatformConfig = __importStar(require("./amd-milan-bm-platform-config"));
exports.AmdMilanBmPlatformConfig = AmdMilanBmPlatformConfig.AmdMilanBmPlatformConfig;
const AmdRomeBmGpuLaunchInstancePlatformConfig = __importStar(require("./amd-rome-bm-gpu-launch-instance-platform-config"));
exports.AmdRomeBmGpuLaunchInstancePlatformConfig = AmdRomeBmGpuLaunchInstancePlatformConfig.AmdRomeBmGpuLaunchInstancePlatformConfig;
const AmdRomeBmGpuPlatformConfig = __importStar(require("./amd-rome-bm-gpu-platform-config"));
exports.AmdRomeBmGpuPlatformConfig = AmdRomeBmGpuPlatformConfig.AmdRomeBmGpuPlatformConfig;
const AmdRomeBmLaunchInstancePlatformConfig = __importStar(require("./amd-rome-bm-launch-instance-platform-config"));
exports.AmdRomeBmLaunchInstancePlatformConfig = AmdRomeBmLaunchInstancePlatformConfig.AmdRomeBmLaunchInstancePlatformConfig;
const AmdRomeBmPlatformConfig = __importStar(require("./amd-rome-bm-platform-config"));
exports.AmdRomeBmPlatformConfig = AmdRomeBmPlatformConfig.AmdRomeBmPlatformConfig;
const AmdVmLaunchInstancePlatformConfig = __importStar(require("./amd-vm-launch-instance-platform-config"));
exports.AmdVmLaunchInstancePlatformConfig = AmdVmLaunchInstancePlatformConfig.AmdVmLaunchInstancePlatformConfig;
const AmdVmPlatformConfig = __importStar(require("./amd-vm-platform-config"));
exports.AmdVmPlatformConfig = AmdVmPlatformConfig.AmdVmPlatformConfig;
const AttachEmulatedVolumeDetails = __importStar(require("./attach-emulated-volume-details"));
exports.AttachEmulatedVolumeDetails = AttachEmulatedVolumeDetails.AttachEmulatedVolumeDetails;
const AttachIScsiVolumeDetails = __importStar(require("./attach-iscsi-volume-details"));
exports.AttachIScsiVolumeDetails = AttachIScsiVolumeDetails.AttachIScsiVolumeDetails;
const AttachParavirtualizedVolumeDetails = __importStar(require("./attach-paravirtualized-volume-details"));
exports.AttachParavirtualizedVolumeDetails = AttachParavirtualizedVolumeDetails.AttachParavirtualizedVolumeDetails;
const AttachServiceDeterminedVolumeDetails = __importStar(require("./attach-service-determined-volume-details"));
exports.AttachServiceDeterminedVolumeDetails = AttachServiceDeterminedVolumeDetails.AttachServiceDeterminedVolumeDetails;
const BooleanImageCapabilitySchemaDescriptor = __importStar(require("./boolean-image-capability-schema-descriptor"));
exports.BooleanImageCapabilitySchemaDescriptor = BooleanImageCapabilitySchemaDescriptor.BooleanImageCapabilitySchemaDescriptor;
const BootVolumeSourceFromBootVolumeBackupDetails = __importStar(require("./boot-volume-source-from-boot-volume-backup-details"));
exports.BootVolumeSourceFromBootVolumeBackupDetails = BootVolumeSourceFromBootVolumeBackupDetails.BootVolumeSourceFromBootVolumeBackupDetails;
const BootVolumeSourceFromBootVolumeDetails = __importStar(require("./boot-volume-source-from-boot-volume-details"));
exports.BootVolumeSourceFromBootVolumeDetails = BootVolumeSourceFromBootVolumeDetails.BootVolumeSourceFromBootVolumeDetails;
const BootVolumeSourceFromBootVolumeReplicaDetails = __importStar(require("./boot-volume-source-from-boot-volume-replica-details"));
exports.BootVolumeSourceFromBootVolumeReplicaDetails = BootVolumeSourceFromBootVolumeReplicaDetails.BootVolumeSourceFromBootVolumeReplicaDetails;
const ComputeInstanceDetails = __importStar(require("./compute-instance-details"));
exports.ComputeInstanceDetails = ComputeInstanceDetails.ComputeInstanceDetails;
const CreateInstanceConfigurationDetails = __importStar(require("./create-instance-configuration-details"));
exports.CreateInstanceConfigurationDetails = CreateInstanceConfigurationDetails.CreateInstanceConfigurationDetails;
const CreateInstanceConfigurationFromInstanceDetails = __importStar(require("./create-instance-configuration-from-instance-details"));
exports.CreateInstanceConfigurationFromInstanceDetails = CreateInstanceConfigurationFromInstanceDetails.CreateInstanceConfigurationFromInstanceDetails;
const DhcpDnsOption = __importStar(require("./dhcp-dns-option"));
exports.DhcpDnsOption = DhcpDnsOption.DhcpDnsOption;
const DhcpSearchDomainOption = __importStar(require("./dhcp-search-domain-option"));
exports.DhcpSearchDomainOption = DhcpSearchDomainOption.DhcpSearchDomainOption;
const DrgAttachmentIdDrgRouteDistributionMatchCriteria = __importStar(require("./drg-attachment-id-drg-route-distribution-match-criteria"));
exports.DrgAttachmentIdDrgRouteDistributionMatchCriteria = DrgAttachmentIdDrgRouteDistributionMatchCriteria.DrgAttachmentIdDrgRouteDistributionMatchCriteria;
const DrgAttachmentMatchAllDrgRouteDistributionMatchCriteria = __importStar(require("./drg-attachment-match-all-drg-route-distribution-match-criteria"));
exports.DrgAttachmentMatchAllDrgRouteDistributionMatchCriteria = DrgAttachmentMatchAllDrgRouteDistributionMatchCriteria.DrgAttachmentMatchAllDrgRouteDistributionMatchCriteria;
const DrgAttachmentTypeDrgRouteDistributionMatchCriteria = __importStar(require("./drg-attachment-type-drg-route-distribution-match-criteria"));
exports.DrgAttachmentTypeDrgRouteDistributionMatchCriteria = DrgAttachmentTypeDrgRouteDistributionMatchCriteria.DrgAttachmentTypeDrgRouteDistributionMatchCriteria;
const EmulatedVolumeAttachment = __importStar(require("./emulated-volume-attachment"));
exports.EmulatedVolumeAttachment = EmulatedVolumeAttachment.EmulatedVolumeAttachment;
const EnumIntegerImageCapabilityDescriptor = __importStar(require("./enum-integer-image-capability-descriptor"));
exports.EnumIntegerImageCapabilityDescriptor = EnumIntegerImageCapabilityDescriptor.EnumIntegerImageCapabilityDescriptor;
const EnumStringImageCapabilitySchemaDescriptor = __importStar(require("./enum-string-image-capability-schema-descriptor"));
exports.EnumStringImageCapabilitySchemaDescriptor = EnumStringImageCapabilitySchemaDescriptor.EnumStringImageCapabilitySchemaDescriptor;
const ExportImageViaObjectStorageTupleDetails = __importStar(require("./export-image-via-object-storage-tuple-details"));
exports.ExportImageViaObjectStorageTupleDetails = ExportImageViaObjectStorageTupleDetails.ExportImageViaObjectStorageTupleDetails;
const ExportImageViaObjectStorageUriDetails = __importStar(require("./export-image-via-object-storage-uri-details"));
exports.ExportImageViaObjectStorageUriDetails = ExportImageViaObjectStorageUriDetails.ExportImageViaObjectStorageUriDetails;
const IScsiVolumeAttachment = __importStar(require("./i-scsi-volume-attachment"));
exports.IScsiVolumeAttachment = IScsiVolumeAttachment.IScsiVolumeAttachment;
const ImageSourceViaObjectStorageTupleDetails = __importStar(require("./image-source-via-object-storage-tuple-details"));
exports.ImageSourceViaObjectStorageTupleDetails = ImageSourceViaObjectStorageTupleDetails.ImageSourceViaObjectStorageTupleDetails;
const ImageSourceViaObjectStorageUriDetails = __importStar(require("./image-source-via-object-storage-uri-details"));
exports.ImageSourceViaObjectStorageUriDetails = ImageSourceViaObjectStorageUriDetails.ImageSourceViaObjectStorageUriDetails;
const InstanceConfigurationAmdMilanBmLaunchInstancePlatformConfig = __importStar(require("./instance-configuration-amd-milan-bm-launch-instance-platform-config"));
exports.InstanceConfigurationAmdMilanBmLaunchInstancePlatformConfig = InstanceConfigurationAmdMilanBmLaunchInstancePlatformConfig.InstanceConfigurationAmdMilanBmLaunchInstancePlatformConfig;
const InstanceConfigurationAmdRomeBmGpuLaunchInstancePlatformConfig = __importStar(require("./instance-configuration-amd-rome-bm-gpu-launch-instance-platform-config"));
exports.InstanceConfigurationAmdRomeBmGpuLaunchInstancePlatformConfig = InstanceConfigurationAmdRomeBmGpuLaunchInstancePlatformConfig.InstanceConfigurationAmdRomeBmGpuLaunchInstancePlatformConfig;
const InstanceConfigurationAmdRomeBmLaunchInstancePlatformConfig = __importStar(require("./instance-configuration-amd-rome-bm-launch-instance-platform-config"));
exports.InstanceConfigurationAmdRomeBmLaunchInstancePlatformConfig = InstanceConfigurationAmdRomeBmLaunchInstancePlatformConfig.InstanceConfigurationAmdRomeBmLaunchInstancePlatformConfig;
const InstanceConfigurationAmdVmLaunchInstancePlatformConfig = __importStar(require("./instance-configuration-amd-vm-launch-instance-platform-config"));
exports.InstanceConfigurationAmdVmLaunchInstancePlatformConfig = InstanceConfigurationAmdVmLaunchInstancePlatformConfig.InstanceConfigurationAmdVmLaunchInstancePlatformConfig;
const InstanceConfigurationInstanceSourceViaBootVolumeDetails = __importStar(require("./instance-configuration-instance-source-via-boot-volume-details"));
exports.InstanceConfigurationInstanceSourceViaBootVolumeDetails = InstanceConfigurationInstanceSourceViaBootVolumeDetails.InstanceConfigurationInstanceSourceViaBootVolumeDetails;
const InstanceConfigurationInstanceSourceViaImageDetails = __importStar(require("./instance-configuration-instance-source-via-image-details"));
exports.InstanceConfigurationInstanceSourceViaImageDetails = InstanceConfigurationInstanceSourceViaImageDetails.InstanceConfigurationInstanceSourceViaImageDetails;
const InstanceConfigurationIntelIcelakeBmLaunchInstancePlatformConfig = __importStar(require("./instance-configuration-intel-icelake-bm-launch-instance-platform-config"));
exports.InstanceConfigurationIntelIcelakeBmLaunchInstancePlatformConfig = InstanceConfigurationIntelIcelakeBmLaunchInstancePlatformConfig.InstanceConfigurationIntelIcelakeBmLaunchInstancePlatformConfig;
const InstanceConfigurationIntelSkylakeBmLaunchInstancePlatformConfig = __importStar(require("./instance-configuration-intel-skylake-bm-launch-instance-platform-config"));
exports.InstanceConfigurationIntelSkylakeBmLaunchInstancePlatformConfig = InstanceConfigurationIntelSkylakeBmLaunchInstancePlatformConfig.InstanceConfigurationIntelSkylakeBmLaunchInstancePlatformConfig;
const InstanceConfigurationIntelVmLaunchInstancePlatformConfig = __importStar(require("./instance-configuration-intel-vm-launch-instance-platform-config"));
exports.InstanceConfigurationIntelVmLaunchInstancePlatformConfig = InstanceConfigurationIntelVmLaunchInstancePlatformConfig.InstanceConfigurationIntelVmLaunchInstancePlatformConfig;
const InstanceConfigurationIscsiAttachVolumeDetails = __importStar(require("./instance-configuration-iscsi-attach-volume-details"));
exports.InstanceConfigurationIscsiAttachVolumeDetails = InstanceConfigurationIscsiAttachVolumeDetails.InstanceConfigurationIscsiAttachVolumeDetails;
const InstanceConfigurationParavirtualizedAttachVolumeDetails = __importStar(require("./instance-configuration-paravirtualized-attach-volume-details"));
exports.InstanceConfigurationParavirtualizedAttachVolumeDetails = InstanceConfigurationParavirtualizedAttachVolumeDetails.InstanceConfigurationParavirtualizedAttachVolumeDetails;
const InstanceConfigurationVolumeSourceFromVolumeBackupDetails = __importStar(require("./instance-configuration-volume-source-from-volume-backup-details"));
exports.InstanceConfigurationVolumeSourceFromVolumeBackupDetails = InstanceConfigurationVolumeSourceFromVolumeBackupDetails.InstanceConfigurationVolumeSourceFromVolumeBackupDetails;
const InstanceConfigurationVolumeSourceFromVolumeDetails = __importStar(require("./instance-configuration-volume-source-from-volume-details"));
exports.InstanceConfigurationVolumeSourceFromVolumeDetails = InstanceConfigurationVolumeSourceFromVolumeDetails.InstanceConfigurationVolumeSourceFromVolumeDetails;
const InstanceSourceViaBootVolumeDetails = __importStar(require("./instance-source-via-boot-volume-details"));
exports.InstanceSourceViaBootVolumeDetails = InstanceSourceViaBootVolumeDetails.InstanceSourceViaBootVolumeDetails;
const InstanceSourceViaImageDetails = __importStar(require("./instance-source-via-image-details"));
exports.InstanceSourceViaImageDetails = InstanceSourceViaImageDetails.InstanceSourceViaImageDetails;
const IntelIcelakeBmLaunchInstancePlatformConfig = __importStar(require("./intel-icelake-bm-launch-instance-platform-config"));
exports.IntelIcelakeBmLaunchInstancePlatformConfig = IntelIcelakeBmLaunchInstancePlatformConfig.IntelIcelakeBmLaunchInstancePlatformConfig;
const IntelIcelakeBmPlatformConfig = __importStar(require("./intel-icelake-bm-platform-config"));
exports.IntelIcelakeBmPlatformConfig = IntelIcelakeBmPlatformConfig.IntelIcelakeBmPlatformConfig;
const IntelSkylakeBmLaunchInstancePlatformConfig = __importStar(require("./intel-skylake-bm-launch-instance-platform-config"));
exports.IntelSkylakeBmLaunchInstancePlatformConfig = IntelSkylakeBmLaunchInstancePlatformConfig.IntelSkylakeBmLaunchInstancePlatformConfig;
const IntelSkylakeBmPlatformConfig = __importStar(require("./intel-skylake-bm-platform-config"));
exports.IntelSkylakeBmPlatformConfig = IntelSkylakeBmPlatformConfig.IntelSkylakeBmPlatformConfig;
const IntelVmLaunchInstancePlatformConfig = __importStar(require("./intel-vm-launch-instance-platform-config"));
exports.IntelVmLaunchInstancePlatformConfig = IntelVmLaunchInstancePlatformConfig.IntelVmLaunchInstancePlatformConfig;
const IntelVmPlatformConfig = __importStar(require("./intel-vm-platform-config"));
exports.IntelVmPlatformConfig = IntelVmPlatformConfig.IntelVmPlatformConfig;
const IpsecTunnelDrgAttachmentNetworkDetails = __importStar(require("./ipsec-tunnel-drg-attachment-network-details"));
exports.IpsecTunnelDrgAttachmentNetworkDetails = IpsecTunnelDrgAttachmentNetworkDetails.IpsecTunnelDrgAttachmentNetworkDetails;
const NetworkingTopology = __importStar(require("./networking-topology"));
exports.NetworkingTopology = NetworkingTopology.NetworkingTopology;
const ParavirtualizedVolumeAttachment = __importStar(require("./paravirtualized-volume-attachment"));
exports.ParavirtualizedVolumeAttachment = ParavirtualizedVolumeAttachment.ParavirtualizedVolumeAttachment;
const RemotePeeringConnectionDrgAttachmentNetworkDetails = __importStar(require("./remote-peering-connection-drg-attachment-network-details"));
exports.RemotePeeringConnectionDrgAttachmentNetworkDetails = RemotePeeringConnectionDrgAttachmentNetworkDetails.RemotePeeringConnectionDrgAttachmentNetworkDetails;
const ResetActionDetails = __importStar(require("./reset-action-details"));
exports.ResetActionDetails = ResetActionDetails.ResetActionDetails;
const SoftResetActionDetails = __importStar(require("./soft-reset-action-details"));
exports.SoftResetActionDetails = SoftResetActionDetails.SoftResetActionDetails;
const SubnetTopology = __importStar(require("./subnet-topology"));
exports.SubnetTopology = SubnetTopology.SubnetTopology;
const TerminatePreemptionAction = __importStar(require("./terminate-preemption-action"));
exports.TerminatePreemptionAction = TerminatePreemptionAction.TerminatePreemptionAction;
const TopologyAssociatedWithEntityRelationship = __importStar(require("./topology-associated-with-entity-relationship"));
exports.TopologyAssociatedWithEntityRelationship = TopologyAssociatedWithEntityRelationship.TopologyAssociatedWithEntityRelationship;
const TopologyContainsEntityRelationship = __importStar(require("./topology-contains-entity-relationship"));
exports.TopologyContainsEntityRelationship = TopologyContainsEntityRelationship.TopologyContainsEntityRelationship;
const TopologyRoutesToEntityRelationship = __importStar(require("./topology-routes-to-entity-relationship"));
exports.TopologyRoutesToEntityRelationship = TopologyRoutesToEntityRelationship.TopologyRoutesToEntityRelationship;
const VcnDrgAttachmentNetworkCreateDetails = __importStar(require("./vcn-drg-attachment-network-create-details"));
exports.VcnDrgAttachmentNetworkCreateDetails = VcnDrgAttachmentNetworkCreateDetails.VcnDrgAttachmentNetworkCreateDetails;
const VcnDrgAttachmentNetworkDetails = __importStar(require("./vcn-drg-attachment-network-details"));
exports.VcnDrgAttachmentNetworkDetails = VcnDrgAttachmentNetworkDetails.VcnDrgAttachmentNetworkDetails;
const VcnDrgAttachmentNetworkUpdateDetails = __importStar(require("./vcn-drg-attachment-network-update-details"));
exports.VcnDrgAttachmentNetworkUpdateDetails = VcnDrgAttachmentNetworkUpdateDetails.VcnDrgAttachmentNetworkUpdateDetails;
const VcnTopology = __importStar(require("./vcn-topology"));
exports.VcnTopology = VcnTopology.VcnTopology;
const VirtualCircuitDrgAttachmentNetworkDetails = __importStar(require("./virtual-circuit-drg-attachment-network-details"));
exports.VirtualCircuitDrgAttachmentNetworkDetails = VirtualCircuitDrgAttachmentNetworkDetails.VirtualCircuitDrgAttachmentNetworkDetails;
const VolumeGroupSourceFromVolumeGroupBackupDetails = __importStar(require("./volume-group-source-from-volume-group-backup-details"));
exports.VolumeGroupSourceFromVolumeGroupBackupDetails = VolumeGroupSourceFromVolumeGroupBackupDetails.VolumeGroupSourceFromVolumeGroupBackupDetails;
const VolumeGroupSourceFromVolumeGroupDetails = __importStar(require("./volume-group-source-from-volume-group-details"));
exports.VolumeGroupSourceFromVolumeGroupDetails = VolumeGroupSourceFromVolumeGroupDetails.VolumeGroupSourceFromVolumeGroupDetails;
const VolumeGroupSourceFromVolumeGroupReplicaDetails = __importStar(require("./volume-group-source-from-volume-group-replica-details"));
exports.VolumeGroupSourceFromVolumeGroupReplicaDetails = VolumeGroupSourceFromVolumeGroupReplicaDetails.VolumeGroupSourceFromVolumeGroupReplicaDetails;
const VolumeGroupSourceFromVolumesDetails = __importStar(require("./volume-group-source-from-volumes-details"));
exports.VolumeGroupSourceFromVolumesDetails = VolumeGroupSourceFromVolumesDetails.VolumeGroupSourceFromVolumesDetails;
const VolumeSourceFromBlockVolumeReplicaDetails = __importStar(require("./volume-source-from-block-volume-replica-details"));
exports.VolumeSourceFromBlockVolumeReplicaDetails = VolumeSourceFromBlockVolumeReplicaDetails.VolumeSourceFromBlockVolumeReplicaDetails;
const VolumeSourceFromVolumeBackupDetails = __importStar(require("./volume-source-from-volume-backup-details"));
exports.VolumeSourceFromVolumeBackupDetails = VolumeSourceFromVolumeBackupDetails.VolumeSourceFromVolumeBackupDetails;
const VolumeSourceFromVolumeDetails = __importStar(require("./volume-source-from-volume-details"));
exports.VolumeSourceFromVolumeDetails = VolumeSourceFromVolumeDetails.VolumeSourceFromVolumeDetails;
//# sourceMappingURL=index.js.map