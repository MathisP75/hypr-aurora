/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * Compute Global Image Capability Schema Version is a set of all possible capabilities for a collection of images.
 *
 */
export interface ComputeGlobalImageCapabilitySchemaVersion {
    /**
     * The name of the compute global image capability schema version
     *
     */
    "name": string;
    /**
     * The ocid of the compute global image capability schema
     *
     */
    "computeGlobalImageCapabilitySchemaId": string;
    /**
     * A user-friendly name. Does not have to be unique, and it's changeable.
     * Avoid entering confidential information.
     *
     */
    "displayName": string;
    /**
     * The map of each capability name to its ImageCapabilityDescriptor.
     */
    "schemaData": {
        [key: string]: model.ImageCapabilitySchemaDescriptor;
    };
    /**
      * The date and time the compute global image capability schema version was created, in the format defined by
  * [RFC3339](https://tools.ietf.org/html/rfc3339).
  * <p>
  Example: `2016-08-25T21:10:29.600Z`
  *
      */
    "timeCreated": Date;
}
export declare namespace ComputeGlobalImageCapabilitySchemaVersion {
    function getJsonObj(obj: ComputeGlobalImageCapabilitySchemaVersion): object;
    function getDeserializedJsonObj(obj: ComputeGlobalImageCapabilitySchemaVersion): object;
}
