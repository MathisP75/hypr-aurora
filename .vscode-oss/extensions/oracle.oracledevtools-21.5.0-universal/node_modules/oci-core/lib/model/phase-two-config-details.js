"use strict";
/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PhaseTwoConfigDetails = void 0;
var PhaseTwoConfigDetails;
(function (PhaseTwoConfigDetails) {
    let AuthenticationAlgorithm;
    (function (AuthenticationAlgorithm) {
        AuthenticationAlgorithm["HmacSha2256128"] = "HMAC_SHA2_256_128";
        AuthenticationAlgorithm["HmacSha1128"] = "HMAC_SHA1_128";
    })(AuthenticationAlgorithm = PhaseTwoConfigDetails.AuthenticationAlgorithm || (PhaseTwoConfigDetails.AuthenticationAlgorithm = {}));
    let EncryptionAlgorithm;
    (function (EncryptionAlgorithm) {
        EncryptionAlgorithm["Aes256Gcm"] = "AES_256_GCM";
        EncryptionAlgorithm["Aes192Gcm"] = "AES_192_GCM";
        EncryptionAlgorithm["Aes128Gcm"] = "AES_128_GCM";
        EncryptionAlgorithm["Aes256Cbc"] = "AES_256_CBC";
        EncryptionAlgorithm["Aes192Cbc"] = "AES_192_CBC";
        EncryptionAlgorithm["Aes128Cbc"] = "AES_128_CBC";
    })(EncryptionAlgorithm = PhaseTwoConfigDetails.EncryptionAlgorithm || (PhaseTwoConfigDetails.EncryptionAlgorithm = {}));
    let PfsDhGroup;
    (function (PfsDhGroup) {
        PfsDhGroup["Group2"] = "GROUP2";
        PfsDhGroup["Group5"] = "GROUP5";
        PfsDhGroup["Group14"] = "GROUP14";
        PfsDhGroup["Group19"] = "GROUP19";
        PfsDhGroup["Group20"] = "GROUP20";
        PfsDhGroup["Group24"] = "GROUP24";
    })(PfsDhGroup = PhaseTwoConfigDetails.PfsDhGroup || (PhaseTwoConfigDetails.PfsDhGroup = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    PhaseTwoConfigDetails.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    PhaseTwoConfigDetails.getDeserializedJsonObj = getDeserializedJsonObj;
})(PhaseTwoConfigDetails = exports.PhaseTwoConfigDetails || (exports.PhaseTwoConfigDetails = {}));
//# sourceMappingURL=phase-two-config-details.js.map