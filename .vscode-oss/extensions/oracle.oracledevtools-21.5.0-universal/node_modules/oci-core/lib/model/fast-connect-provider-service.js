"use strict";
/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FastConnectProviderService = void 0;
var FastConnectProviderService;
(function (FastConnectProviderService) {
    let PrivatePeeringBgpManagement;
    (function (PrivatePeeringBgpManagement) {
        PrivatePeeringBgpManagement["CustomerManaged"] = "CUSTOMER_MANAGED";
        PrivatePeeringBgpManagement["ProviderManaged"] = "PROVIDER_MANAGED";
        PrivatePeeringBgpManagement["OracleManaged"] = "ORACLE_MANAGED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PrivatePeeringBgpManagement["UnknownValue"] = "UNKNOWN_VALUE";
    })(PrivatePeeringBgpManagement = FastConnectProviderService.PrivatePeeringBgpManagement || (FastConnectProviderService.PrivatePeeringBgpManagement = {}));
    let PublicPeeringBgpManagement;
    (function (PublicPeeringBgpManagement) {
        PublicPeeringBgpManagement["CustomerManaged"] = "CUSTOMER_MANAGED";
        PublicPeeringBgpManagement["ProviderManaged"] = "PROVIDER_MANAGED";
        PublicPeeringBgpManagement["OracleManaged"] = "ORACLE_MANAGED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        PublicPeeringBgpManagement["UnknownValue"] = "UNKNOWN_VALUE";
    })(PublicPeeringBgpManagement = FastConnectProviderService.PublicPeeringBgpManagement || (FastConnectProviderService.PublicPeeringBgpManagement = {}));
    let SupportedVirtualCircuitTypes;
    (function (SupportedVirtualCircuitTypes) {
        SupportedVirtualCircuitTypes["Public"] = "PUBLIC";
        SupportedVirtualCircuitTypes["Private"] = "PRIVATE";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        SupportedVirtualCircuitTypes["UnknownValue"] = "UNKNOWN_VALUE";
    })(SupportedVirtualCircuitTypes = FastConnectProviderService.SupportedVirtualCircuitTypes || (FastConnectProviderService.SupportedVirtualCircuitTypes = {}));
    let CustomerAsnManagement;
    (function (CustomerAsnManagement) {
        CustomerAsnManagement["CustomerManaged"] = "CUSTOMER_MANAGED";
        CustomerAsnManagement["ProviderManaged"] = "PROVIDER_MANAGED";
        CustomerAsnManagement["OracleManaged"] = "ORACLE_MANAGED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        CustomerAsnManagement["UnknownValue"] = "UNKNOWN_VALUE";
    })(CustomerAsnManagement = FastConnectProviderService.CustomerAsnManagement || (FastConnectProviderService.CustomerAsnManagement = {}));
    let ProviderServiceKeyManagement;
    (function (ProviderServiceKeyManagement) {
        ProviderServiceKeyManagement["CustomerManaged"] = "CUSTOMER_MANAGED";
        ProviderServiceKeyManagement["ProviderManaged"] = "PROVIDER_MANAGED";
        ProviderServiceKeyManagement["OracleManaged"] = "ORACLE_MANAGED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        ProviderServiceKeyManagement["UnknownValue"] = "UNKNOWN_VALUE";
    })(ProviderServiceKeyManagement = FastConnectProviderService.ProviderServiceKeyManagement || (FastConnectProviderService.ProviderServiceKeyManagement = {}));
    let BandwithShapeManagement;
    (function (BandwithShapeManagement) {
        BandwithShapeManagement["CustomerManaged"] = "CUSTOMER_MANAGED";
        BandwithShapeManagement["ProviderManaged"] = "PROVIDER_MANAGED";
        BandwithShapeManagement["OracleManaged"] = "ORACLE_MANAGED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        BandwithShapeManagement["UnknownValue"] = "UNKNOWN_VALUE";
    })(BandwithShapeManagement = FastConnectProviderService.BandwithShapeManagement || (FastConnectProviderService.BandwithShapeManagement = {}));
    let Type;
    (function (Type) {
        Type["Layer2"] = "LAYER2";
        Type["Layer3"] = "LAYER3";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Type["UnknownValue"] = "UNKNOWN_VALUE";
    })(Type = FastConnectProviderService.Type || (FastConnectProviderService.Type = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    FastConnectProviderService.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {});
        return jsonObj;
    }
    FastConnectProviderService.getDeserializedJsonObj = getDeserializedJsonObj;
})(FastConnectProviderService = exports.FastConnectProviderService || (exports.FastConnectProviderService = {}));
//# sourceMappingURL=fast-connect-provider-service.js.map