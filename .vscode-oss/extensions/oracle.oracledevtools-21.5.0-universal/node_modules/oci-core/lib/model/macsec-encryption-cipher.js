"use strict";
/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MacsecEncryptionCipher = void 0;
/**
 * Type of encryption cipher suite to use for the MACsec connection.
 **/
var MacsecEncryptionCipher;
(function (MacsecEncryptionCipher) {
    MacsecEncryptionCipher["Aes128Gcm"] = "AES128_GCM";
    MacsecEncryptionCipher["Aes128GcmXpn"] = "AES128_GCM_XPN";
    MacsecEncryptionCipher["Aes256Gcm"] = "AES256_GCM";
    MacsecEncryptionCipher["Aes256GcmXpn"] = "AES256_GCM_XPN";
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    MacsecEncryptionCipher["UnknownValue"] = "UNKNOWN_VALUE";
})(MacsecEncryptionCipher = exports.MacsecEncryptionCipher || (exports.MacsecEncryptionCipher = {}));
(function (MacsecEncryptionCipher) {
    function getJsonObj(obj) {
        return obj;
    }
    MacsecEncryptionCipher.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        return obj;
    }
    MacsecEncryptionCipher.getDeserializedJsonObj = getDeserializedJsonObj;
})(MacsecEncryptionCipher = exports.MacsecEncryptionCipher || (exports.MacsecEncryptionCipher = {}));
//# sourceMappingURL=macsec-encryption-cipher.js.map