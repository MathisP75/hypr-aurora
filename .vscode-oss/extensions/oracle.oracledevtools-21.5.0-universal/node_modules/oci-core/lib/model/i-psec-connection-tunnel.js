"use strict";
/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IPSecConnectionTunnel = void 0;
const model = __importStar(require("../model"));
var IPSecConnectionTunnel;
(function (IPSecConnectionTunnel) {
    let Status;
    (function (Status) {
        Status["Up"] = "UP";
        Status["Down"] = "DOWN";
        Status["DownForMaintenance"] = "DOWN_FOR_MAINTENANCE";
        Status["PartialUp"] = "PARTIAL_UP";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Status["UnknownValue"] = "UNKNOWN_VALUE";
    })(Status = IPSecConnectionTunnel.Status || (IPSecConnectionTunnel.Status = {}));
    let IkeVersion;
    (function (IkeVersion) {
        IkeVersion["V1"] = "V1";
        IkeVersion["V2"] = "V2";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        IkeVersion["UnknownValue"] = "UNKNOWN_VALUE";
    })(IkeVersion = IPSecConnectionTunnel.IkeVersion || (IPSecConnectionTunnel.IkeVersion = {}));
    let LifecycleState;
    (function (LifecycleState) {
        LifecycleState["Provisioning"] = "PROVISIONING";
        LifecycleState["Available"] = "AVAILABLE";
        LifecycleState["Terminating"] = "TERMINATING";
        LifecycleState["Terminated"] = "TERMINATED";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        LifecycleState["UnknownValue"] = "UNKNOWN_VALUE";
    })(LifecycleState = IPSecConnectionTunnel.LifecycleState || (IPSecConnectionTunnel.LifecycleState = {}));
    let Routing;
    (function (Routing) {
        Routing["Bgp"] = "BGP";
        Routing["Static"] = "STATIC";
        Routing["Policy"] = "POLICY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        Routing["UnknownValue"] = "UNKNOWN_VALUE";
    })(Routing = IPSecConnectionTunnel.Routing || (IPSecConnectionTunnel.Routing = {}));
    let OracleCanInitiate;
    (function (OracleCanInitiate) {
        OracleCanInitiate["InitiatorOrResponder"] = "INITIATOR_OR_RESPONDER";
        OracleCanInitiate["ResponderOnly"] = "RESPONDER_ONLY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        OracleCanInitiate["UnknownValue"] = "UNKNOWN_VALUE";
    })(OracleCanInitiate = IPSecConnectionTunnel.OracleCanInitiate || (IPSecConnectionTunnel.OracleCanInitiate = {}));
    let NatTranslationEnabled;
    (function (NatTranslationEnabled) {
        NatTranslationEnabled["Enabled"] = "ENABLED";
        NatTranslationEnabled["Disabled"] = "DISABLED";
        NatTranslationEnabled["Auto"] = "AUTO";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        NatTranslationEnabled["UnknownValue"] = "UNKNOWN_VALUE";
    })(NatTranslationEnabled = IPSecConnectionTunnel.NatTranslationEnabled || (IPSecConnectionTunnel.NatTranslationEnabled = {}));
    let DpdMode;
    (function (DpdMode) {
        DpdMode["InitiateAndRespond"] = "INITIATE_AND_RESPOND";
        DpdMode["RespondOnly"] = "RESPOND_ONLY";
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        DpdMode["UnknownValue"] = "UNKNOWN_VALUE";
    })(DpdMode = IPSecConnectionTunnel.DpdMode || (IPSecConnectionTunnel.DpdMode = {}));
    function getJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "bgpSessionInfo": obj.bgpSessionInfo
                ? model.BgpSessionInfo.getJsonObj(obj.bgpSessionInfo)
                : undefined,
            "encryptionDomainConfig": obj.encryptionDomainConfig
                ? model.EncryptionDomainConfig.getJsonObj(obj.encryptionDomainConfig)
                : undefined,
            "phaseOneDetails": obj.phaseOneDetails
                ? model.TunnelPhaseOneDetails.getJsonObj(obj.phaseOneDetails)
                : undefined,
            "phaseTwoDetails": obj.phaseTwoDetails
                ? model.TunnelPhaseTwoDetails.getJsonObj(obj.phaseTwoDetails)
                : undefined
        });
        return jsonObj;
    }
    IPSecConnectionTunnel.getJsonObj = getJsonObj;
    function getDeserializedJsonObj(obj) {
        const jsonObj = Object.assign(Object.assign({}, obj), {
            "bgpSessionInfo": obj.bgpSessionInfo
                ? model.BgpSessionInfo.getDeserializedJsonObj(obj.bgpSessionInfo)
                : undefined,
            "encryptionDomainConfig": obj.encryptionDomainConfig
                ? model.EncryptionDomainConfig.getDeserializedJsonObj(obj.encryptionDomainConfig)
                : undefined,
            "phaseOneDetails": obj.phaseOneDetails
                ? model.TunnelPhaseOneDetails.getDeserializedJsonObj(obj.phaseOneDetails)
                : undefined,
            "phaseTwoDetails": obj.phaseTwoDetails
                ? model.TunnelPhaseTwoDetails.getDeserializedJsonObj(obj.phaseTwoDetails)
                : undefined
        });
        return jsonObj;
    }
    IPSecConnectionTunnel.getDeserializedJsonObj = getDeserializedJsonObj;
})(IPSecConnectionTunnel = exports.IPSecConnectionTunnel || (exports.IPSecConnectionTunnel = {}));
//# sourceMappingURL=i-psec-connection-tunnel.js.map