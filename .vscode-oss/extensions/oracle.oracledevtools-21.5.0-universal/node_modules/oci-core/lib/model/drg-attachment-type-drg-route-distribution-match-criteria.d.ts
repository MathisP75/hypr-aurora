/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
import * as model from "../model";
/**
 * The attachment type from which the DRG will import routes. Routes will be imported from
 * all attachments of this type.
 *
 */
export interface DrgAttachmentTypeDrgRouteDistributionMatchCriteria extends model.DrgRouteDistributionMatchCriteria {
    /**
     * The type of the network resource to be included in this match. A match for a network type implies that all
     * DRG attachments of that type insert routes into the table.
     *
     */
    "attachmentType": DrgAttachmentTypeDrgRouteDistributionMatchCriteria.AttachmentType;
    "matchType": string;
}
export declare namespace DrgAttachmentTypeDrgRouteDistributionMatchCriteria {
    enum AttachmentType {
        Vcn = "VCN",
        VirtualCircuit = "VIRTUAL_CIRCUIT",
        RemotePeeringConnection = "REMOTE_PEERING_CONNECTION",
        IpsecTunnel = "IPSEC_TUNNEL",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: DrgAttachmentTypeDrgRouteDistributionMatchCriteria, isParentJsonObj?: boolean): object;
    const matchType = "DRG_ATTACHMENT_TYPE";
    function getDeserializedJsonObj(obj: DrgAttachmentTypeDrgRouteDistributionMatchCriteria, isParentJsonObj?: boolean): object;
}
