/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.

 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
/**
 * Represents the load balancer Backend that is configured for an instance pool instance.
 */
export interface InstancePoolInstanceLoadBalancerBackend {
    /**
     * The OCID of the load balancer attached to the instance pool.
     */
    "loadBalancerId": string;
    /**
     * The name of the backend set on the load balancer.
     */
    "backendSetName": string;
    /**
     * The name of the backend in the backend set.
     */
    "backendName": string;
    /**
     * The health of the backend as observed by the load balancer.
     */
    "backendHealthStatus": InstancePoolInstanceLoadBalancerBackend.BackendHealthStatus;
}
export declare namespace InstancePoolInstanceLoadBalancerBackend {
    enum BackendHealthStatus {
        Ok = "OK",
        Warning = "WARNING",
        Critical = "CRITICAL",
        Unknown = "UNKNOWN",
        /**
         * This value is used if a service returns a value for this enum that is not recognized by this
         * version of the SDK.
         */
        UnknownValue = "UNKNOWN_VALUE"
    }
    function getJsonObj(obj: InstancePoolInstanceLoadBalancerBackend): object;
    function getDeserializedJsonObj(obj: InstancePoolInstanceLoadBalancerBackend): object;
}
